2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property totalProfitPercentage with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity:totalProfitPercentage]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for totalProfitPercentage
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: growth_report_entity.total_profit_percentage
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property totalProfitPercentage
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property totalSellPrice with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity:totalSellPrice]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for totalSellPrice
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: growth_report_entity.total_sell_price
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property totalSellPrice
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property totalSellQuantity with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity:totalSellQuantity]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for totalSellQuantity
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: growth_report_entity.total_sell_quantity
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property totalSellQuantity
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.KycEntity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name KycEntity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.KycEntity on table kyc_records
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.KycEntity] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.KycEntity
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:id]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property id
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, foreign, Hibernate-local--foreign generator, ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property confidence with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:confidence]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for confidence
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.confidence
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property confidence
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property createdAt with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:createdAt]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for createdAt
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.created_at
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property createdAt
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property decision with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:decision]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for decision
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.decision
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property decision
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property extractedAge with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:extractedAge]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for extractedAge
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.extracted_age
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property extractedAge
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property extractedDob with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:extractedDob]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for extractedDob
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.extracted_dob
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property extractedDob
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property extractedDocNumber with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:extractedDocNumber]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for extractedDocNumber
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.extracted_doc_number
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property extractedDocNumber
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property extractedDocumentType with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:extractedDocumentType]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for extractedDocumentType
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.extracted_document_type
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property extractedDocumentType
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property extractedFullName with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:extractedFullName]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for extractedFullName
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.extracted_full_name
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property extractedFullName
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userAddress with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userAddress]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userAddress
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_address
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userAddress
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userDob with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userDob]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userDob
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_dob
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userDob
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userDocNumber with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userDocNumber]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userDocNumber
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_doc_number
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userDocNumber
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userDocType with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userDocType]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userDocType
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_doc_type
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userDocType
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userEmail with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userEmail]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userEmail
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_email
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userEmail
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userFullName with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userFullName]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userFullName
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_full_name
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userFullName
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userGender with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userGender]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userGender
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_gender
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userGender
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userMobile with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userMobile]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userMobile
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_mobile
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userMobile
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userNationality with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.KycEntity:userNationality]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userNationality
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: kyc_records.user_nationality
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userNationality
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='id')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.j.e.i.CallbackDefinitionResolverLegacyImpl - Adding onCreate as PrePersist callback for entity com.tradingapplication.TradingApplication.Entity.KycEntity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.Portfolio
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name Portfolio
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.Portfolio on table portfolio
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Portfolio] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Portfolio
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Portfolio:id]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: portfolio.id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property id
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Portfolio:price]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for price
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: portfolio.price
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property price
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Portfolio:quantity]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: portfolio.quantity
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property quantity
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='stock_id')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property stocks
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property symbol with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Portfolio:symbol]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for symbol
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: portfolio.symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property trancationAmount with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Portfolio:trancationAmount]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for trancationAmount
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: portfolio.trancation_amount
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property trancationAmount
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property user
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Portfolio:username]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for username
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: portfolio.username
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property username
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.Stock
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name Stock
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.Stock on table stock
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Stock] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Stock
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:id]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property id
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property change with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:change]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for change
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.change
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property change
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property changePercent with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:changePercent]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for changePercent
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.change_percent
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property changePercent
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property domain with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:domain]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for domain
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.domain
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property domain
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property high with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:high]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for high
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.high
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property high
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property lastUpdated with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:lastUpdated]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for lastUpdated
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.last_updated
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property lastUpdated
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property latestTradingDay with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:latestTradingDay]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for latestTradingDay
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.latest_trading_day
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property latestTradingDay
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property low with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:low]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for low
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.low
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property low
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property open with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:open]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for open
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.open
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property open
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property previousClose with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:previousClose]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for previousClose
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.previous_close
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property previousClose
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property price with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:price]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for price
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.price
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property price
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property symbol with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Stock:symbol]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for symbol
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: stock.symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.TransactionBuySell
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name TransactionBuySell
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.TransactionBuySell on table transaction_buy_sell
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.TransactionBuySell] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.TransactionBuySell
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:id]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property id
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property StockName with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:StockName]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for StockName
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.stock_name
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property StockName
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property currentPrice with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:currentPrice]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for currentPrice
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.current_price
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property currentPrice
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property noOfStocks with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:noOfStocks]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for noOfStocks
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.no_of_stocks
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property noOfStocks
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property orderId with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:orderId]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for orderId
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.order_id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property orderId
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property totalAmount with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:totalAmount]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for totalAmount
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.total_amount
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property totalAmount
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property transactionTime with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:transactionTime]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for transactionTime
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.transaction_time
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property transactionTime
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property transactionType with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.TransactionBuySell:transactionType]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for transactionType
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction_buy_sell.transaction_type
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property transactionType
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_id')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.UserAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name UserAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.UserAccountDetails on table user_account_details
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserAccountDetails] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property walletId with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserAccountDetails:walletId]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for walletId
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: user_account_details.wallet_id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property walletId
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(wallet_id)]), walletId, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property balance with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserAccountDetails:balance]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for balance
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: user_account_details.balance
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property balance
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.UserLog
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name UserLog
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.UserLog on table user_log
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserLog] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserLog
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserLog:username]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for username
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: user_log.username
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property username
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserLog:password]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for password
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: user_log.password
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property password
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property role with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserLog:role]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for role
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: user_log.role
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property role
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.UserTable
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name UserTable
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.UserTable on table users
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserTable] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserTable
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property userId with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserTable:userId]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for userId
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: users.user_id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userId
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(user_id)]), userId, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserTable:email]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for email
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: users.email
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property email
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property name with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserTable:name]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for name
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: users.name
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property name
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='portfolio_ORDER')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='portfolio_KEY')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='portfolio_KEY')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Collection role: com.tradingapplication.TradingApplication.Entity.UserTable.portfolio
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property portfolio
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property profileImage with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserTable:profileImage]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for profileImage
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: users.profile_image
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property profileImage
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='stocks_ORDER')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='stocks_KEY')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='stocks_KEY')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Collection role: com.tradingapplication.TradingApplication.Entity.UserTable.stocks
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property stocks
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='transaction_ORDER')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='transaction_KEY')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='transaction_KEY')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Collection role: com.tradingapplication.TradingApplication.Entity.UserTable.transaction
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property transaction
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='user_log_username',referencedColumn='username')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userLog
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.UserTable:username]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for username
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: users.username
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property username
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.WalletReport
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name WalletReport
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.WalletReport on table report_table
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.WalletReport] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.WalletReport
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.WalletReport:id]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: report_table.id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property id
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property amount with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.WalletReport:amount]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for amount
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: report_table.amount
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property amount
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.WalletReport:status]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for status
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: report_table.status
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property status
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='timestamp')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property timestamp with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.WalletReport:timestamp]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for timestamp
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: report_table.timestamp
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property timestamp
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property type with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.WalletReport:type]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for type
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: report_table.type
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property type
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.WalletReport:username]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for username
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: report_table.username
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property username
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: com.tradingapplication.TradingApplication.Entity.Watchlist
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Import with entity name Watchlist
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.EntityBinder - Bind entity com.tradingapplication.TradingApplication.Entity.Watchlist on table watchlist
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Watchlist] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Watchlist
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Watchlist:id]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: watchlist.id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property id
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property symbol with lazy=false
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.tradingapplication.TradingApplication.Entity.Watchlist:symbol]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - building BasicValue for symbol
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.BasicValue - Skipping column re-registration: watchlist.symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for stockSymbol
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for averageBuyValue
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for averageSellValue
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currentHoldings
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currentProfitPercentage
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currentProfitValue
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for profitValue
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for totalBuyPrice
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for totalBuyQuantity
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for totalProfitPercentage
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for totalSellPrice
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for totalSellQuantity
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for confidence
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for decision
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for extractedAge
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for extractedDob
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for extractedDocNumber
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for extractedDocumentType
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for extractedFullName
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userAddress
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userDob
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userDocNumber
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userDocType
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userEmail
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userFullName
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userGender
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userMobile
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userNationality
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for trancationAmount
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for change
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for changePercent
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for domain
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for high
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastUpdated
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for latestTradingDay
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for low
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for open
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for previousClose
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for price
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for symbol
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for StockName
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for currentPrice
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for noOfStocks
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for orderId
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for totalAmount
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for transactionTime
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for transactionType
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for walletId
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for balance
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for userId
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for name
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for profileImage
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for timestamp
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for type
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for symbol
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [stock_symbol] to be non-null as it is part of the primary key for table [growth_report_entity]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [kyc_records]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [portfolio]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [stock]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [transaction_buy_sell]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [wallet_id] to be non-null as it is part of the primary key for table [user_account_details]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [user_log]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [report_table]
2025-06-05 11:09:04 [DEBUG] org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [watchlist]
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.CollectionSecondPass - Second pass for collection: com.tradingapplication.TradingApplication.Entity.UserTable.stocks
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Binding a OneToMany: com.tradingapplication.TradingApplication.Entity.UserTable.stocks through an association table
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn12: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.CollectionSecondPass - Mapped collection key: user_table_user_id, element: stocks_id
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.CollectionSecondPass - Second pass for collection: com.tradingapplication.TradingApplication.Entity.UserTable.portfolio
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Binding a OneToMany: com.tradingapplication.TradingApplication.Entity.UserTable.portfolio through an association table
2025-06-05 11:09:04 [DEBUG] o.h.b.r.c.i.ClassLoaderServiceImpl - HHH000194: Package not found or no package-info.java: com.tradingapplication.TradingApplication.Entity
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.CollectionSecondPass - Mapped collection key: user_table_user_id, element: portfolio_id
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userTable
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userdetails
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property userDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.model.internal.PropertyBinder - Building property kycEntity
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.CollectionSecondPass - Second pass for collection: com.tradingapplication.TradingApplication.Entity.UserTable.transaction
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Binding a OneToMany: com.tradingapplication.TradingApplication.Entity.UserTable.transaction through a foreign key
2025-06-05 11:09:04 [DEBUG] o.h.b.m.internal.CollectionBinder - Mapping collection: com.tradingapplication.TradingApplication.Entity.UserTable.transaction -> transaction_buy_sell
2025-06-05 11:09:04 [DEBUG] o.h.boot.model.internal.TableBinder - Retrieving property com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.m.i.CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.tradingapplication.TradingApplication.Entity.TransactionBuySell
2025-06-05 11:09:04 [DEBUG] o.h.b.i.InFlightMetadataCollectorImpl - Processing association property references
2025-06-05 11:09:04 [DEBUG] o.h.b.i.InFlightMetadataCollectorImpl - Processing association property references
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn13: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.internal.SessionFactoryImpl - Building session factory
2025-06-05 11:09:04 [DEBUG] o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-05 11:09:04 [DEBUG] o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1225c72d, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Git Working Project\Trading-app\target\test-classes;D:\Git Working Project\Trading-app\target\classes;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\user\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\user\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\user\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\user\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\user\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.5\spring-boot-starter-tomcat-3.4.5.jar;C:\Users\user\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\user\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\user\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\user\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-cache\3.4.5\spring-boot-starter-cache-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\spring-context-support\6.2.6\spring-context-support-6.2.6.jar;C:\Users\user\.m2\repository\com\github\ben-manes\caffeine\caffeine\3.1.8\caffeine-3.1.8.jar;C:\Users\user\.m2\repository\org\checkerframework\checker-qual\3.37.0\checker-qual-3.37.0.jar;C:\Users\user\.m2\repository\com\google\errorprone\error_prone_annotations\2.21.1\error_prone_annotations-2.21.1.jar;C:\Users\user\.m2\repository\com\itextpdf\kernel\8.0.2\kernel-8.0.2.jar;C:\Users\user\.m2\repository\com\itextpdf\bouncy-castle-connector\8.0.2\bouncy-castle-connector-8.0.2.jar;C:\Users\user\.m2\repository\com\itextpdf\io\8.0.2\io-8.0.2.jar;C:\Users\user\.m2\repository\com\itextpdf\commons\8.0.2\commons-8.0.2.jar;C:\Users\user\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\user\.m2\repository\com\itextpdf\layout\8.0.2\layout-8.0.2.jar;C:\Users\user\.m2\repository\org\json\json\20230227\json-20230227.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\user\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\user\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\user\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\user\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\user\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\user\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\user\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\user\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\user\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\user\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\user\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\user\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\user\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\user\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\user\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\user\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\user\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\user\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\user\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\10.1.40\tomcat-embed-jasper-10.1.40.jar;C:\Users\user\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\user\.m2\repository\org\apache\tomcat\tomcat-annotations-api\10.1.40\tomcat-annotations-api-10.1.40.jar;C:\Users\user\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\user\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\user\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.2\jakarta.servlet.jsp.jstl-api-3.0.2.jar;C:\Users\user\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\user\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\user\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\user\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\user\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\user\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\user\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\user\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\user\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\user\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\user\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\user\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\user\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\user\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\user\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\user\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\user\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\user\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\user\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\user\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\user\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\user\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\user\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\user\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\user\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\user\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\user\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\user\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.4.5\spring-boot-starter-mail-3.4.5.jar;C:\Users\user\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.3\jakarta.mail-2.0.3.jar;C:\Users\user\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\user\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.8.8\springdoc-openapi-starter-webmvc-ui-2.8.8.jar;C:\Users\user\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.8.8\springdoc-openapi-starter-webmvc-api-2.8.8.jar;C:\Users\user\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.8.8\springdoc-openapi-starter-common-2.8.8.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.5\spring-boot-starter-validation-3.4.5.jar;C:\Users\user\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\user\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.30\swagger-core-jakarta-2.2.30.jar;C:\Users\user\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\user\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.30\swagger-annotations-jakarta-2.2.30.jar;C:\Users\user\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.30\swagger-models-jakarta-2.2.30.jar;C:\Users\user\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\user\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.18.3\jackson-dataformat-yaml-2.18.3.jar;C:\Users\user\.m2\repository\org\webjars\swagger-ui\5.21.0\swagger-ui-5.21.0.jar;C:\Users\user\.m2\repository\org\webjars\webjars-locator-lite\1.0.1\webjars-locator-lite-1.0.1.jar;C:\Users\user\.m2\repository\org\jspecify\jspecify\1.0.0\jspecify-1.0.0.jar;C:\Users\user\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\user\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\user\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\user\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\user\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\user\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\user\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\user\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\user\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\user\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\user\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\user\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\user\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar;C:\Users\user\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.5\spring-boot-starter-security-3.4.5.jar;C:\Users\user\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\user\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\user\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\user\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\user\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\user\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\user\.m2\repository\org\springframework\security\spring-security-oauth2-client\6.4.5\spring-security-oauth2-client-6.4.5.jar;C:\Users\user\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\user\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\user\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\user\.m2\repository\com\nimbusds\oauth2-oidc-sdk\9.43.6\oauth2-oidc-sdk-9.43.6.jar;C:\Users\user\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\user\.m2\repository\com\nimbusds\content-type\2.2\content-type-2.2.jar;C:\Users\user\.m2\repository\com\nimbusds\lang-tag\1.7\lang-tag-1.7.jar;C:\Users\user\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Windows 10, APPLICATION_NAME=TradingApplication, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-2), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\JAVA ECLIPSE\jdk-21_windows-x64_bin\jdk-21.0.7\bin, sun.java.command=com.tradingapplication.TradingApplication.TradingApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-2), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2341b626, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\user, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-04-15, java.home=C:\JAVA ECLIPSE\jdk-21_windows-x64_bin\jdk-21.0.7, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.7+8-LTS-245, user.name=user, stdout.encoding=UTF-8, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\user\AppData\Local\Temp\, catalina.home=C:\Users\user\AppData\Local\Temp\tomcat.8080.6044695211449588935, java.version=21.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\Git Working Project\Trading-app, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=6468, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\user\AppData\Local\Temp\tomcat.8080.6044695211449588935, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6fa68935, native.encoding=Cp1252, java.library.path=C:\JAVA ECLIPSE\jdk-21_windows-x64_bin\jdk-21.0.7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/JAVA ECLIPSE/eclipse-jee-2025-03-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin/server;C:/JAVA ECLIPSE/eclipse-jee-2025-03-R-win32-x86_64/eclipse//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Java\jdk-24\bin;C:\Apache\Maven\bin;C:\apache-maven-3.8.6\bin;C:\Program Files\Git\cmd;E:\Apache\Maven\bin;C:\Users\user\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jdk-24\bin;;C:\JAVA ECLIPSE\eclipse-jee-2025-03-R-win32-x86_64\eclipse;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.7+8-LTS-245, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-2), java.class.version=65.0, LOGGED_APPLICATION_NAME=[TradingApplication] }
2025-06-05 11:09:04 [DEBUG] o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-06-05 11:09:04 [DEBUG] o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-05 11:09:04 [DEBUG] o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-05 11:09:04 [DEBUG] o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-05 11:09:04 [DEBUG] o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-05 11:09:04 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserAccountDetails] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserTable] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserTable
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Portfolio] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Portfolio
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.GrowthReportEntity
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Stock] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Stock
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserLog] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserLog
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Watchlist] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Watchlist
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.KycEntity] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.KycEntity
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.TransactionBuySell] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.TransactionBuySell
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.WalletReport] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.WalletReport
2025-06-05 11:09:04 [DEBUG] o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@441cbc8c] under count; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@9a57fbe] under every; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3979ef03] under any; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn14: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a40cc5f] under sinh; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b99f147] under cosh; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49e33b05] under tanh; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f94d4cd] under pi; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@737ad554] under log; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@574d01b5] under position; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a6234a] under overlay; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1e8dbdcf] under trim; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3bf80b3f] under cast; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@487e55c] under collate; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@328d2af5] under extract; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@411d9aae] under ifnull; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3a47c041] under pad; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1d17f50] under str; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5ad0371d] under format; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@77b51e03] under timestampadd; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@73748d7c] under timestampdiff; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@795557bd] under current_date; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@22e6ef55] under current_time; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dfcb80c] under current_timestamp; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a34d5a2] under local_date; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@790f87e6] under local_time; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c0643d5] under local_datetime; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7422aa81] under offset_datetime; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7837f862] under instant; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7d826035] under sql; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@23c49cbb] under count; prior registration was org.hibernate.dialect.function.CountFunction@441cbc8c
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@42d34ce0] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f94d4cd
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5605830] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@790f87e6
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6c0643d5
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6b8d1361] under trunc; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cab7bef] under date_trunc; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : chr -> char
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34c78ed6] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@574d01b5
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3361e1a6] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : every -> bool_and
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : any -> bool_or
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3074fab0] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5ad0371d
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7379b52] under listagg; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f0e045c] under mode; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@33deb8ca] under percentile_cont; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2468757b] under percentile_disc; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1fbe87af] under rank; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@60ed5ce0] under dense_rank; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@26b3b0df] under percent_rank; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4197cadf] under cume_dist; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@2a7fbebd] under array; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@20ffed4e] under array_list; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@1bf184c6] under array_agg; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@64cf6455] under array_position; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@6c58aa86] under array_positions; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@7b98d47f] under array_positions_list; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@646aea95] under array_length; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.DynamicDispatchFunction@427f49b3] under length; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@6b5ac7e0] under array_concat; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@565ccdd8] under array_prepend; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@65d1abc4] under array_append; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@5ddb441c] under array_contains; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@6083ed80] under array_contains_nullable; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayIncludesFunction@5081de45] under array_includes; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayIncludesFunction@38e6d01a] under array_includes_nullable; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayIntersectsFunction@3f9a98be] under array_intersects; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayIntersectsFunction@400a9d20] under array_intersects_nullable; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : array_overlaps -> array_intersects
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : array_overlaps_nullable -> array_intersects_nullable
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e271092] under array_get; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@10cf754c] under array_set; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@7b7b5083] under array_remove; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@6f8c2151] under array_remove_index; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49090fb2] under array_slice; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@228776ca] under array_replace; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d9d551] under array_trim; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@d51fad2] under array_fill; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@c241055] under array_fill_list; prior registration was null
2025-06-05 11:09:04 [DEBUG] o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@158c063d] under array_to_string; prior registration was null
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_agg(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_append( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_concat( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_fill(OBJECT element, INTEGER elementCount)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_fill_list(OBJECT element, INTEGER elementCount)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_get(ARRAY array, INTEGER index)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_includes(ARRAY haystackArray, OBJECT needleArray)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_includes_nullable(ARRAY haystackArray, OBJECT needleArray)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_intersects(ARRAY array0, OBJECT array1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_intersects_nullable(ARRAY array0, OBJECT array1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer array_length(ARRAY array)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_list( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - int[] array_positions(ARRAY array, OBJECT element)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - List array_positions_list(ARRAY array, OBJECT element)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_prepend( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_remove( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_remove_index( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_replace( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_set( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_slice(ARRAY array, INTEGER start, INTEGER end)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String array_to_string( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - array_trim(ARRAY array, INTEGER elementsToRemove)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - avg(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Date curdate()
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Date current date
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Time current time
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Date current_date
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Instant current_instant
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Time current_time
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Time curtime()
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - date_trunc(STRING field, TEMPORAL datetime)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - first_valueANY value
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Instant instant
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - last_valueANY value
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - length
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - LocalDate local date
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - LocalTime local time
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Time localtime
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC base, NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double median(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - mode()
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Timestamp now()
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double pi
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long row_number()
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long rownum()
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Object sql
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String str(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - sum(arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Timestamp sysdate
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - trunc( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - truncate( ... )
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.query.plan.cache - Starting QueryInterpretationCache(2048)
2025-06-05 11:09:04 [DEBUG] o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-06-05 11:09:04 [DEBUG] o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserAccountDetails#userdetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserAccountDetails#userdetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserAccountDetails] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.UserAccountDetails]: private accessor [balance]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserAccountDetails#userdetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#kycEntity` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#kycEntity` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#userAccountDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#userAccountDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#userLog` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#userLog` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserTable] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserTable
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn15: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.UserTable]: private accessor [email]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#kycEntity` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#userAccountDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserTable#userLog` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Portfolio] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Portfolio
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn16: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.Portfolio]: private accessor [price]
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.GrowthReportEntity
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn17: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Stock] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Stock
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.Stock]: private accessor [change]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserLog#userDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserLog#userDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.UserLog] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.UserLog
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn18: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.UserLog]: private accessor [password]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.UserLog#userDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.Watchlist] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.Watchlist
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.Watchlist]: private accessor [symbol]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.KycEntity#userTable` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.KycEntity#userTable` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.KycEntity] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.KycEntity
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=8, active=0, idle=8, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn19: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.KycEntity]: private accessor [confidence]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.KycEntity#userTable` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.TransactionBuySell#userDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.TransactionBuySell#userDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.TransactionBuySell] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.TransactionBuySell
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: private accessor [StockName]
2025-06-05 11:09:04 [DEBUG] o.hibernate.ormbytecode.interceptor - To-one property `com.tradingapplication.TradingApplication.Entity.TransactionBuySell#userDetails` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.tradingapplication.TradingApplication.Entity.WalletReport] is safe
2025-06-05 11:09:04 [DEBUG] o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.tradingapplication.TradingApplication.Entity.WalletReport
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn20: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 11:09:04 [DEBUG] o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [com.tradingapplication.TradingApplication.Entity.WalletReport]: private accessor [amount]
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Skipping collection row updates - com.tradingapplication.TradingApplication.Entity.UserTable.portfolio
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Skipping collection row updates - com.tradingapplication.TradingApplication.Entity.UserTable.stocks
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - com.tradingapplication.TradingApplication.Entity.UserTable.transaction
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - com.tradingapplication.TradingApplication.Entity.UserTable.transaction
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Skipping collection removals - com.tradingapplication.TradingApplication.Entity.UserTable.transaction
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting post-init callbacks
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.UserAccountDetails) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#{element}]) - element descriptor
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio)#finishInitialization
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio) - key descriptor
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.stocks#{element}]) - element descriptor
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.tradingapplication.TradingApplication.Entity.UserTable.stocks)#finishInitialization
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.tradingapplication.TradingApplication.Entity.UserTable.stocks) - key descriptor
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.transaction#{element}]) - element descriptor
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.tradingapplication.TradingApplication.Entity.UserTable.transaction)#finishInitialization
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(com.tradingapplication.TradingApplication.Entity.UserTable.transaction) - key descriptor
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.UserTable) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.Portfolio) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.GrowthReportEntity) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.Stock) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.UserLog.userDetails]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.UserLog) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.Watchlist) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.KycEntity.userTable]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.KycEntity) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails]
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.TransactionBuySell) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(com.tradingapplication.TradingApplication.Entity.WalletReport) `staticFetchableList` generator
2025-06-05 11:09:04 [DEBUG] o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.transaction#{element}]) - element descriptor
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : uad1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserAccountDetails)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserAccountDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fa14584] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : u1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b249068] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ke1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4e10c97c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userTable] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34c2e9c2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ul1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.balance]
 |  \-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.email]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.confidence]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.createdAt]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.decision]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.extractedAge]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.extractedDob]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.extractedDocNumber]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.extractedDocumentType]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.extractedFullName]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userAddress]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userDob]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userDocNumber]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userDocType]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userEmail]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userFullName]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userGender]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userMobile]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userNationality]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userTable]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.name]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.portfolio]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.profileImage]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.stocks]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.transaction]
 |  |  +-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userAccountDetails]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog.password]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog.role]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog.userDetails]
 |  |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserAccountDetails) {
          primaryTableReference : user_account_details as uad1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join LazyTableGroup (ke1 : com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity) {
                  primaryTableReference : kyc_records as ke1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity.userTable) {
                    }
                  }
                }
                left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog) {
                  primaryTableReference : user_log as ul1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.UserAccountDetails
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select wallet_id from user_account_details where wallet_id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into user_account_details (balance,wallet_id) values (?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update user_account_details set balance=? where wallet_id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from user_account_details where wallet_id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2654cdb1] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ke1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@29f9262d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userTable] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a565629] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : uad1_0
2025-06-05 11:09:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5953c31d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.userLog] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ul1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.email]
 |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.confidence]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.createdAt]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.decision]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.extractedAge]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.extractedDob]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.extractedDocNumber]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.extractedDocumentType]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.extractedFullName]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userAddress]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userDob]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userDocNumber]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userDocType]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userEmail]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userFullName]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userGender]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userMobile]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userNationality]
 |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userTable]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable.stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable.transaction]
 |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails.balance]
 |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails.userdetails]
 |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserTable.userLog]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.userLog.password]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.userLog.role]
 |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable.userLog.userDetails]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (ke1 : com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity) {
              primaryTableReference : kyc_records as ke1_0
              TableGroupJoins {
                left  join LazyTableGroup (ut2 : com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity.userTable) {
                }
              }
            }
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails) {
              primaryTableReference : user_account_details as uad1_0
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable.userLog) {
              primaryTableReference : user_log as ul1_0
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.UserTable
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select user_id from users where user_id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into users (email,name,profile_image,user_account_details_wallet_id,user_log_username,username,user_id) values (?,?,?,?,?,?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update users set email=?,name=?,profile_image=?,user_account_details_wallet_id=?,user_log_username=?,username=? where user_id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from users where user_id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39c2299d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio.stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio.stocks] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4691a797] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio.user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio.user] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio.price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio.quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio.stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio.symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio.trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio.user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio.stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio.user) {
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.Portfolio
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select id from portfolio where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into portfolio (price,quantity,stock_id,symbol,trancation_amount,user_id,username,id) values (?,?,?,?,?,?,?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from portfolio where id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : gre1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.GrowthReportEntity)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity] for NavigablePath [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.averageBuyValue]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.averageSellValue]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.currentHoldings]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.currentProfitPercentage]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.currentProfitValue]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.profitValue]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.totalBuyPrice]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.totalBuyQuantity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.totalProfitPercentage]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.totalSellPrice]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity.totalSellQuantity]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (gre1 : com.tradingapplication.TradingApplication.Entity.GrowthReportEntity) {
          primaryTableReference : growth_report_entity as gre1_0
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.GrowthReportEntity
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select stock_symbol from growth_report_entity where stock_symbol=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into growth_report_entity (average_buy_value,average_sell_value,current_holdings,current_profit_percentage,current_profit_value,profit_value,total_buy_price,total_buy_quantity,total_profit_percentage,total_sell_price,total_sell_quantity,stock_symbol) values (?,?,?,?,?,?,?,?,?,?,?,?)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from growth_report_entity where stock_symbol=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.symbol]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.Stock
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select id from stock where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update stock set change=?,change_percent=?,domain=?,high=?,last_updated=?,latest_trading_day=?,low=?,open=?,previous_close=?,price=?,symbol=? where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from stock where id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ul1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserLog)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserLog] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2337f76] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ud1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5cd338e5] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ke1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1ab1dc93] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userTable] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22d214cd] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : uad1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserLog]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.password]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.role]
 |  \-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.email]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.confidence]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.createdAt]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.decision]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.extractedAge]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.extractedDob]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.extractedDocNumber]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.extractedDocumentType]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.extractedFullName]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userAddress]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userDob]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userDocNumber]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userDocType]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userEmail]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userFullName]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userGender]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userMobile]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userNationality]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userTable]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.name]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.portfolio]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.profileImage]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.stocks]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.transaction]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails.balance]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails.userdetails]
 |  |  +-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userLog]
 |  |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserLog) {
          primaryTableReference : user_log as ul1_0
          TableGroupJoins {
            left  join LazyTableGroup (ud1 : com.tradingapplication.TradingApplication.Entity.UserLog.userDetails) {
              primaryTableReference : users as ud1_0
              TableGroupJoins {
                left  join LazyTableGroup (ke1 : com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity) {
                  primaryTableReference : kyc_records as ke1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity.userTable) {
                    }
                  }
                }
                left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails) {
                  primaryTableReference : user_account_details as uad1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.UserLog
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select username from user_log where username=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into user_log (password,role,username) values (?,?,?)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update user_log set password=?,role=? where username=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from user_log where username=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : w1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Watchlist)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Watchlist] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Watchlist] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Watchlist]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Watchlist.symbol]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (w1 : com.tradingapplication.TradingApplication.Entity.Watchlist) {
          primaryTableReference : watchlist as w1_0
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.Watchlist
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select id from watchlist where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into watchlist (symbol,id) values (?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update watchlist set symbol=? where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from watchlist where id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ke1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.KycEntity)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.KycEntity] for NavigablePath [com.tradingapplication.TradingApplication.Entity.KycEntity] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6a130ab6] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58551f45] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : uad1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7bccc916] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ul1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.KycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.confidence]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.createdAt]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.decision]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.extractedAge]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.extractedDob]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.extractedDocNumber]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.extractedDocumentType]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.extractedFullName]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userAddress]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userDob]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userDocNumber]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userDocType]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userEmail]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userFullName]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userGender]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userMobile]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userNationality]
 |  \-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.email]
 |  |  +-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.kycEntity]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.name]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.portfolio]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.profileImage]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.stocks]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.transaction]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails.balance]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails.userdetails]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog.password]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog.role]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog.userDetails]
 |  |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ke1 : com.tradingapplication.TradingApplication.Entity.KycEntity) {
          primaryTableReference : kyc_records as ke1_0
          TableGroupJoins {
             join LazyTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.KycEntity.userTable) {
              primaryTableReference : users as ut1_0
              TableGroupJoins {
                left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails) {
                  primaryTableReference : user_account_details as uad1_0
                }
                left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog) {
                  primaryTableReference : user_log as ul1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.KycEntity
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select id from kyc_records where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into kyc_records (confidence,created_at,decision,extracted_age,extracted_dob,extracted_doc_number,extracted_document_type,extracted_full_name,user_address,user_dob,user_doc_number,user_doc_type,user_email,user_full_name,user_gender,user_mobile,user_nationality,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update kyc_records set confidence=?,created_at=?,decision=?,extracted_age=?,extracted_dob=?,extracted_doc_number=?,extracted_document_type=?,extracted_full_name=?,user_address=?,user_dob=?,user_doc_number=?,user_doc_type=?,user_email=?,user_full_name=?,user_gender=?,user_mobile=?,user_nationality=? where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from kyc_records where id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : tbs1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.TransactionBuySell)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.TransactionBuySell] for NavigablePath [com.tradingapplication.TradingApplication.Entity.TransactionBuySell] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67e1132e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ud1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@173e97a0] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity] for NavigablePath [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ke1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a277828] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userTable] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30247dc9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userAccountDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : uad1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fb36080] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ul1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.StockName]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.currentPrice]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.noOfStocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.orderId]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.totalAmount]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.transactionTime]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.transactionType]
 |  \-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.email]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.confidence]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.createdAt]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.decision]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.extractedAge]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.extractedDob]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.extractedDocNumber]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.extractedDocumentType]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.extractedFullName]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userAddress]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userDob]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userDocNumber]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userDocType]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userEmail]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userFullName]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userGender]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userMobile]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userNationality]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userTable]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.name]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.portfolio]
 |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.profileImage]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.stocks]
 |  |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.transaction]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userAccountDetails]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userAccountDetails.balance]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userAccountDetails.userdetails]
 |  |  +-EntityFetchJoinedImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog.password]
 |  |  |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog.role]
 |  |  |  \-CircularBiDirectionalFetchImpl [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog.userDetails]
 |  |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (tbs1 : com.tradingapplication.TradingApplication.Entity.TransactionBuySell) {
          primaryTableReference : transaction_buy_sell as tbs1_0
          TableGroupJoins {
            left  join LazyTableGroup (ud1 : com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails) {
              primaryTableReference : users as ud1_0
              TableGroupJoins {
                left  join LazyTableGroup (ke1 : com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity) {
                  primaryTableReference : kyc_records as ke1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.kycEntity.userTable) {
                    }
                  }
                }
                left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userAccountDetails) {
                  primaryTableReference : user_account_details as uad1_0
                }
                left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.TransactionBuySell.userDetails.userLog) {
                  primaryTableReference : user_log as ul1_0
                }
              }
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.TransactionBuySell
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select id from transaction_buy_sell where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update transaction_buy_sell set stock_name=?,current_price=?,no_of_stocks=?,order_id=?,total_amount=?,transaction_time=?,transaction_type=?,user_id=? where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from transaction_buy_sell where id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : wr1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.WalletReport)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.WalletReport] for NavigablePath [com.tradingapplication.TradingApplication.Entity.WalletReport] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.WalletReport]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.WalletReport.amount]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.WalletReport.status]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.WalletReport.timestamp]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.WalletReport.type]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.WalletReport.username]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (wr1 : com.tradingapplication.TradingApplication.Entity.WalletReport) {
          primaryTableReference : report_table as wr1_0
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister - Static SQL for entity: com.tradingapplication.TradingApplication.Entity.WalletReport
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Version select: select id from report_table where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into report_table (amount,status,timestamp,type,username,id) values (?,?,?,?,?,default)
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Update (0): update report_table set amount=?,status=?,timestamp=?,type=?,username=? where id=?
2025-06-05 11:09:04 [DEBUG] o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from report_table where id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [CollectionTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e5d4897] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_1
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aae8cbc] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}.stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}.stocks] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7da0d9cf] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}.user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}.user] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.UserTable.portfolio) {
          primaryTableReference : users_portfolio as p1_0
          TableGroupJoins {
             join LazyTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}) {
              primaryTableReference : portfolio as p1_1
              TableGroupJoins {
                left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}.stocks) {
                }
                left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.UserTable.portfolio.{element}.user) {
                }
              }
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Static SQL for collection: com.tradingapplication.TradingApplication.Entity.UserTable.portfolio
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation -  Row insert: insert into users_portfolio (user_table_user_id,portfolio_id) values (?,?)
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation -  Row delete: delete from users_portfolio where user_table_user_id=? and portfolio_id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation -  One-shot delete: delete from users_portfolio where user_table_user_id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [CollectionTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable.stocks)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.stocks] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72b71605] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.stocks.{element}] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.stocks.{element}] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_1
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [com.tradingapplication.TradingApplication.Entity.UserTable.stocks]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.UserTable.stocks) {
          primaryTableReference : users_stocks as s1_0
          TableGroupJoins {
             join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.UserTable.stocks.{element}) {
              primaryTableReference : stock as s1_1
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Static SQL for collection: com.tradingapplication.TradingApplication.Entity.UserTable.stocks
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation -  Row insert: insert into users_stocks (user_table_user_id,stocks_id) values (?,?)
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation -  Row delete: delete from users_stocks where user_table_user_id=? and stocks_id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation -  One-shot delete: delete from users_stocks where user_table_user_id=?
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6bd76462] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.transaction] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.transaction] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable.transaction.{element})] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.transaction.{element}] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.transaction.{element}] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ab285d6] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable.transaction.{element}.userDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable.transaction.{element}.userDetails] 
2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-CollectionDomainResult [com.tradingapplication.TradingApplication.Entity.UserTable.transaction]

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.tradingapplication.TradingApplication.Entity.UserTable.transaction) {
          primaryTableReference : transaction_buy_sell as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (ud1 : com.tradingapplication.TradingApplication.Entity.UserTable.transaction.{element}.userDetails) {
            }
          }
        }
      }
    }

2025-06-05 11:09:04 [DEBUG] org.hibernate.orm.jdbc.mutation - Static SQL for collection: com.tradingapplication.TradingApplication.Entity.UserTable.transaction
2025-06-05 11:09:04 [DEBUG] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f9fc154] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4264aca8]
2025-06-05 11:09:04 [DEBUG] o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2025-06-05 11:09:04 [DEBUG] o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table growth_report_entity (stock_symbol varchar(255) not null, average_buy_value float(53) not null, average_sell_value float(53) not null, current_holdings float(53) not null, current_profit_percentage float(53) not null, current_profit_value float(53) not null, profit_value float(53) not null, total_buy_price float(53) not null, total_buy_quantity float(53) not null, total_profit_percentage float(53) not null, total_sell_price float(53) not null, total_sell_quantity float(53) not null, primary key (stock_symbol))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table kyc_records (id integer not null, confidence float(53), created_at timestamp(6), decision varchar(255), extracted_age integer, extracted_dob varchar(255), extracted_doc_number varchar(255), extracted_document_type varchar(255), extracted_full_name varchar(255), user_address varchar(255), user_dob varchar(255), user_doc_number varchar(255), user_doc_type varchar(255), user_email varchar(255), user_full_name varchar(255), user_gender varchar(255), user_mobile varchar(255), user_nationality varchar(255), primary key (id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table portfolio (id integer generated by default as identity, price float(53), quantity integer, symbol varchar(255), trancation_amount float(53), username varchar(255), stock_id bigint, user_id integer, primary key (id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table report_table (id bigint generated by default as identity, amount float(53), status varchar(255), timestamp timestamp(6), type varchar(255), username varchar(255), primary key (id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table stock (id bigint generated by default as identity, change varchar(255), change_percent varchar(255), domain varchar(255), high varchar(255), last_updated timestamp(6), latest_trading_day varchar(255), low varchar(255), open varchar(255), previous_close varchar(255), price varchar(255), symbol varchar(255), primary key (id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table transaction_buy_sell (id integer generated by default as identity, stock_name varchar(255), current_price float(53) not null, no_of_stocks integer not null, order_id varchar(255), total_amount float(53) not null, transaction_time timestamp(6), transaction_type varchar(255), user_id integer, primary key (id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table user_account_details (wallet_id integer generated by default as identity, balance float(53) not null, primary key (wallet_id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table user_log (username varchar(255) not null, password varchar(255), role varchar(255), primary key (username))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table users (user_id integer generated by default as identity, email varchar(255) not null, name varchar(255), profile_image blob, username varchar(255) not null, user_account_details_wallet_id integer, user_log_username varchar(255), primary key (user_id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table users_portfolio (user_table_user_id integer not null, portfolio_id integer not null)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table users_stocks (user_table_user_id integer not null, stocks_id bigint not null)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - create table watchlist (id bigint generated by default as identity, symbol varchar(255), primary key (id))
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users drop constraint if exists UKasbs4cn5smtqnx9dvun5uijrl
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users add constraint UKasbs4cn5smtqnx9dvun5uijrl unique (user_account_details_wallet_id)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users drop constraint if exists UK6oerku841ctxceqbt8xx7qqc1
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users add constraint UK6oerku841ctxceqbt8xx7qqc1 unique (user_log_username)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_portfolio drop constraint if exists UKac9uf419g8xh9bxy0i9qeae71
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_portfolio add constraint UKac9uf419g8xh9bxy0i9qeae71 unique (portfolio_id)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_stocks drop constraint if exists UK4fle09s9uda2lfcetltn3aq92
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_stocks add constraint UK4fle09s9uda2lfcetltn3aq92 unique (stocks_id)
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists kyc_records add constraint FKc732o3yqwuf2191j2fl8y4dd8 foreign key (id) references users
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists portfolio add constraint FKh151m4qty8qt66189nv40hae2 foreign key (stock_id) references stock
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists portfolio add constraint FK76ws6sj6wg26k7lcx6a5mtqi4 foreign key (user_id) references users
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists transaction_buy_sell add constraint FKsnqdg100ybapkjhwooli3jxu6 foreign key (user_id) references users
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users add constraint FKlay4x2hvxdx9ctdq2lijgxlk6 foreign key (user_account_details_wallet_id) references user_account_details
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users add constraint FKdu2jjuqc9upo7hq2gu1j71g06 foreign key (user_log_username) references user_log
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_portfolio add constraint FKha3sxaq9t9c7jout782sq4pex foreign key (portfolio_id) references portfolio
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_portfolio add constraint FKb936d4uou93apa0jp3te2kkte foreign key (user_table_user_id) references users
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_stocks add constraint FKp23rt3ku57pbftbo8w2dmqei8 foreign key (stocks_id) references stock
2025-06-05 11:09:04 [DEBUG] org.hibernate.SQL - alter table if exists users_stocks add constraint FKh9de4moqutt18eajoonkvs9t5 foreign key (user_table_user_id) references users
2025-06-05 11:09:04 [DEBUG] o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 487d4680-d466-4b46-a589-823d4008d1e4 (<unnamed>)
2025-06-05 11:09:04 [DEBUG] o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-06-05 11:09:04 [DEBUG] o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpaMappingContext'
2025-06-05 11:09:05 [DEBUG] o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Initializing JpaMetamodelMappingContext…
2025-06-05 11:09:05 [DEBUG] o.s.d.j.r.c.JpaMetamodelMappingContextFactoryBean - Finished initializing JpaMetamodelMappingContext
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.UserLog] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.UserTable] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.Stock] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.UserAccountDetails] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.KycEntity] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.TransactionBuySell] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.Portfolio] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.UserLogRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query UserLog.existsByUsername.count
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.UserLogRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'customAuthenticationFailureHandler'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jwtAuthenticationFilter' via constructor to bean named 'jwtUtil'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jwtAuthenticationFilter' via constructor to bean named 'userDetailsService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestContextFilter'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'formContentFilter'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'characterEncodingFilter'
2025-06-05 11:09:05 [DEBUG] o.s.b.w.s.ServletContextInitializerBeans - Mapping filters: springSecurityFilterChain urls=[/*] order=-100, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, jwtAuthenticationFilter urls=[/*] order=2147483647
2025-06-05 11:09:05 [DEBUG] o.s.b.w.s.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], h2Console urls=[/h2-console/*]
2025-06-05 11:09:05 [DEBUG] o.s.b.w.s.f.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-06-05 11:09:05 [DEBUG] c.t.T.S.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-05 11:09:05 [DEBUG] o.s.b.w.s.f.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-06-05 11:09:05 [DEBUG] o.s.b.w.s.DelegatingFilterProxyRegistrationBean$1 - Filter 'springSecurityFilterChain' configured for use
2025-06-05 11:09:05 [DEBUG] o.s.b.w.s.f.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'tradingApplication'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cacheConfig'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'forUserConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'passwordEncoder'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'forUserConfiguration' via constructor to bean named 'passwordEncoder'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userDetailsRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#8'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.UserDetailsRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.UserDetailsRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'UserTable.findByEmail'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query UserTable.findByEmail
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query UserTable.existsByEmail.count
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'UserTable.findByUsername'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query UserTable.findByUsername
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query UserTable.existsByUsername.count
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query UserTable.findByUsernameAndPassword.count
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.UserDetailsRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'loggingAspect'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stockCacheRefresher'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stockService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stockRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#4'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.StockRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.StockRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'Stock.findBySymbol'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query Stock.findBySymbol
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.StockRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stockService' via constructor to bean named 'stockRepository'
2025-06-05 11:09:05 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'finnhub.api.key' in PropertySource 'environmentProperties' with value of type String
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stockCacheRefresher' via constructor to bean named 'stockService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'buyRequestController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'buyService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'portfolioRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#3'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.PortfolioRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.PortfolioRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query Portfolio.findByUser_Id.count
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'Portfolio.findByUserAndStocks'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query Portfolio.findByUserAndStocks
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'Portfolio.findByUsername'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query Portfolio.findByUsername
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'Portfolio.findByUser'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query Portfolio.findByUser
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.PortfolioRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userAccountDetailsRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#2'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.UserAccountDetailsRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.UserAccountDetailsRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.UserAccountDetailsRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#5'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.TransactionRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.TransactionRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:206)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query TransactionBuySell.findAllByUser_Id.count
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.TransactionRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'growthReportService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'growthReportRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#0'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.GrowthReportRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.GrowthReportEntity] because it is not cache-safe
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.GrowthReportRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.GrowthReportRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'growthReportController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'kycController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'kycService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'kycRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#1'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.KycRepository.fragments#0'
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.KycRepository…
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'KycEntity.findByUserEmail'
2025-06-05 11:09:05 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1681)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:05 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query KycEntity.findByUserEmail
2025-06-05 11:09:05 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:05 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.KycRepository.
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycService' via constructor to bean named 'kycRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycService' via constructor to bean named 'userDetailsRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycService' via constructor to bean named 'userLogRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonObjectMapper'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterNamesModule'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModule'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonMixinModuleEntries'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jsonComponentModule'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jacksonGeoModule'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springDataWebSettings'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageModule'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2025-06-05 11:09:05 [DEBUG] o.s.c.e.PropertySourcesPropertyResolver - Found key 'idanalyzer.apikey' in PropertySource 'environmentProperties' with value of type String
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pdfGeneratorService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycController' via constructor to bean named 'kycService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycController' via constructor to bean named 'kycRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycController' via constructor to bean named 'userDetailsRepository'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'kycController' via constructor to bean named 'pdfGeneratorService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pdfController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pdfService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'portfolioController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'portfolioService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sellController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sellService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'setuppassword'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stockWebController'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userDashboardService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stockWebController' via constructor to bean named 'stockService'
2025-06-05 11:09:05 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stockWebController' via constructor to bean named 'userDashboardService'
2025-06-05 11:09:05 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AAPL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:05 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:06 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:06 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:06 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:06 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1356cd44
2025-06-05 11:09:06 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:06 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1861581124 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
2025-06-05 11:09:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2025-06-05 11:09:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'
2025-06-05 11:09:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionExecutionListeners'
2025-06-05 11:09:06 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2025-06-05 11:09:06 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:06 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(401812896<open>)] for JPA transaction
2025-06-05 11:09:06 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:06 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:06 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40110bb2]
2025-06-05 11:09:06 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:06 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:06 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:06 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:06 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@3e55476a
2025-06-05 11:09:06 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:06 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(401812896<open>)]
2025-06-05 11:09:06 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:06 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:06 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:06 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:06 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:06 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:06 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=202.82, change=-0.45, domain=apple.com, changePercent=-0.2214, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 11:09:06 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(401812896<open>)] after transaction
2025-06-05 11:09:08 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=GOOGL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:08 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:08 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:08 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:08 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:08 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@437d1d82
2025-06-05 11:09:08 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:08 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1528356224 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2115500454<open>)] for JPA transaction
2025-06-05 11:09:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7ccdd3bb]
2025-06-05 11:09:08 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:08 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:08 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:08 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:08 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@135cdd73
2025-06-05 11:09:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2115500454<open>)]
2025-06-05 11:09:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:08 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:08 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:08 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:08 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:08 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:08 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.215, low=166.36, price=168.05, change=1.87, domain=abc.xyz, changePercent=1.1253, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 11:09:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2115500454<open>)] after transaction
2025-06-05 11:09:09 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=MSFT&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:09 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:10 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:10 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:10 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a48dbe7
2025-06-05 11:09:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@345523690 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2063797580<open>)] for JPA transaction
2025-06-05 11:09:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4ce98968]
2025-06-05 11:09:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:10 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:10 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:10 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:10 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@178ed5bf
2025-06-05 11:09:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2063797580<open>)]
2025-06-05 11:09:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=463.87, change=0.9, domain=microsoft.com, changePercent=0.1944, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 11:09:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2063797580<open>)] after transaction
2025-06-05 11:09:11 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AMZN&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:11 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:12 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:12 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:12 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:12 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@610a506f
2025-06-05 11:09:12 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:12 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1049647444 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:12 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:12 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(535068056<open>)] for JPA transaction
2025-06-05 11:09:12 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:12 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:12 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1964f4a0]
2025-06-05 11:09:12 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:12 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:12 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:12 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:12 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@1413e788
2025-06-05 11:09:12 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:12 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(535068056<open>)]
2025-06-05 11:09:12 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:12 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:12 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:12 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:12 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:12 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:12 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.23, change=1.52, domain=amazon.com, changePercent=0.7389, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 11:09:12 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(535068056<open>)] after transaction
2025-06-05 11:09:13 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=TSLA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:13 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:13 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:13 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:13 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:13 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ac409be
2025-06-05 11:09:13 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:13 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@75491032 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:13 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:13 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1833099757<open>)] for JPA transaction
2025-06-05 11:09:13 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:13 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:13 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f8c2165]
2025-06-05 11:09:13 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:13 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:13 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:13 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:13 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@6597e6f6
2025-06-05 11:09:13 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:13 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1833099757<open>)]
2025-06-05 11:09:13 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:13 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:13 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:13 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:13 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:13 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:13 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=344.27, symbol=TSLA, high=345.6, low=327.3308, price=332.05, change=-12.22, domain=tesla.com, changePercent=-3.5495, latestTradingDay=2025-06-05, id=5, open=345.095}
2025-06-05 11:09:13 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1833099757<open>)] after transaction
2025-06-05 11:09:15 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=META&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:15 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:15 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:15 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:15 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:15 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28ddd9eb
2025-06-05 11:09:15 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:15 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@817272281 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:15 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:15 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(823047156<open>)] for JPA transaction
2025-06-05 11:09:15 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:15 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:15 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1757decd]
2025-06-05 11:09:15 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:15 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:15 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:15 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:15 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@63eb9b0d
2025-06-05 11:09:15 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:15 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(823047156<open>)]
2025-06-05 11:09:15 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:15 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:15 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:15 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:15 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:15 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:15 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=666.85, symbol=META, high=689.0, low=668.57, price=687.95, change=21.1, domain=meta.com, changePercent=3.1641, latestTradingDay=2025-06-05, id=6, open=669.32}
2025-06-05 11:09:15 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(823047156<open>)] after transaction
2025-06-05 11:09:16 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NFLX&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:16 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:17 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:17 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:17 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:17 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b128c60
2025-06-05 11:09:17 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:17 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@452157514 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2053347210<open>)] for JPA transaction
2025-06-05 11:09:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4cd641fd]
2025-06-05 11:09:17 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:17 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:17 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:17 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:17 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@15485e2b
2025-06-05 11:09:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2053347210<open>)]
2025-06-05 11:09:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:17 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:17 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:17 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:17 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:17 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:17 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.66, change=21.72, domain=netflix.com, changePercent=1.7833, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 11:09:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2053347210<open>)] after transaction
2025-06-05 11:09:18 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NVDA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:18 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:19 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:19 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:19 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:19 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64043be2
2025-06-05 11:09:19 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:19 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@313338131 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(613893608<open>)] for JPA transaction
2025-06-05 11:09:19 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:19 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@68e6b5a2]
2025-06-05 11:09:19 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:19 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:19 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:19 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:19 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@38b7e016
2025-06-05 11:09:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(613893608<open>)]
2025-06-05 11:09:19 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:19 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:19 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:19 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:19 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:19 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:19 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.92, change=0.7, domain=nvidia.com, changePercent=0.4957, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 11:09:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(613893608<open>)] after transaction
2025-06-05 11:09:20 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=ADBE&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:20 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:20 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:20 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:20 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:20 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:20 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:20 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@df8f7a6
2025-06-05 11:09:20 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:20 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:20 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:20 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:20 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:20 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@304185064 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1865872450<open>)] for JPA transaction
2025-06-05 11:09:20 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:20 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4082d72d]
2025-06-05 11:09:20 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:20 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:21 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:21 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:21 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@3e986daa
2025-06-05 11:09:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1865872450<open>)]
2025-06-05 11:09:21 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:21 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.91, change=1.42, domain=adobe.com, changePercent=0.3443, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 11:09:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1865872450<open>)] after transaction
2025-06-05 11:09:22 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=INTC&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:22 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:22 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:22 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:22 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:22 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7504215f
2025-06-05 11:09:22 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:22 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1176389780 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1746107841<open>)] for JPA transaction
2025-06-05 11:09:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e414ff9]
2025-06-05 11:09:22 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:22 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:22 [DEBUG] org.hibernate.SQL - insert into stock (change,change_percent,domain,high,last_updated,latest_trading_day,low,open,previous_close,price,symbol,id) values (?,?,?,?,?,?,?,?,?,?,?,default)
2025-06-05 11:09:22 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:22 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.Stock]: [Ljava.lang.Object;@38f9c2a9
2025-06-05 11:09:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1746107841<open>)]
2025-06-05 11:09:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:22 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:22 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:22 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:22 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:22 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:22 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.25, change=-0.04, domain=intel.com, changePercent=-0.1971, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 11:09:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1746107841<open>)] after transaction
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userDashboardController'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userService'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mailSender'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'userService' via constructor to bean named 'userLogRepository'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'userService' via constructor to bean named 'userDetailsRepository'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'userService' via constructor to bean named 'mailSender'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'walletReportService'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'walletReportRep'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#9'
2025-06-05 11:09:23 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.WalletReportRep.fragments#0'
2025-06-05 11:09:23 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:23 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.WalletReport] because it is not cache-safe
2025-06-05 11:09:23 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.WalletReportRep…
2025-06-05 11:09:23 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:23 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'WalletReport.findAllByOrderByTimestampDesc'
2025-06-05 11:09:23 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:23 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query WalletReport.findAllByOrderByTimestampDesc
2025-06-05 11:09:23 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:23 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.WalletReportRep.
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userLoginController'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userRegistrationController'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'watchlistController'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'watchlistService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'watchlistRepository'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.named-queries#7'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jpa.WatchlistRepository.fragments#0'
2025-06-05 11:09:24 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:24 [DEBUG] o.s.beans.CachedIntrospectionResults - Not strongly caching class [com.tradingapplication.TradingApplication.Entity.Watchlist] because it is not cache-safe
2025-06-05 11:09:24 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Initializing repository instance for com.tradingapplication.TradingApplication.Repository.WatchlistRepository…
2025-06-05 11:09:24 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:24 [DEBUG] o.s.d.j.repository.query.NamedQuery - Looking up named query 'Watchlist.findBySymbol'
2025-06-05 11:09:24 [DEBUG] o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy6/jdk.proxy6.$Proxy190.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:120)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:147)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1739)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.tradingapplication.TradingApplication.TradingApplication.main(TradingApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-06-05 11:09:24 [DEBUG] o.s.d.j.repository.query.NamedQuery - Did not find named query Watchlist.findBySymbol
2025-06-05 11:09:24 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:24 [DEBUG] o.s.d.r.c.s.RepositoryFactorySupport - Finished creation of repository instance for com.tradingapplication.TradingApplication.Repository.WatchlistRepository.
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userExceptionHandler'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'globalExceptionHandler'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'scheduledReportGenerator'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userDetailsServiceImpl'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'cacheManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'initData'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'initData' via factory method to bean named 'userDetailsRepository'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'objectPostProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@36265c08'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationManagerBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationEventPublisher'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@36265c08'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration' via constructor to bean named 'authorizedClientManagerRegistrar'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'OAuth2AuthorizedClientManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientRegistrationRepository'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'clientRegistrationRepository' via factory method to bean named 'spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authorizedClientRepository'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authorizedClientService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'authorizedClientService' via factory method to bean named 'clientRegistrationRepository'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'authorizedClientRepository' via factory method to bean named 'authorizedClientService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@36265c08'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerRegistrationCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerRegistrationCustomizer' via factory method to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'swaggerWebMvcConfigurer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.webmvc.ui.SwaggerConfig'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.properties.SwaggerUiConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'indexPageTransformer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.properties.SwaggerUiOAuthProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'swaggerWelcome'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springWebProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerWelcome' via factory method to bean named 'springWebProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springdocObjectMapperProvider' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiOAuthProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'swaggerWelcome'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'indexPageTransformer' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'swaggerResourceResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerResourceResolver' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerWebMvcConfigurer' via factory method to bean named 'org.springdoc.core.properties.SwaggerUiConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerWebMvcConfigurer' via factory method to bean named 'indexPageTransformer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerWebMvcConfigurer' via factory method to bean named 'swaggerResourceResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'filterChainDecoratorPostProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcHandlerMappingIntrospectorRequestTransformer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcHandlerMappingIntrospector'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.BuyRequestController:
	{POST [/api/buy]}: buyRequest(BuyRequestDTO,HttpSession)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.GrowthReportController:
	{GET [/growthreport]}: getGrowth(HttpServletRequest,Model)
	{GET [/download/csv]}: downloadCsv(HttpServletResponse)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.KycController:
	{POST [/kyc/submit]}: submitKyc(String,String,String,String,String,String,String,String,String,String,MultipartFile,MultipartFile,MultipartFile,Model)
	{GET [/kyc/checkStatus]}: checkKycStatus(HttpSession)
	{GET [/kyc/download/{id}]}: downloadKycPdf(Long)
	{GET [/kyc/admin]}: listAllKycs(Model)
	{GET [/kyc/form]}: showKycForm(Model,HttpSession)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.PdfController:
	{GET [/pdf/report]}: reportJsp(HttpSession,Model)
	{GET [/pdf/download]}: downloadPdf(HttpSession)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.PortfolioController:
	{GET [/holdings]}: showHoldingsById(HttpSession,Model)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.SellController:
	{POST [/api/sell]}: sellStock(SellRequestDTO,HttpSession)
	{GET [/api/test]}: testApi()
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.Setuppassword:
	{POST [/oauth2/setup-password]}: completeRegistration(String,String,String)
	{GET [/oauth2/setup-password]}: setupPassword(String,String,Model)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.StockWebController:
	{POST [/getStock]}: getStock(String,Model)
	{GET [/stocks]}: getAllStocks(Model)
	{GET [/stock/{symbol}]}: getStockDetails(String,Model,HttpSession)
	{GET [/viewstock]}: viewStockForm()
	{GET [/getAccountBalance]}: getAccountBalance(HttpSession)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.UserDashboardController:
	{GET [/wallet]}: getBalance(HttpSession,Model)
	{POST [/add]}: addBalance(HttpSession,Model,Double)
	{GET [/walletRep]}: showWallet(Model)
	{POST [/wallet/add]}: addMoney(double)
	{GET [/stock]}: getAllStocks(HttpSession,Model)
	{POST [/wallet/withdraw]}: withdrawMoney(double)
	{GET [/dashboard]}: userDashboard(HttpServletRequest,Model)
	{POST [/withdraw]}: withdrawBalance(HttpSession,Model,Double)
	{GET [/watchlist]}: showWatchlistPage()
	{GET [/profile]}: getUserDetails(Model)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.UserLoginController:
	{POST [/arise/uservalidate]}: sendOtp(String,Model,HttpSession)
	{GET [/arise/logout]}: logout(HttpServletRequest,HttpServletResponse)
	{POST [/arise/otpvalidate]}: otpValidate(String,HttpSession,Model)
	{GET [/arise/forget]}: getForgetPage()
	{GET [/arise/login]}: showLoginPage()
	{POST [/arise/updatePassword]}: updatePassword(String,HttpSession)
	{GET [/arise]}: showHomePage()
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.UserRegistrationController:
	{POST [/arise/verification]}: otpPage(HttpSession)
	{POST [/arise/register]}: addUsers(String,HttpSession,Model,RedirectAttributes)
	{GET [/arise/registration]}: getRegistrationPage()
	{GET [/arise/success]}: showSuccessPage()
	{GET [/arise/OTPPage]}: showOtpPage()
	{POST [/arise/validation]}: registerUser(UserRequestDTO,HttpSession,Model,RedirectAttributes)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	c.t.T.C.WatchlistController:
	{POST [/api/watchlist/add]}: add(WatchlistRequestDTO)
	{GET [/api/watchlist]}: getWatchlist()
	{DELETE [/api/watchlist/remove/{id}]}: deleteStock(Long)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.a.OpenApiWebMvcResource:
	{GET [/v3/api-docs], produces [application/json]}: openapiJson(HttpServletRequest,String,Locale)
	{GET [/v3/api-docs.yaml], produces [application/vnd.oai.openapi]}: openapiYaml(HttpServletRequest,String,Locale)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.u.SwaggerWelcomeWebMvc:
	{GET [/swagger-ui.html]}: redirectToUi(HttpServletRequest)
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.u.SwaggerConfigResource:
	{GET [/v3/api-docs/swagger-config], produces [application/json]}: openapiJson(HttpServletRequest)
2025-06-05 11:09:24 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 52 mappings in 'requestMappingHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'messageConverters'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'stringHttpMessageConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'resourceHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2025-06-05 11:09:24 [DEBUG] _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [static/], ServletContext [/]], /swagger-ui*/*swagger-initializer.js=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /swagger-ui*/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]}
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'securityFilterChain'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'securityFilterChain' via factory method to bean named 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webAuthorizationManagerPostProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationManagerPostProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, OAuth2AuthorizationRequestRedirectFilter, OAuth2LoginAuthenticationFilter, JwtAuthenticationFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'delegatingApplicationListener'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springSecurityFilterChain'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webSecurityExpressionHandler'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'privilegeEvaluator'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestDataValueProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.ObservationConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'authenticationManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'authenticationManager' via factory method to bean named 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultValidator'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.h.v.m.ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.AbstractConfigurationImpl - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.AbstractConfigurationImpl - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-06-05 11:09:24 [DEBUG] o.h.v.i.x.config.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via user class loader
2025-06-05 11:09:24 [DEBUG] o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-06-05 11:09:24 [DEBUG] o.h.v.i.x.c.ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-06-05 11:09:24 [DEBUG] o.h.v.i.x.config.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.r.TraversableResolvers - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.r.TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-06-05 11:09:24 [DEBUG] o.h.v.i.e.ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'error'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanNameViewResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66e4ff94'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conventionErrorViewResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'errorAttributes'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'basicErrorController'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localeResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'themeResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'flashMapManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewNameTranslator'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcValidator'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPatternParser'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUrlPathHelper'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcPathMatcher'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sortResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sortCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageableResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageableCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationTaskExecutor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'threadPoolTaskExecutorBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice' via constructor to bean named 'org.springdoc.core.configuration.SpringDocConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcViewResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'defaultViewResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@36265c08'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'viewResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerFunctionAdapter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'handlerExceptionResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2025-06-05 11:09:24 [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'queryDslQuerydslPredicateOperationCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'queryDslQuerydslPredicateOperationCustomizer' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springDataWebPropertiesProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'webConversionServiceProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'initExtraSchemas'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'localSpringDocParameterNameDiscoverer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'additionalModelsConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'additionalModelsConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileSupportConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'fileSupportConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'responseSupportConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'responseSupportConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'schemaPropertyDeprecatingConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'polymorphicModelConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'polymorphicModelConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'openAPIBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'securityParser'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertyResolverUtils' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@36265c08'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertyResolverUtils' via factory method to bean named 'messageSource'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'propertyResolverUtils' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'securityParser' via factory method to bean named 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openAPIBuilder' via factory method to bean named 'securityParser'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openAPIBuilder' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openAPIBuilder' via factory method to bean named 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'modelConverterRegistrar'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageableOpenAPIConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocPageableConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pageableOpenAPIConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'pageOpenAPIConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'pageOpenAPIConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'sortOpenAPIConverter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocSortConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'sortOpenAPIConverter' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'modelConverterRegistrar' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'operationBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'parameterObjectNamingStrategyCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataRestDelegatingMethodParameterCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'parameterBuilder' via factory method to bean named 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'parameterBuilder' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestBodyBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestBodyBuilder' via factory method to bean named 'parameterBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestBodyBuilder' via factory method to bean named 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'parameterBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'requestBodyBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'securityParser'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'operationBuilder' via factory method to bean named 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springDocProviders'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'routerFunctionProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'springDocProviders' via factory method to bean named 'springdocObjectMapperProvider'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'springDocCustomizers'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'globalOpenApiCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringDocSecurityOAuth2ClientConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringDocSecurityOAuth2ClientConfiguration' via constructor to bean named 'org.springdoc.core.configuration.SpringDocSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringSecurityLoginEndpointConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringSecurityLoginEndpointConfiguration' via constructor to bean named 'org.springdoc.core.configuration.SpringDocSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'openApiResource'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'requestBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'parameterBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'requestBodyBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'requestBuilder' via factory method to bean named 'localSpringDocParameterNameDiscoverer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'responseBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'operationBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'responseBuilder' via factory method to bean named 'propertyResolverUtils'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'requestBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'responseBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'operationBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'org.springdoc.core.properties.SpringDocConfigProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'springDocProviders'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'openApiResource' via factory method to bean named 'springDocCustomizers'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'swaggerConfigResource'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'swaggerConfigResource' via factory method to bean named 'swaggerWelcome'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'applicationAvailability'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'lifecycleProcessor'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'data-jpa.repository-aot-processor#0'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'offsetResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'h2ConsoleLogger'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientHttpRequestFactoryBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'clientHttpRequestFactoryBuilder' via factory method to bean named 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'clientHttpRequestFactorySettings'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'clientHttpRequestFactorySettings' via factory method to bean named 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcTemplate'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'jdbcClient'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'taskScheduler'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'taskScheduler' via factory method to bean named 'threadPoolTaskSchedulerBuilder'
2025-06-05 11:09:24 [DEBUG] o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionTemplate'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientSsl'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restClientBuilderConfigurer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'multipartResolver'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'fileSystemWatcherFactory'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathFileSystemWatcher'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'classPathRestartStrategy'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'optionalLiveReloadServer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'liveReloadServerEventListener'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
2025-06-05 11:09:24 [DEBUG] o.s.b.f.s.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase -2147483647
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'springBootLoggingLifecycle'
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 1073741823
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147481599
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerStartStop'
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147482623
2025-06-05 11:09:24 [DEBUG] o.s.c.s.DefaultLifecycleProcessor - Successfully started bean 'webServerGracefulShutdown'
2025-06-05 11:09:24 [DEBUG] o.s.b.a.l.ConditionEvaluationReportLogger - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.sql.DataSource' (OnClassCondition)
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcClientAutoConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.mail.internet.MimeMessage', 'jakarta.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2ClientAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity', 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   OAuth2ClientRegistrationRepositoryConfiguration matched:
      - OAuth2 Clients Configured Condition found registered clients 301267532694-rrrmgsnbkddvetbt7lc2iee2m2dc8mkk.apps.googleusercontent.com (ClientsConfiguredCondition)

   OAuth2ClientRegistrationRepositoryConfiguration#clientRegistrationRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.security.oauth2.client.registration.ClientRegistrationRepository; SearchStrategy: all) found bean 'clientRegistrationRepository' (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientRepository matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   OAuth2WebSecurityConfiguration#authorizedClientService matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.oauth2.client.OAuth2AuthorizedClientService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestClientAutoConfiguration#restClientSsl matched:
      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#springDataWebSettings matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfigProperties matched:
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   SpringDocConfiguration#fileSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#globalOpenApiCustomizer matched:
      - @ConditionalOnMissingBean (names: globalOpenApiCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#initExtraSchemas matched:
      - @ConditionalOnProperty (springdoc.enable-extra-schemas) matched (OnPropertyCondition)

   SpringDocConfiguration#openAPIBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OpenAPIService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#operationBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.OperationService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#parameterBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericParameterService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#parameterObjectNamingStrategyCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.ParameterObjectNamingStrategyCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#polymorphicModelConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#requestBodyBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.RequestBodyService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#responseSupportConverter matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#schemaPropertyDeprecatingConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#securityParser matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.SecurityService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.SpringDocCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springDocProviders matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDocProviders; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration#springdocObjectMapperProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.QuerydslProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.data.querydsl.binding.QuerydslBindingsFactory' (OnClassCondition)

   SpringDocConfiguration.QuerydslProvider#queryDslQuerydslPredicateOperationCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocConfiguration.WebConversionServiceConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService' (OnClassCondition)

   SpringDocPageableConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Pageable' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocPageableConfiguration#dataRestDelegatingMethodParameterCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocPageableConfiguration#pageOpenAPIConverter matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PagedModel', 'org.springframework.data.web.config.SpringDataWebSettings' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PageOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocPageableConfiguration#pageableOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.model-converters.pageable-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.PageableOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocSecurityConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.SecurityFilterChain' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-spring-security:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocSecurityConfiguration.SpringDocSecurityOAuth2ClientConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient' (OnClassCondition)

   SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.servlet.Filter' (OnClassCondition)

   SpringDocSortConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.domain.Sort' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocSortConfiguration#sortOpenAPIConverter matched:
      - @ConditionalOnProperty (springdoc.sort-converter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.core.converters.SortOpenAPIConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SpringDocWebMvcConfiguration#openApiResource matched:
      - @ConditionalOnExpression (#{(${springdoc.use-management-port:false} == false ) and ${springdoc.enable-default-api-docs:true}}) resulted in true (OnExpressionCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#requestBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.service.RequestService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#responseBuilder matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.service.GenericResponseService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration#springWebProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction' (OnClassCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   SslAutoConfiguration#sslBundleRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerConfig#indexPageTransformer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerConfigResource matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerResourceResolver matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerResourceResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWebMvcConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerConfig#swaggerWelcome matched:
      - @ConditionalOnProperty (springdoc.use-management-port=false) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SwaggerUiConfigProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   SwaggerUiOAuthProperties matched:
      - @ConditionalOnProperty (springdoc.swagger-ui.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration' (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskScheduler matched:
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionManagerCustomizationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:
      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration matched:
      - @ConditionalOnEnabledResourceChain found class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration unknown cache type (CacheCondition)
      Matched:
         - @ConditionalOnClass found required classes 'com.github.benmanes.caffeine.cache.Caffeine', 'org.springframework.cache.caffeine.CaffeineCacheManager' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceCheckpointRestoreConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   ElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GenericCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration unknown cache type (CacheCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'jakarta.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MultipleOpenApiSupportConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 3 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnListGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (MultipleOpenApiSupportCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (springdoc.api-docs.enabled) matched (OnPropertyCondition)

   MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)
         - Ancestor org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration unknown cache type (CacheCondition)

   OAuth2AuthorizationServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2AuthorizationServerJwtAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)

   OAuth2WebSecurityConfiguration.OAuth2SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PulsarAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   PulsarReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcProxyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass found unwanted class 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' (ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Hooks' (OnClassCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'jakarta.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SimpleCacheConfiguration:
      Did not match:
         - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration unknown cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' securityFilterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   SpringDocConfiguration#oas31ModelConverter:
      Did not match:
         - @ConditionalOnProperty (springdoc.explicit-object-schema=true) did not find property 'springdoc.explicit-object-schema' (OnPropertyCondition)

   SpringDocConfiguration#propertiesResolverForSchema:
      Did not match:
         - @ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties' (OnPropertyCondition)

   SpringDocConfiguration#propertyCustomizingConverter:
      Did not match:
         - @ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer (OnBeanCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled'; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 2 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 0 matched 3 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnListGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) did not find any beans of type org.springdoc.core.models.GroupedOpenApi (CacheOrGroupedOpenApiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration#springdocBeanFactoryPostProcessor2:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult' (OnClassCondition)

   SpringDocConfiguration.SpringDocActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties' (OnClassCondition)

   SpringDocConfiguration.SpringDocRepositoryRestConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocConfiguration.SpringDocWebFluxSupportConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   SpringDocDataRestConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration' (OnClassCondition)

   SpringDocFunctionCatalogConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer' (OnClassCondition)

   SpringDocGroovyConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.lang.MetaClass' (OnClassCondition)

   SpringDocHateoasConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.server.LinkRelationProvider' (OnClassCondition)

   SpringDocJacksonKotlinModuleConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.module.kotlin.KotlinModule' (OnClassCondition)

   SpringDocJavadocConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.therapi.runtimejavadoc.CommentFormatter' (OnClassCondition)

   SpringDocKotlinConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'kotlin.coroutines.Continuation' (OnClassCondition)

   SpringDocKotlinxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'kotlinx.coroutines.flow.Flow' (OnClassCondition)

   SpringDocSecurityConfiguration.SpringDocSecurityOAuth2Configuration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService' (OnClassCondition)

   SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration#springSecurityLoginEndpointCustomizer:
      Did not match:
         - @ConditionalOnProperty (springdoc.show-login-endpoint) did not find property 'springdoc.show-login-endpoint' (OnPropertyCondition)

   SpringDocSortConfiguration#dataRestDelegatingMethodParameterCustomizer:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer; SearchStrategy: all) found beans of type 'org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer' dataRestDelegatingMethodParameterCustomizer (OnBeanCondition)

   SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   SwaggerConfig#springWebProvider:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider (OnBeanCondition)

   SwaggerConfig#swaggerUiHome:
      Did not match:
         - @ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path' (OnPropertyCondition)

   SwaggerConfig.SwaggerActuatorWelcomeConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping' (OnClassCondition)

   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)

   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)

   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskSchedulerVirtualThreads:
      Did not match:
         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 3 did not; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass found unwanted class 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository' (UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springdoc.core.configuration.SpringDocSpecPropertiesConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2025-06-05 11:09:24 [DEBUG] o.s.b.a.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2025-06-05 11:09:24 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AAPL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:24 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1093005230<open>)] for JPA transaction
2025-06-05 11:09:24 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:24 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b23a266]
2025-06-05 11:09:24 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:24 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:24 [DEBUG] org.hibernate.SQL - insert into user_account_details (balance,wallet_id) values (?,default)
2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:24 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.UserAccountDetails]: [Ljava.lang.Object;@5e73f970
2025-06-05 11:09:24 [DEBUG] org.hibernate.SQL - insert into user_log (password,role,username) values (?,?,?)
2025-06-05 11:09:24 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 11:09:24 [DEBUG] org.hibernate.SQL - insert into users (email,name,profile_image,user_account_details_wallet_id,user_log_username,username,user_id) values (?,?,?,?,?,?,default)
2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:09:24 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.UserTable]: [Ljava.lang.Object;@8ab7462
2025-06-05 11:09:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1093005230<open>)]
2025-06-05 11:09:24 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:24 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:24 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:24 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 11:09:24 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:24 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:24 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=null, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, kycEntity=null, userId=1, email=test@gmail.com, stocks=null, transaction=null, username=test}
2025-06-05 11:09:24 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=10000.0, userdetails=null}
2025-06-05 11:09:24 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$BxGpaJRNSkJ0DcJT7x2bb.mnVFnCOGDInezYRh2T0.RVG.VU13zQ6, role=ROLE_USER, userDetails=null, username=test}
2025-06-05 11:09:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1093005230<open>)] after transaction
2025-06-05 11:09:24 [DEBUG] o.s.b.a.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2025-06-05 11:09:24 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:24 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:24 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:24 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@486e5d9f
2025-06-05 11:09:24 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:24 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:24 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1668606230 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1769487414<open>)] for JPA transaction
2025-06-05 11:09:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6aac511a]
2025-06-05 11:09:25 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock)] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock.symbol]

2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:25 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock)@1668975385 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1769487414<open>)]
2025-06-05 11:09:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=202.82, change=-0.45, domain=apple.com, changePercent=-0.2214, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1769487414<open>)] after transaction
2025-06-05 11:09:25 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=GOOGL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:25 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:25 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:25 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:25 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7b972df8
2025-06-05 11:09:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:25 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@927108367 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2088798094<open>)] for JPA transaction
2025-06-05 11:09:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@61df2366]
2025-06-05 11:09:25 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:25 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2088798094<open>)]
2025-06-05 11:09:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.215, low=166.36, price=168.05, change=1.87, domain=abc.xyz, changePercent=1.1253, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 11:09:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2088798094<open>)] after transaction
2025-06-05 11:09:25 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=MSFT&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:25 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:26 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:26 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c9725e
2025-06-05 11:09:26 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:26 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@313433590 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1505315203<open>)] for JPA transaction
2025-06-05 11:09:26 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:26 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@572f9ce]
2025-06-05 11:09:26 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:26 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1505315203<open>)]
2025-06-05 11:09:26 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:26 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:26 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=463.87, change=0.9, domain=microsoft.com, changePercent=0.1944, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1505315203<open>)] after transaction
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AMZN&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:26 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:26 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a6760f
2025-06-05 11:09:26 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:26 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1399175390 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(45058657<open>)] for JPA transaction
2025-06-05 11:09:26 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:26 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@499c6fb8]
2025-06-05 11:09:26 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:26 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:26 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(45058657<open>)]
2025-06-05 11:09:26 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:26 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:26 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:26 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.23, change=1.52, domain=amazon.com, changePercent=0.7389, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 11:09:26 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(45058657<open>)] after transaction
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=TSLA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:26 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:27 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ce9e8ce
2025-06-05 11:09:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@238021887 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(57874340<open>)] for JPA transaction
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10ca8d4c]
2025-06-05 11:09:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(57874340<open>)]
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=344.27, symbol=TSLA, high=345.6, low=327.3308, price=332.05, change=-12.22, domain=tesla.com, changePercent=-3.5495, latestTradingDay=2025-06-05, id=5, open=345.095}
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(57874340<open>)] after transaction
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=META&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:27 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5187ce95
2025-06-05 11:09:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1962747696 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(655734552<open>)] for JPA transaction
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13bf4b7e]
2025-06-05 11:09:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(655734552<open>)]
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=666.85, symbol=META, high=689.0, low=668.57, price=687.95, change=21.1, domain=meta.com, changePercent=3.1641, latestTradingDay=2025-06-05, id=6, open=669.32}
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(655734552<open>)] after transaction
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NFLX&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:27 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@104a3f44
2025-06-05 11:09:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@799020763 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(206206404<open>)] for JPA transaction
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@658bfb99]
2025-06-05 11:09:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(206206404<open>)]
2025-06-05 11:09:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.66, change=21.72, domain=netflix.com, changePercent=1.7833, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 11:09:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(206206404<open>)] after transaction
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NVDA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:27 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:28 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c948e0d
2025-06-05 11:09:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:28 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1708529251 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(887982026<open>)] for JPA transaction
2025-06-05 11:09:28 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:28 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49212be1]
2025-06-05 11:09:28 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:28 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(887982026<open>)]
2025-06-05 11:09:28 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.92, change=0.7, domain=nvidia.com, changePercent=0.4957, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(887982026<open>)] after transaction
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=ADBE&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:28 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@133ff5f8
2025-06-05 11:09:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:28 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1911037051 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(785282122<open>)] for JPA transaction
2025-06-05 11:09:28 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:28 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@36df8c94]
2025-06-05 11:09:28 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:28 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(785282122<open>)]
2025-06-05 11:09:28 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.91, change=1.42, domain=adobe.com, changePercent=0.3443, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 11:09:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(785282122<open>)] after transaction
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=INTC&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 11:09:28 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:09:29 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:09:29 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:09:29 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:09:29 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d68f7de
2025-06-05 11:09:29 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(28).symbol) 
2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:09:29 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@329555641 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:09:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:09:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(638860100<open>)] for JPA transaction
2025-06-05 11:09:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:09:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:09:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73b998ce]
2025-06-05 11:09:29 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:09:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:09:29 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.id=?
2025-06-05 11:09:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:09:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(638860100<open>)]
2025-06-05 11:09:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:09:29 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:09:29 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:09:29 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-06-05 11:09:29 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 11:09:29 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:09:29 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.25, change=-0.04, domain=intel.com, changePercent=-0.1971, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 11:09:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(638860100<open>)] after transaction
2025-06-05 11:09:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:09:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:10:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:10:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@77a4208
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@632d5bd9
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-05 11:10:21 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /test
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(952298<open>)] for JPA transaction
2025-06-05 11:10:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@838574213 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:21 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:21 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@68ea8cba]
2025-06-05 11:10:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:21 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:21 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.stocks)@1660807562 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.userAccountDetails)@1637239694 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.kycEntity)@385386649 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserLog -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserLog)@1214079160 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserLog))
	  com.tradingapplication.TradingApplication.Entity.UserLog.userDetails -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserLog.userDetails)@1467624521 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserLog.userDetails])@85248639)
	  com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.transaction)@981219202 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserLog.userDetails.portfolio)@419944661 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))

2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(952298<open>)]
2025-06-05 11:10:21 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@838574213 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(952298<open>)] after transaction
2025-06-05 11:10:21 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 619166A8DFABF3D494CDAAE3851784C9
2025-06-05 11:10:21 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /test
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(613314895<open>)] for JPA transaction
2025-06-05 11:10:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@288153116 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:21 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:21 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a33a3bd]
2025-06-05 11:10:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:21 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(613314895<open>)]
2025-06-05 11:10:21 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@288153116 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(613314895<open>)] after transaction
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/test", parameters={}
2025-06-05 11:10:21 [DEBUG] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-05 11:10:21 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:21 [DEBUG] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-05 11:10:21 [DEBUG] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource test.]
2025-06-05 11:10:21 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-05 11:10:21 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-05 11:10:21 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /error
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-05 11:10:21 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-06-05 11:10:21 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:21 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-06-05 11:10:21 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-05 11:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(380743175<open>)] for JPA transaction
2025-06-05 11:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@802273367 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5bf3da9e]
2025-06-05 11:10:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(380743175<open>)]
2025-06-05 11:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@802273367 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(380743175<open>)] after transaction
2025-06-05 11:10:23 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 1D9BF9271FB9D411FE9C66FEA42A80BF
2025-06-05 11:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(957989026<open>)] for JPA transaction
2025-06-05 11:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2013416781 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@244839c0]
2025-06-05 11:10:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(957989026<open>)]
2025-06-05 11:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2013416781 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(957989026<open>)] after transaction
2025-06-05 11:10:23 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-05 11:10:23 [DEBUG] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-05 11:10:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:23 [DEBUG] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-05 11:10:23 [DEBUG] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-06-05 11:10:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:23 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-05 11:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-05 11:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /error
2025-06-05 11:10:23 [DEBUG] o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-05 11:10:23 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-06-05 11:10:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:23 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-06-05 11:10:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:23 [DEBUG] o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-05 11:10:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:10:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:10:50 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(286898728<open>)] for JPA transaction
2025-06-05 11:10:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@543027059 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:50 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:50 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@76d7e6f9]
2025-06-05 11:10:50 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:50 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(286898728<open>)]
2025-06-05 11:10:50 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@543027059 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(286898728<open>)] after transaction
2025-06-05 11:10:50 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 357A58A7661735C9616C39277E2893B1
2025-06-05 11:10:50 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(783772721<open>)] for JPA transaction
2025-06-05 11:10:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@149982974 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:50 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:50 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@71051af0]
2025-06-05 11:10:50 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:50 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(783772721<open>)]
2025-06-05 11:10:50 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:50 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@149982974 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:50 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(783772721<open>)] after transaction
2025-06-05 11:10:50 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-05 11:10:50 [DEBUG] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-05 11:10:50 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:50 [DEBUG] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-05 11:10:50 [DEBUG] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-06-05 11:10:50 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:50 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-05 11:10:50 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-05 11:10:50 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /error
2025-06-05 11:10:50 [DEBUG] o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-05 11:10:50 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-06-05 11:10:50 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:50 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-06-05 11:10:50 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:50 [DEBUG] o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-05 11:10:57 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(963403691<open>)] for JPA transaction
2025-06-05 11:10:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@413014653 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:57 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:57 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20eded7a]
2025-06-05 11:10:57 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:57 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(963403691<open>)]
2025-06-05 11:10:57 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@413014653 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(963403691<open>)] after transaction
2025-06-05 11:10:57 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 972499D8A3BFB96A995D66A2B669F710
2025-06-05 11:10:57 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(656933834<open>)] for JPA transaction
2025-06-05 11:10:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@586233328 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:10:57 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:10:57 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@483ff3a9]
2025-06-05 11:10:57 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:10:57 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(656933834<open>)]
2025-06-05 11:10:57 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:10:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@586233328 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:10:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(656933834<open>)] after transaction
2025-06-05 11:10:57 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-05 11:10:57 [DEBUG] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-05 11:10:57 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:57 [DEBUG] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-05 11:10:57 [DEBUG] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-06-05 11:10:57 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:57 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-05 11:10:57 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-05 11:10:57 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /error
2025-06-05 11:10:57 [DEBUG] o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-05 11:10:57 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-06-05 11:10:57 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:57 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-06-05 11:10:57 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:10:57 [DEBUG] o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-05 11:11:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:11:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:11:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:11:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:11:46 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /test
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1092100146<open>)] for JPA transaction
2025-06-05 11:11:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@616561367 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:11:46 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:11:46 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f1d35c9]
2025-06-05 11:11:46 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:11:46 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1092100146<open>)]
2025-06-05 11:11:46 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:11:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@616561367 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1092100146<open>)] after transaction
2025-06-05 11:11:46 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A20BE881803372A8BBFE019D1BBB6988
2025-06-05 11:11:46 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /test
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(186756328<open>)] for JPA transaction
2025-06-05 11:11:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1231305347 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:11:46 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:11:46 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57c32881]
2025-06-05 11:11:46 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:11:46 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(186756328<open>)]
2025-06-05 11:11:46 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:11:46 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1231305347 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:11:46 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(186756328<open>)] after transaction
2025-06-05 11:11:46 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/test", parameters={}
2025-06-05 11:11:46 [DEBUG] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-05 11:11:46 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:46 [DEBUG] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-05 11:11:46 [DEBUG] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource test.]
2025-06-05 11:11:46 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:46 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-05 11:11:46 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-05 11:11:46 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /error
2025-06-05 11:11:46 [DEBUG] o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-05 11:11:46 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-06-05 11:11:46 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:46 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-06-05 11:11:46 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:46 [DEBUG] o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-05 11:11:48 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1079941944<open>)] for JPA transaction
2025-06-05 11:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1358654431 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4865498]
2025-06-05 11:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:11:48 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1079941944<open>)]
2025-06-05 11:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1358654431 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1079941944<open>)] after transaction
2025-06-05 11:11:48 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 0E16686A960A0F7A4B1E56239E64618A
2025-06-05 11:11:48 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1007152564<open>)] for JPA transaction
2025-06-05 11:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1010433517 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@25e257d3]
2025-06-05 11:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:11:48 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1007152564<open>)]
2025-06-05 11:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1010433517 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1007152564<open>)] after transaction
2025-06-05 11:11:48 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-05 11:11:48 [DEBUG] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/], ServletContext [/]]
2025-06-05 11:11:48 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:48 [DEBUG] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-06-05 11:11:48 [DEBUG] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource .]
2025-06-05 11:11:48 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:48 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-05 11:11:48 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-05 11:11:48 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /error
2025-06-05 11:11:48 [DEBUG] o.s.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
2025-06-05 11:11:48 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2025-06-05 11:11:48 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:48 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-06-05 11:11:48 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:11:48 [DEBUG] o.s.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-06-05 11:12:02 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /test
2025-06-05 11:12:02 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /arise/login
2025-06-05 11:12:02 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /arise/login
2025-06-05 11:12:02 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/arise/login", parameters={}
2025-06-05 11:12:02 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.UserLoginController#showLoginPage()
2025-06-05 11:12:02 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:02 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:12:02 [DEBUG] o.s.web.servlet.view.JstlView - View name [auth/Arise], model {}
2025-06-05 11:12:02 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/auth/Arise.jsp]
2025-06-05 11:12:02 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/auth/Arise.jsp
2025-06-05 11:12:02 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/auth/Arise.jsp
2025-06-05 11:12:03 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:03 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:03 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /
2025-06-05 11:12:03 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /arise/login
2025-06-05 11:12:03 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /arise/login
2025-06-05 11:12:03 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/arise/login", parameters={}
2025-06-05 11:12:03 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.UserLoginController#showLoginPage()
2025-06-05 11:12:03 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:03 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:12:03 [DEBUG] o.s.web.servlet.view.JstlView - View name [auth/Arise], model {}
2025-06-05 11:12:03 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/auth/Arise.jsp]
2025-06-05 11:12:03 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/auth/Arise.jsp
2025-06-05 11:12:03 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/auth/Arise.jsp
2025-06-05 11:12:03 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:03 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:12:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:12:16 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /arise/login
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(299302550<open>)] for JPA transaction
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1682711121 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5441d2db]
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(299302550<open>)]
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1682711121 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(299302550<open>)] after transaction
2025-06-05 11:12:17 [DEBUG] o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-06-05 11:12:17 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 8BFB3FA2805B5EFA5282BD59F05C2842
2025-06-05 11:12:17 [DEBUG] o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=8BFB3FA2805B5EFA5282BD59F05C2842], Granted Authorities=[ROLE_ROLE_USER]]
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(380298226<open>)] for JPA transaction
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1521214501 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70808adb]
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(380298226<open>)]
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1521214501 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(380298226<open>)] after transaction
2025-06-05 11:12:17 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /dashboard
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1089307955<open>)] for JPA transaction
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1546848037 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3b1d9fbe]
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1089307955<open>)]
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1546848037 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1089307955<open>)] after transaction
2025-06-05 11:12:17 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 137720DE5F72665F81528F18BCD0C84A
2025-06-05 11:12:17 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /dashboard
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1047030932<open>)] for JPA transaction
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@922220403 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3d838ed9]
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1047030932<open>)]
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@922220403 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1047030932<open>)] after transaction
2025-06-05 11:12:17 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/dashboard", parameters={}
2025-06-05 11:12:17 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.UserDashboardController#userDashboard(HttpServletRequest, Model)
2025-06-05 11:12:17 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2834dd3d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59142c2c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:12:17 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47e6650f
2025-06-05 11:12:17 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@1644472170 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@944779570 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@2146661847 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@692509879 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@1857949954 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@1474196550 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@744173320 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.portfolio)@439711080 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.transaction)@1877158473 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userAccountDetails)@1171694888 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.userLog)@179063581 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.KycEntity.userTable -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity.userTable)@990109973 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.KycEntity.userTable])@1304704350)
	  com.tradingapplication.TradingApplication.Entity.KycEntity -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity)@1028335147 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.KycEntity))
	  com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.KycEntity.userTable.stocks)@1440183868 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))

2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join kyc_records ke1_0 on u1_0.user_id=ke1_0.id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.portfolio)@1849351988 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails)@862453339 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserAccountDetails))
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.transaction)@1206382406 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.userLog)@1946743336 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails)@1291014370 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails])@1089141249)
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.stocks)@940552325 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserAccountDetails.userdetails.kycEntity)@187014174 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)

2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1219456492<open>)] for JPA transaction
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1363687488 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7d062842]
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(41))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(41)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).symbol]

2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(41)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:17 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 11:12:17 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(41) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(41))@1222654104 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1219456492<open>)]
2025-06-05 11:12:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1363687488 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:12:17 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:12:17 [DEBUG] o.s.web.servlet.view.JstlView - View name [UserDashboard], model {username=test, balance=10000.0, stocks=[com.tradingapplication.TradingApplication.Entity.Stock@2e4b026e, com.tradingapplication.TradingApplication.Entity.Stock@42fad68c, com.tradingapplication.TradingApplication.Entity.Stock@1acca87c, com.tradingapplication.TradingApplication.Entity.Stock@53a16745, com.tradingapplication.TradingApplication.Entity.Stock@258f572d, com.tradingapplication.TradingApplication.Entity.Stock@3155bba6, com.tradingapplication.TradingApplication.Entity.Stock@4e257ab8, com.tradingapplication.TradingApplication.Entity.Stock@1666b776, com.tradingapplication.TradingApplication.Entity.Stock@498fbca8, com.tradingapplication.TradingApplication.Entity.Stock@559ba6b4]}
2025-06-05 11:12:17 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/UserDashboard.jsp]
2025-06-05 11:12:17 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:17 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:17 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:17 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:18 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:18 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:18 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:18 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:18 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:18 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /dashboard
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1981635988<open>)] for JPA transaction
2025-06-05 11:12:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@371254351 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2e2fe093]
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:19 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1981635988<open>)]
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@371254351 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1981635988<open>)] after transaction
2025-06-05 11:12:19 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 116290A30C42770E7824074BF44616DE
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /dashboard
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1213744880<open>)] for JPA transaction
2025-06-05 11:12:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@973528458 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@798c554]
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:19 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1213744880<open>)]
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@973528458 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1213744880<open>)] after transaction
2025-06-05 11:12:19 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/dashboard", parameters={}
2025-06-05 11:12:19 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.UserDashboardController#userDashboard(HttpServletRequest, Model)
2025-06-05 11:12:19 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ab2b72c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@498689a9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:12:19 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c82d3e1
2025-06-05 11:12:19 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:19 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@1422312396 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@1034650553 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@728509263 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@72820404 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@1726827857 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@121285758 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@1304877445 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:19 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:19 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join kyc_records ke1_0 on u1_0.user_id=ke1_0.id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1347410255<open>)] for JPA transaction
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@770131976 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3fcbdbf2]
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(42))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(42)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).symbol]

2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(42)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:19 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 11:12:19 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(42) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(42))@1300470508 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1347410255<open>)]
2025-06-05 11:12:19 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:19 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@770131976 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:19 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:12:19 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-05 11:12:19 [DEBUG] o.s.web.servlet.view.JstlView - View name [UserDashboard], model {username=test, balance=10000.0, stocks=[com.tradingapplication.TradingApplication.Entity.Stock@27ff4094, com.tradingapplication.TradingApplication.Entity.Stock@59a8b68f, com.tradingapplication.TradingApplication.Entity.Stock@481cff8, com.tradingapplication.TradingApplication.Entity.Stock@5504617e, com.tradingapplication.TradingApplication.Entity.Stock@8a260aa, com.tradingapplication.TradingApplication.Entity.Stock@14a2a3ff, com.tradingapplication.TradingApplication.Entity.Stock@1e56409c, com.tradingapplication.TradingApplication.Entity.Stock@68afcdb9, com.tradingapplication.TradingApplication.Entity.Stock@73935736, com.tradingapplication.TradingApplication.Entity.Stock@72afafe0]}
2025-06-05 11:12:19 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/UserDashboard.jsp]
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:12:19 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:19 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stocks
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1464000848<open>)] for JPA transaction
2025-06-05 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@769548002 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@655b4190]
2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1464000848<open>)]
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@769548002 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1464000848<open>)] after transaction
2025-06-05 11:12:23 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A1CE99884DAE2DA19D307B97D61D0C15
2025-06-05 11:12:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stocks
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(836277704<open>)] for JPA transaction
2025-06-05 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@471899321 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@f82ee87]
2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(836277704<open>)]
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@471899321 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(836277704<open>)] after transaction
2025-06-05 11:12:23 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stocks", parameters={}
2025-06-05 11:12:23 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getAllStocks(Model)
2025-06-05 11:12:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(955574372<open>)] for JPA transaction
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@192091943 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4331216e]
2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(43))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(43)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).symbol]

2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(43)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:23 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 11:12:23 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(43) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(43))@1756129635 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(955574372<open>)]
2025-06-05 11:12:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@192091943 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:12:23 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:12:23 [DEBUG] o.s.web.servlet.view.JstlView - View name [allStocks], model {stocks=[StockRequestDTO(symbol=AAPL, price=202.82, open=202.91, high=206.24, low=202.1, previousClose=null, change=-0.45, changePercent=-0.2214, latestTradingDay=2025-06-05, domain=apple.com), StockRequestDTO(symbol=GOOGL, price=168.05, open=166.735, high=168.215, low=166.36, previousClose=null, change=1.87, changePercent=1.1253, latestTradingDay=2025-06-05, domain=abc.xyz), StockRequestDTO(symbol=MSFT, price=463.87, open=464.0, high=465.69, low=463.0201, previousClose=null, change=0.9, changePercent=0.1944, latestTradingDay=2025-06-05, domain=microsoft.com), StockRequestDTO(symbol=AMZN, price=207.23, open=206.55, high=208.18, low=205.18, previousClose=null, change=1.52, changePercent=0.7389, latestTradingDay=2025-06-05, domain=amazon.com), StockRequestDTO(symbol=TSLA, price=332.05, open=345.095, high=345.6, low=327.3308, previousClose=null, change=-12.22, changePercent=-3.5495, latestTradingDay=2025-06-05, domain=tesla.com), StockRequestDTO(symbol=META, price=687.95, open=669.32, high=689.0, low=668.57, previousClose=null, change=21.1, changePercent=3.1641, latestTradingDay=2025-06-05, domain=meta.com), StockRequestDTO(symbol=NFLX, price=1239.66, open=1220.735, high=1242.56, low=1219.88, previousClose=null, change=21.72, changePercent=1.7833, latestTradingDay=2025-06-05, domain=netflix.com), StockRequestDTO(symbol=NVDA, price=141.92, open=142.19, high=142.39, low=139.545, previousClose=null, change=0.7, changePercent=0.4957, latestTradingDay=2025-06-05, domain=nvidia.com), StockRequestDTO(symbol=ADBE, price=413.91, open=411.54, high=415.94, low=410.08, previousClose=null, change=1.42, changePercent=0.3443, latestTradingDay=2025-06-05, domain=adobe.com), StockRequestDTO(symbol=INTC, price=20.25, open=20.34, high=20.5, low=20.01, previousClose=null, change=-0.04, changePercent=-0.1971, latestTradingDay=2025-06-05, domain=intel.com)]}
2025-06-05 11:12:23 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/allStocks.jsp]
2025-06-05 11:12:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/allStocks.jsp
2025-06-05 11:12:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/allStocks.jsp
2025-06-05 11:12:24 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:24 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:27 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(230101995<open>)] for JPA transaction
2025-06-05 11:12:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@652290045 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67cb57c3]
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:27 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(230101995<open>)]
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@652290045 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(230101995<open>)] after transaction
2025-06-05 11:12:27 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 3B13125E0A93502E2BC67404E7730873
2025-06-05 11:12:27 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1026501759<open>)] for JPA transaction
2025-06-05 11:12:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1719284332 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@688c2cf4]
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:27 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1026501759<open>)]
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1719284332 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1026501759<open>)] after transaction
2025-06-05 11:12:27 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 11:12:27 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 11:12:27 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6be95aa1] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2aa1289] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:12:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b540d8d
2025-06-05 11:12:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:27 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@291885678 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@1917255561 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@922038808 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@948209108 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@130926088 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@1110625231 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@1565021283 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:27 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:12:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:27 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join kyc_records ke1_0 on u1_0.user_id=ke1_0.id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(737342687<open>)] for JPA transaction
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@866581062 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b63e35e]
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(737342687<open>)]
2025-06-05 11:12:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@866581062 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:12:27 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:12:27 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=202.82, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.45, changePercent=-0.2214, latestTradingDay=2025-06-05, domain=apple.com), balance=10000.0, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 11:12:27 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 11:12:27 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 11:12:27 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 11:12:27 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:27 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:29 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /kyc/checkStatus
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1277347398<open>)] for JPA transaction
2025-06-05 11:12:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@970110109 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2668a5c7]
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1277347398<open>)]
2025-06-05 11:12:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@970110109 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1277347398<open>)] after transaction
2025-06-05 11:12:29 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from EA2BF079A9947B662E4D59CB815FCD88
2025-06-05 11:12:29 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /kyc/checkStatus
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1087614669<open>)] for JPA transaction
2025-06-05 11:12:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@859649549 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49de8f27]
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1087614669<open>)]
2025-06-05 11:12:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@859649549 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1087614669<open>)] after transaction
2025-06-05 11:12:29 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/kyc/checkStatus", parameters={}
2025-06-05 11:12:29 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.KycController#checkKycStatus(HttpSession)
2025-06-05 11:12:29 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39d80c8d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42371f76] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:12:29 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a49cfdc
2025-06-05 11:12:29 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:29 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@976175850 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@1823676539 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@839260265 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@1004500896 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@2074565155 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@262399468 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@224686369 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:29 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:12:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:29 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join kyc_records ke1_0 on u1_0.user_id=ke1_0.id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 11:12:29 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json, application/yaml]
2025-06-05 11:12:29 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid request"]
2025-06-05 11:12:29 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:29 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-06-05 11:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /kyc/form
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1034448287<open>)] for JPA transaction
2025-06-05 11:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1351657017 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2d980a8f]
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:31 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1034448287<open>)]
2025-06-05 11:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1351657017 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1034448287<open>)] after transaction
2025-06-05 11:12:31 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from FCD88A2C098E576F334B5900101ED1D4
2025-06-05 11:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /kyc/form
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(444065964<open>)] for JPA transaction
2025-06-05 11:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@824935418 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@15ac7783]
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:31 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(444065964<open>)]
2025-06-05 11:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@824935418 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(444065964<open>)] after transaction
2025-06-05 11:12:31 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/kyc/form", parameters={}
2025-06-05 11:12:31 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.KycController#showKycForm(Model, HttpSession)
2025-06-05 11:12:31 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c0e84c6] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aebed16] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:12:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cec938c
2025-06-05 11:12:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:12:31 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@113469362 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@800123019 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@1560488702 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@1931741566 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@1858543199 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@1184581564 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@42713419 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:31 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:12:31 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join kyc_records ke1_0 on u1_0.user_id=ke1_0.id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 11:12:31 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:12:31 [DEBUG] o.s.web.servlet.view.JstlView - View name [kyc-form], model {username=test}
2025-06-05 11:12:31 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/kyc-form.jsp]
2025-06-05 11:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/kyc-form.jsp
2025-06-05 11:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/kyc-form.jsp
2025-06-05 11:12:31 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:12:31 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:12:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:12:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:13:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:13:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:13:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:13:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:14:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:14:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:14:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:14:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:14:52 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /kyc/submit
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(122037076<open>)] for JPA transaction
2025-06-05 11:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2057296087 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3891c17b]
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:14:52 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(122037076<open>)]
2025-06-05 11:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2057296087 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(122037076<open>)] after transaction
2025-06-05 11:14:52 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 16538AD13E615B5A3733F56BC58D947B
2025-06-05 11:14:52 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /kyc/submit
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(886708799<open>)] for JPA transaction
2025-06-05 11:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@127585090 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70b241c6]
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:14:52 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(886708799<open>)]
2025-06-05 11:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@127585090 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(886708799<open>)] after transaction
2025-06-05 11:14:52 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/kyc/submit", parameters={multipart}
2025-06-05 11:14:52 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.KycController#submitKyc(String, String, String, String, String, String, String, String, String, String, MultipartFile, MultipartFile, MultipartFile, Model)
2025-06-05 11:14:52 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.query.plan.cache - Creating and caching NativeQuery ParameterInterpretation - ParameterInterpretationImpl (SELECT COUNT(*) > 0 FROM users WHERE username = ?) : {
    
}
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:14:52 [DEBUG] org.hibernate.SQL - SELECT COUNT(*) > 0 FROM users WHERE username = ?
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f71d2b7] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1210a9bc] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:14:52 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b2cb959
2025-06-05 11:14:52 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:14:52 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@420508159 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@1154740375 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@1679024389 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@968027434 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@599260266 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@2025584579 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@64698904 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:14:52 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:14:52 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join kyc_records ke1_0 on u1_0.user_id=ke1_0.id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 11:14:52 [DEBUG] o.s.web.client.RestTemplate - HTTP POST https://api2.idanalyzer.com/scan
2025-06-05 11:14:52 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 11:14:52 [DEBUG] o.s.web.client.RestTemplate - Writing [{face=, profile=default, document=, document_secondary=}] as "application/json"
2025-06-05 11:15:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=1, idle=9, waiting=0)
2025-06-05 11:15:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:15:04 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 11:15:04 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 11:15:04 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1287266745<open>)] for JPA transaction
2025-06-05 11:15:04 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 11:15:04 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:04 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:04 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4918e93a]
2025-06-05 11:15:04 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 11:15:04 [DEBUG] o.h.e.i.AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.ForeignGenerator
2025-06-05 11:15:04 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:04 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1287266745<open>)]
2025-06-05 11:15:04 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:04 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 11:15:04 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 11:15:04 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 11:15:04 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 11:15:04 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 11:15:04 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 4 objects
2025-06-05 11:15:04 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 11:15:04 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 11:15:04 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.KycEntity{extractedDob=1997-06-26, userDocNumber=TN7220190008202, decision=reject, confidence=0.994, extractedDocumentType=D, userFullName=Anantha GopalaKrishnan, extractedAge=27, extractedFullName=ANANTHA GOPALAKRISHNAN H, extractedDocNumber=TN7220190008202, userAddress=chennai, createdAt=2025-06-05T11:15:04.804198300, userDocType=license, userDob=1997-06-26, userMobile=9524448576, userNationality=India, userEmail=ananthkrishhh@gmail.com, userGender=Male, userTable=com.tradingapplication.TradingApplication.Entity.UserTable#1, id=1}
2025-06-05 11:15:04 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, kycEntity=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 11:15:04 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=10000.0, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 11:15:04 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$BxGpaJRNSkJ0DcJT7x2bb.mnVFnCOGDInezYRh2T0.RVG.VU13zQ6, role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 11:15:04 [DEBUG] org.hibernate.SQL - insert into kyc_records (confidence,created_at,decision,extracted_age,extracted_dob,extracted_doc_number,extracted_document_type,extracted_full_name,user_address,user_dob,user_doc_number,user_doc_type,user_email,user_full_name,user_gender,user_mobile,user_nationality,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-06-05 11:15:04 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:15:04 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:15:04 [DEBUG] o.s.web.servlet.view.JstlView - View name [kyc_error], model {response=KycResponseDTO(success=true, decision=reject, confidence=0.994, message=Verification failed: mismatch, extractedData={dob=1997-06-26, documentNumber=TN7220190008202, fullName=ANANTHA GOPALAKRISHNAN H}), org.springframework.validation.BindingResult.response=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 11:15:04 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/kyc_error.jsp]
2025-06-05 11:15:04 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /WEB-INF/views/kyc_error.jsp
2025-06-05 11:15:04 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /WEB-INF/views/kyc_error.jsp
2025-06-05 11:15:05 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:05 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(851709972<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@199212358 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@139c24c0]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(851709972<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@199212358 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(851709972<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 27782AC1BB0904711902DAFEF1F8C8D2
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(419236220<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1312574474 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3cbdb73]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(419236220<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1312574474 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(419236220<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1175679832<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1684948824 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16b9458]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1175679832<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1684948824 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1175679832<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from F9C253ABEF3E604602595022EC3E4584
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1630505654<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@715454743 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@24b62fed]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1630505654<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@715454743 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1630505654<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2027852154<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@16268915 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@8396fba]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2027852154<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@16268915 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2027852154<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 294FE4CDEBA4E2AAF2B42DAB1FB4CBC9
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(27017615<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2084767819 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@721cafd5]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(27017615<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2084767819 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(27017615<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/login.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1533302495<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1190188088 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@41c9cb21]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1533302495<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1190188088 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1533302495<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 5B980057C15FD7EAEB87EB7A7C268A55
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/login.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(556041757<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2125667663 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@242d0b5d]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(556041757<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2125667663 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(556041757<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/background.gif
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(459480695<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@376095480 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1457b0b8]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(459480695<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@376095480 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(459480695<open>)] after transaction
2025-06-05 11:15:05 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from F00556B6BD3C3D5A41E612A0146B4131
2025-06-05 11:15:05 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/background.gif
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(335002849<open>)] for JPA transaction
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2017287639 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@55a328f8]
2025-06-05 11:15:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(335002849<open>)]
2025-06-05 11:15:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2017287639 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(335002849<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /h2-console/login.do?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1999439380<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@164355392 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@74ba88a4]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1999439380<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@164355392 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1999439380<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 68FAD5DE25B35F822DB92A80CE526E35
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /h2-console/login.do?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1238942831<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@266611340 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6157f0a]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1238942831<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@266611340 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1238942831<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/header.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tables.do?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/help.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/query.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(868088284<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1149598778 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6c502fd5]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(868088284<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1149598778 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(868088284<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 3A4A0EDA11B2709CAE12E75FD297E443
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/help.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1048577724<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@658968820 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42463291]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1048577724<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@658968820 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1048577724<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/header.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(835650136<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1086689401 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3da2af5a]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(835650136<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1086689401 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(835650136<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(68075667<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@237541835 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@25ffbc1]
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tables.do?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(68075667<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@237541835 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(68075667<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(946311895<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@105356012 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2a005958]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(946311895<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@105356012 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(946311895<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_disconnect.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1693249000<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1432517414 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@61b3c547]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1693249000<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1432517414 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1693249000<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_disconnect.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(534047516<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@494092380 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@92f95d]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_refresh.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1388755995<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1640234908 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@572fac79]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_line.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(315550084<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1711735937 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7748842b]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1062639810<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@643363028 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@26b972d2]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(534047516<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@494092380 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(534047516<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1062639810<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@643363028 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1062639810<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1388755995<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1640234908 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1388755995<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_refresh.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(315550084<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1711735937 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(315550084<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_line.gif
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_help.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(11991918<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1144447097 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2d773e26]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(11991918<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1144447097 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(11991918<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_help.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2062531383<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1397780785 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3b266eae]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2062531383<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1397780785 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2062531383<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run_selected.gif
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_stop.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(723125820<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@900208656 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5379c39b]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1611510202<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1416801099 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1bf66c5d]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1058869647<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@451249533 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@22b8fde0]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(723125820<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@900208656 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(723125820<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1888312224<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@885378863 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@37a82a9a]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1888312224<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@885378863 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1888312224<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run_selected.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2118464368<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1820955109 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9763900]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2118464368<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1820955109 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2118464368<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/query.jsp?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1611510202<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1416801099 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1611510202<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1058869647<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@451249533 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1058869647<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_stop.gif
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_history.gif
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_rollback.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1108104104<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1781801781 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2316e861]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1108104104<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1781801781 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1108104104<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_rollback.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2146987152<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@736865675 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@44663140]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2146987152<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@736865675 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2146987152<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(767385633<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1103659566 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4692eb4e]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(767385633<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1103659566 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(767385633<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1193998516<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1642417487 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@55e24490]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(310728173<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1479348062 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1193998516<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1642417487 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1193998516<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@571caeea]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(310728173<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1479348062 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(310728173<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_history.gif
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_commit.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(204877753<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@821706345 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@b844e75]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(812760640<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@849587207 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6689ca58]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(812760640<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@849587207 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(812760640<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(204877753<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@821706345 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(204877753<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_commit.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1602083755<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1154155739 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@68a1a323]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1602083755<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1154155739 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1602083755<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1428209218<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1046871054 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1b5f8f93]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1428209218<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1046871054 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1428209218<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/icon_run.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(442210967<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@758144033 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3ea6e75b]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(442210967<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@758144033 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(442210967<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/icon_run.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(971661310<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@36894334 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1d5b9eb3]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(971661310<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@36894334 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(971661310<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree.js
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(715973481<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@874462602 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@367f7cde]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(715973481<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@874462602 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(715973481<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 15F30AD8A2657F285CFD01798FC7358B
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree.js
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(852852422<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1070005033 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57236a9a]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(852852422<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1070005033 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(852852422<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_minus.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(37489187<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@796841436 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@11cbf610]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(37489187<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@796841436 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(37489187<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from FA8C66D635C4C2E3258E7CEAE08BECA3
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_minus.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(309363857<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@444635433 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3760b5dd]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(309363857<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@444635433 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(309363857<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_plus.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(629997289<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@250833096 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9c9a2f7]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(629997289<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@250833096 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(629997289<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_plus.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1193116911<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1393786642 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f779354]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1193116911<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1393786642 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1193116911<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_database.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(557858170<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@323729954 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@58a6cdaa]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(557858170<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@323729954 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(557858170<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_database.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1177008370<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@884569491 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5d968b28]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_table.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1177008370<open>)]
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@884569491 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1177008370<open>)] after transaction
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1733037176<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@455968132 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@ef6a4d4]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_empty.gif
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_column.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1048086508<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1659891494 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@caef21e]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1252945696<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@717874148 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@18b50695]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_type.gif
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1707685849<open>)] for JPA transaction
2025-06-05 11:15:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2121703467 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@58aebd3d]
2025-06-05 11:15:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index_az.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1665581380<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1784834947 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2829c81f]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_index.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(464570307<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@600396965 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@68f54765]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1733037176<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@455968132 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1733037176<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_table.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1048086508<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1659891494 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1048086508<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from F59844607303DC85BBB3AD3B4B8DD94E
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_empty.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1596418075<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@723196175 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59d109ec]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1252945696<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@717874148 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1252945696<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_column.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(306554794<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@171925114 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4727fe6]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1707685849<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2121703467 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1707685849<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_type.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(843475617<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1433300692 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6ffea088]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(843475617<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1433300692 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(843475617<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1824045298<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1697883743 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@32bfde64]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(306554794<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@171925114 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(306554794<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1665581380<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1784834947 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1665581380<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index_az.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(434910533<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@991851067 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a57052]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(434910533<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@991851067 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(434910533<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(464570307<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1596418075<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@723196175 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1596418075<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@600396965 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(464570307<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_index.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1824045298<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1697883743 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1425679768<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1001608598 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7863f619]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1824045298<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1425679768<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1001608598 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1425679768<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_users.gif
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_info.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1533069631<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1701769348 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4462f97b]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1533069631<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1701769348 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1533069631<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1826391133<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1653753417 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4861ba6b]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1826391133<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1653753417 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1826391133<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_info.gif
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_users.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1614650517<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@58261300 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59dbcd61]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1614650517<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@58261300 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1614650517<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2024849725<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@293332431 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@17e050f6]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2024849725<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@293332431 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2024849725<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_folder.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1962718192<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1293617321 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13e43d0a]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1962718192<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1293617321 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1962718192<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_folder.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(693523441<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1284437895 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13e45f9f]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(693523441<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1284437895 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(693523441<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_view.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2125654378<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@429002241 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f7cd17e]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2125654378<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@429002241 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2125654378<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 187D99B017913B4F77822682B44EDAE2
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_view.gif
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/tree_user.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1171705939<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@313021560 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67e8b591]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1171705939<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@313021560 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1171705939<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(770189166<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@189856019 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2a14b330]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(770189166<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@189856019 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(770189166<open>)] after transaction
2025-06-05 11:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/tree_user.gif
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1282518414<open>)] for JPA transaction
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1508837366 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2e1f0b4e]
2025-06-05 11:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1282518414<open>)]
2025-06-05 11:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1508837366 wrapping conn14: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1282518414<open>)] after transaction
2025-06-05 11:15:17 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /kyc/form
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1931540455<open>)] for JPA transaction
2025-06-05 11:15:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1307585389 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@54b9d3e8]
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:17 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1931540455<open>)]
2025-06-05 11:15:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1307585389 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1931540455<open>)] after transaction
2025-06-05 11:15:17 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from B3E2409385E5E29CDAAE36942958E522
2025-06-05 11:15:17 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /kyc/form
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(968535318<open>)] for JPA transaction
2025-06-05 11:15:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1720894276 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:17 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:17 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e07cb69]
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:17 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(968535318<open>)]
2025-06-05 11:15:17 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:17 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1720894276 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:17 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(968535318<open>)] after transaction
2025-06-05 11:15:17 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/kyc/form", parameters={}
2025-06-05 11:15:17 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.KycController#showKycForm(Model, HttpSession)
2025-06-05 11:15:17 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@770ae24c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1986f3f8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:15:17 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@766dea11
2025-06-05 11:15:17 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:15:17 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@1609876416 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@1245606114 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@1081166720 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@778389058 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@1467378317 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@1853270497 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@605143780 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:15:17 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:17 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:15:17 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:15:17 [DEBUG] o.s.web.servlet.view.JstlView - View name [kyc_already_submitted], model {}
2025-06-05 11:15:17 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/kyc_already_submitted.jsp]
2025-06-05 11:15:17 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/kyc_already_submitted.jsp
2025-06-05 11:15:17 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/kyc_already_submitted.jsp
2025-06-05 11:15:17 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:17 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /dashboard
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(247828295<open>)] for JPA transaction
2025-06-05 11:15:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@506089295 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1d255b19]
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:22 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(247828295<open>)]
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@506089295 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(247828295<open>)] after transaction
2025-06-05 11:15:22 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 06669AAAEAFFFB82C8D1893FDB2400B7
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /dashboard
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(146880116<open>)] for JPA transaction
2025-06-05 11:15:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@394569904 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20236b9c]
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:22 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(146880116<open>)]
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@394569904 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(146880116<open>)] after transaction
2025-06-05 11:15:22 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/dashboard", parameters={}
2025-06-05 11:15:22 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.UserDashboardController#userDashboard(HttpServletRequest, Model)
2025-06-05 11:15:22 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51755d73] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11482f32] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:15:22 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@10712816
2025-06-05 11:15:22 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:15:22 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@714189452 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@651777911 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@216037455 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@1999732959 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@1347654015 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@1012733677 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@871379753 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:22 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1278673854<open>)] for JPA transaction
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1048451080 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42925d6b]
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(44))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(44)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).symbol]

2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(44)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:15:22 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 11:15:22 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(44) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(44))@1946100860 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1278673854<open>)]
2025-06-05 11:15:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1048451080 wrapping conn15: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:15:22 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 11:15:22 [DEBUG] o.s.web.servlet.view.JstlView - View name [UserDashboard], model {username=test, balance=10000.0, stocks=[com.tradingapplication.TradingApplication.Entity.Stock@61702d02, com.tradingapplication.TradingApplication.Entity.Stock@4adf7fb9, com.tradingapplication.TradingApplication.Entity.Stock@7fdc4f02, com.tradingapplication.TradingApplication.Entity.Stock@750a4841, com.tradingapplication.TradingApplication.Entity.Stock@15f273df, com.tradingapplication.TradingApplication.Entity.Stock@24e1e46f, com.tradingapplication.TradingApplication.Entity.Stock@39581bae, com.tradingapplication.TradingApplication.Entity.Stock@1eb71484, com.tradingapplication.TradingApplication.Entity.Stock@185de006, com.tradingapplication.TradingApplication.Entity.Stock@33b4bdfe]}
2025-06-05 11:15:22 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/UserDashboard.jsp]
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:22 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:22 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /dashboard
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(63898393<open>)] for JPA transaction
2025-06-05 11:15:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@384667414 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4846f97d]
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(63898393<open>)]
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@384667414 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(63898393<open>)] after transaction
2025-06-05 11:15:23 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from C9B935025F8B05AF0E2ECBE851A31EFD
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /dashboard
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1490902919<open>)] for JPA transaction
2025-06-05 11:15:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1425353083 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@558f0ab5]
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1490902919<open>)]
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1425353083 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1490902919<open>)] after transaction
2025-06-05 11:15:23 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/dashboard", parameters={}
2025-06-05 11:15:23 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.UserDashboardController#userDashboard(HttpServletRequest, Model)
2025-06-05 11:15:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@111e2764] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails] 
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5f240153] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog] 
2025-06-05 11:15:23 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26e0f031
2025-06-05 11:15:23 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(26).username) 
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).email]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(26).username]

2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(26)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog) {
            }
          }
        }
      }
    }

2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:15:23 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).portfolio)@1416541049 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).stocks)@181117417 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userAccountDetails)@285079042 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@966055319)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).transaction)@1126130792 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).kycEntity)@1657532937 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.kycEntity])@465863285)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26).userLog)@895009616 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@870837927)
	  com.tradingapplication.TradingApplication.Entity.UserTable(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(26))@1256881695 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))

2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:23 [DEBUG] org.hibernate.SQL - select ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ul1_0.username,ul1_0.password,ul1_0.role,ut1_0.username from kyc_records ke1_0 join users ut1_0 on ut1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ut1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=ut1_0.user_log_username where ke1_0.id=?
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(92490495<open>)] for JPA transaction
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1568052894 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4e4bc0e8]
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(45))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(45)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).symbol]

2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(45)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 11:15:23 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 11:15:23 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(45) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(45))@1760919219 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(92490495<open>)]
2025-06-05 11:15:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1568052894 wrapping conn12: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 11:15:23 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected '*/*' given [*/*]
2025-06-05 11:15:23 [DEBUG] o.s.web.servlet.view.JstlView - View name [UserDashboard], model {username=test, balance=10000.0, stocks=[com.tradingapplication.TradingApplication.Entity.Stock@450999d8, com.tradingapplication.TradingApplication.Entity.Stock@6eae5c8, com.tradingapplication.TradingApplication.Entity.Stock@9911b6f, com.tradingapplication.TradingApplication.Entity.Stock@4a52ec08, com.tradingapplication.TradingApplication.Entity.Stock@439c7bc3, com.tradingapplication.TradingApplication.Entity.Stock@120912dd, com.tradingapplication.TradingApplication.Entity.Stock@13423990, com.tradingapplication.TradingApplication.Entity.Stock@4eada55c, com.tradingapplication.TradingApplication.Entity.Stock@6e4f9d29, com.tradingapplication.TradingApplication.Entity.Stock@348af5c7]}
2025-06-05 11:15:23 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/UserDashboard.jsp]
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/UserDashboard.jsp
2025-06-05 11:15:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 11:15:23 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 11:15:29 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /h2-console/query.do?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(910307489<open>)] for JPA transaction
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1912105714 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3c244758]
2025-06-05 11:15:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(910307489<open>)]
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1912105714 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(910307489<open>)] after transaction
2025-06-05 11:15:29 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 3E988D52C262A61932627C990893A55F
2025-06-05 11:15:29 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /h2-console/query.do?jsessionid=522ffc228b1598ba2c9c53d6d07966d7
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1883855692<open>)] for JPA transaction
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@807010585 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2e32e6ce]
2025-06-05 11:15:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1883855692<open>)]
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@807010585 wrapping conn16: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1883855692<open>)] after transaction
2025-06-05 11:15:29 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/table.js
2025-06-05 11:15:29 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /h2-console/stylesheet.css
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(870675226<open>)] for JPA transaction
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(175444388<open>)] for JPA transaction
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1592548329 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@781181124 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c5aa1e0]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4788f294]
2025-06-05 11:15:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(175444388<open>)]
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@781181124 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(175444388<open>)] after transaction
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(870675226<open>)]
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1592548329 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(870675226<open>)] after transaction
2025-06-05 11:15:29 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A2E7DCD5FFBDDDFCB2C22BEC19FA9677
2025-06-05 11:15:29 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/stylesheet.css
2025-06-05 11:15:29 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /h2-console/table.js
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(40991204<open>)] for JPA transaction
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@210024016 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1399563163<open>)] for JPA transaction
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@711658010 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3e83a752]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@55f8f958]
2025-06-05 11:15:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:29 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 11:15:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:29 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ke1_0.id,ke1_0.confidence,ke1_0.created_at,ke1_0.decision,ke1_0.extracted_age,ke1_0.extracted_dob,ke1_0.extracted_doc_number,ke1_0.extracted_document_type,ke1_0.extracted_full_name,ke1_0.user_address,ke1_0.user_dob,ke1_0.user_doc_number,ke1_0.user_doc_type,ke1_0.user_email,ke1_0.user_full_name,ke1_0.user_gender,ke1_0.user_mobile,ke1_0.user_nationality,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join kyc_records ke1_0 on ud1_0.user_id=ke1_0.id left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(40991204<open>)]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1399563163<open>)]
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:29 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@711658010 wrapping conn13: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:29 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@210024016 wrapping conn11: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1399563163<open>)] after transaction
2025-06-05 11:15:29 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(40991204<open>)] after transaction
2025-06-05 11:15:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:15:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:16:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:16:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:16:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:16:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:17:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:17:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:17:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:17:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:18:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:18:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:18:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:18:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:19:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:19:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:19:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:19:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:20:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:20:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:20:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:20:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:21:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:21:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:21:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:21:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:22:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:22:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:22:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:22:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:23:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:23:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:23:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:23:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:24:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:24:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:24:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:24:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:25:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:25:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:25:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:25:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:26:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:26:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:26:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:26:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:27:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:27:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:27:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:27:34 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 11:28:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 11:28:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
