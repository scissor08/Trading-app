2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:31 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:31 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:31 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36f13deb
2025-06-04 11:50:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:31 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:31 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:31 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=TSLA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 11:50:31 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 11:50:31 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 11:50:31 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 11:50:31 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@74e6d0dd
2025-06-04 11:50:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:31 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b9ee304
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=META&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 11:50:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cc49efc
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6aef53ac
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NFLX&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 11:50:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3665fe13
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fd1d541
2025-06-04 11:50:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NVDA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 11:50:32 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 11:50:33 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cf9d0c4
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:33 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:33 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@342e0006
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:33 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=ADBE&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 11:50:33 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@619750ea
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:33 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:33 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43ec7550
2025-06-04 11:50:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:33 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=INTC&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 11:50:33 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 11:50:34 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 11:50:34 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 11:50:34 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e30b352
2025-06-04 11:50:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:34 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:34 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:34 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:34 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 11:50:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bd0a08e
2025-06-04 11:50:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 11:50:34 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 11:50:34 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 11:50:34 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 11:50:34 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 11:50:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:50:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:51:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:51:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:51:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:51:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:52:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:52:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:52:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:52:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:53:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:53:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:53:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:53:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:54:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:54:07 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:54:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:54:37 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:55:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:55:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:55:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:55:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:56:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:56:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:56:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:56:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:57:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:57:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:57:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:57:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:58:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:58:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:58:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:58:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:59:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:59:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 11:59:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 11:59:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:00:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:00:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:00:29 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AAPL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:29 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@581ae421
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f3d0e2a
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=GOOGL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63760a12
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:32 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c23c675
2025-06-04 12:00:32 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:32 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:32 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:32 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:32 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=MSFT&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:32 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:33 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:33 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:33 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f8ec80d
2025-06-04 12:00:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:33 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:33 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ef581dc
2025-06-04 12:00:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:33 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:33 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AMZN&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:33 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:34 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@354af019
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:34 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:34 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:34 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:34 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61a26d03
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:34 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:34 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:34 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=TSLA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:34 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@674108dd
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:34 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:34 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:34 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:34 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@702998f1
2025-06-04 12:00:34 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:34 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:34 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:34 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:34 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=META&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:34 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:35 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:35 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:35 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bb079b9
2025-06-04 12:00:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:35 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:35 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:35 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b1b1e53
2025-06-04 12:00:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:35 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:35 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:35 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NFLX&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:35 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:36 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13703c66
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:36 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:36 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:36 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56e0838e
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:36 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:36 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=NVDA&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:36 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@797daac2
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:36 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:36 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:36 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@445fc5b0
2025-06-04 12:00:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:36 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:36 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=ADBE&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:36 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:37 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:37 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:37 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a65f57
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:37 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:37 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43adee0a
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:37 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:37 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=INTC&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-04 12:00:37 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-04 12:00:37 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-04 12:00:37 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-04 12:00:37 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61881fe
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:37 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:37 [DEBUG] o.s.o.j.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler - Creating new EntityManager for shared EntityManager invocation
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(21))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71428bc7
2025-06-04 12:00:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(21).symbol) 
2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(21)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(21).symbol]

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(21)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-04 12:00:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-04 12:00:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-04 12:00:37 [DEBUG] o.h.e.jdbc.spi.SqlExceptionHelper - could not prepare statement [select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?]
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "STOCK" not found (this database is empty); SQL statement:
select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=? [42104-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7932)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1769)
	at org.h2.command.Parser.readTableReference(Parser.java:2249)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2702)
	at org.h2.command.Parser.parseSelect(Parser.java:2810)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2547)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2512)
	at org.h2.command.Parser.parseQuery(Parser.java:2479)
	at org.h2.command.Parser.parsePrepared(Parser.java:610)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)
	at org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:275)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:419)
	at jdk.proxy5/jdk.proxy5.$Proxy194.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:224)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:93)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:152)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:140)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:170)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy5/jdk.proxy5.$Proxy189.findBySymbol(Unknown Source)
	at com.tradingapplication.TradingApplication.Service.StockService.fetchStock(StockService.java:98)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:55)
	at org.springframework.cache.interceptor.CacheAspectSupport.invokeOperation(CacheAspectSupport.java:431)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:601)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:410)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.tradingapplication.TradingApplication.Service.StockService$$SpringCGLIB$$0.fetchStock(<generated>)
	at com.tradingapplication.TradingApplication.configuration.StockCacheRefresher.refreshCache(StockCacheRefresher.java:26)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:498)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.config.Task$OutcomeTrackingRunnable.run(Task.java:85)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-06-04 12:00:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-04 12:00:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:00:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:01:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:01:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:01:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:01:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:02:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:02:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:02:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:02:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:03:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:03:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:03:19 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn130: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:03:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn140: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:03:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:03:29 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn132: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:03:29 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn141: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:03:29 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:03:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:03:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:03:57 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn133: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:03:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn142: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:03:57 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:06 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn131: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:04:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn143: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:04:06 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:04:13 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn135: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:04:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn144: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:04:13 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:35 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn136: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:04:35 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn145: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:04:35 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:04:38 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn134: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:04:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn146: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:04:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:04:51 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn137: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:04:51 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn147: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:04:51 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:05:04 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn138: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:05:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn148: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:05:04 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:05:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:05:08 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:05:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-04 12:05:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-04 12:05:38 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection conn139: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-04 12:05:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn149: url=jdbc:h2:mem:testdb user=ROOT
2025-06-04 12:05:38 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
