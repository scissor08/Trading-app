2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(948144068<open>)] for JPA transaction
2025-06-05 01:06:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@595576678 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@18ed6ef7]
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(948144068<open>)]
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@595576678 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(948144068<open>)] after transaction
2025-06-05 01:06:23 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 1E18520002D268C3DDDACAEE015D8334
2025-06-05 01:06:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1843273623<open>)] for JPA transaction
2025-06-05 01:06:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1454463778 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3d17d659]
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1843273623<open>)]
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1454463778 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1843273623<open>)] after transaction
2025-06-05 01:06:23 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:06:23 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:06:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6fcc20f4] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@553aa5b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:23 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a9d1d91
2025-06-05 01:06:23 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:23 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1892324694 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@899217996 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1715185688 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@289730425 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@889239586 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1194884692 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:23 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(207050209<open>)] for JPA transaction
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@895003658 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13830da0]
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(207050209<open>)]
2025-06-05 01:06:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@895003658 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:23 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:06:23 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=7562.795, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:06:23 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:06:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:06:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:06:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:23 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:06:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1174809850<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@779059608 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@395b0830]
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1174809850<open>)]
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@779059608 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1174809850<open>)] after transaction
2025-06-05 01:06:25 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from AC369024F2DF42470039A67FA29B933F
2025-06-05 01:06:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(923101484<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1175819513 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3d0a195d]
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(923101484<open>)]
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1175819513 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(923101484<open>)] after transaction
2025-06-05 01:06:25 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:06:25 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:06:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:25 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@26805d53]
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5becabc2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7fa20f29] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2338cef6
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@818840870 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1805093107 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@982506358 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@904890810 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1909251476 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@650838862 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c939523
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7562.795, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1568493357 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:25 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7beef1be] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@706cf49d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d73d31a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d73d31a] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@706cf49d
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3457fbcd
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52cf3aaa] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@52cf3aaa] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7beef1be
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@49be9391
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7359.6, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1643874975 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@587874726 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1968314306 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:25 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:25 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:25 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:06:25 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@7be341a0
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3007c609] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51887fe8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2178e8e1
2025-06-05 01:06:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=Thu Jun 05 01:06:25 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=13, trancationAmount=2640.4, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7359.6, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1013799046 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@105951913 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@730657746 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1170655030 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@330894944 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@285156164 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(26))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(26)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(26).symbol]

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(26)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=Thu Jun 05 01:06:25 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=13, trancationAmount=2640.4, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7359.6, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(26) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(26))@512279316 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:06:25 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(173200546<open>)] for JPA transaction
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:25 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(173200546<open>)]
2025-06-05 01:06:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:25 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 24 objects
2025-06-05 01:06:25 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=Thu Jun 05 01:06:25 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=13, trancationAmount=2640.4, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=[com.tradingapplication.TradingApplication.Entity.TransactionBuySell#1, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#2, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#3, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#4, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#5, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#6, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#7, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#8, com.tradingapplication.TradingApplication.Entity.TransactionBuySell#9], username=test}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7359.6, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=10784df9-e0a4-48a6-aee0-0347e0246f24, currentPrice=203.195, noOfStocks=1, id=5, transactionTime=2025-06-05 01:01:39.444, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=666.85, symbol=META, high=688.0, low=668.57, price=685.4775, change=18.6275, domain=meta.com, changePercent=2.7934, latestTradingDay=2025-06-05, id=6, open=669.32}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=6c0d0d7d-aec0-4192-9503-560b6ba8468d, currentPrice=203.195, noOfStocks=1, id=4, transactionTime=2025-06-05 01:01:00.965, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:25 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:06:25 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:06:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:25 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:06:25 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=7359.6, transac (truncated)...]
2025-06-05 01:06:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:25 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:06:35 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1998508575<open>)] for JPA transaction
2025-06-05 01:06:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2057543095 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57f7ae66]
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:35 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1998508575<open>)]
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2057543095 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1998508575<open>)] after transaction
2025-06-05 01:06:35 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 07F7FF68E7E0D78D2692EE6ADDC6BAB2
2025-06-05 01:06:35 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1982091741<open>)] for JPA transaction
2025-06-05 01:06:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1859693496 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57bcede6]
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:35 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1982091741<open>)]
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1859693496 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1982091741<open>)] after transaction
2025-06-05 01:06:35 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:06:35 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:06:35 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@60a4d08a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42d1adb1] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3829f84a
2025-06-05 01:06:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:35 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@446662612 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1085822768 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@104916903 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@868143342 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1434013802 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1467649058 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:35 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(505600079<open>)] for JPA transaction
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@38292331 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e24a98f]
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(505600079<open>)]
2025-06-05 01:06:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@38292331 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:35 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:06:35 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=7359.6, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:06:35 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:06:35 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:06:35 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:06:35 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:35 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:06:37 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(18530688<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1479706705 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@12678120]
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(18530688<open>)]
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1479706705 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(18530688<open>)] after transaction
2025-06-05 01:06:37 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from E4B35C022054FE6192184748C7738E52
2025-06-05 01:06:37 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(966388473<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@511958167 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70302d0f]
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(966388473<open>)]
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@511958167 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(966388473<open>)] after transaction
2025-06-05 01:06:37 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:06:37 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:06:37 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:37 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@507dcbe1]
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ac34a3c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4dfbc46] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65ff4029
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1317821931 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@655103868 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1714599012 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@383556672 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@974383221 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@2103685052 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e05bfc0
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7359.6, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1074317980 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@9fc6806] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1481bee3] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54af0a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54af0a] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1481bee3
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@639fcffd
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bdd5fe2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bdd5fe2] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@9fc6806
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30948aab
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7156.405, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1255374229 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1821473385 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@563871779 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:37 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:06:37 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@3d0eb90a
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f4fad7] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cfad5aa] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3801bab4
2025-06-05 01:06:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=Thu Jun 05 01:06:37 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=14, trancationAmount=2843.5950000000003, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7156.405, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1643048929 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1086371485 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@174183615 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1748304299 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@2125626027 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@990076862 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(27))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(27)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(27).symbol]

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(27)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=Thu Jun 05 01:06:37 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=14, trancationAmount=2843.5950000000003, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7156.405, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(27) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(27))@787163111 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:06:37 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756345676<open>)] for JPA transaction
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(756345676<open>)]
2025-06-05 01:06:37 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 25 objects
2025-06-05 01:06:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=Thu Jun 05 01:06:37 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=14, trancationAmount=2843.5950000000003, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=10784df9-e0a4-48a6-aee0-0347e0246f24, currentPrice=203.195, noOfStocks=1, id=5, transactionTime=2025-06-05 01:01:39.444, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=666.85, symbol=META, high=688.0, low=668.57, price=685.4775, change=18.6275, domain=meta.com, changePercent=2.7934, latestTradingDay=2025-06-05, id=6, open=669.32}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=6c0d0d7d-aec0-4192-9503-560b6ba8468d, currentPrice=203.195, noOfStocks=1, id=4, transactionTime=2025-06-05 01:01:00.965, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=344.27, symbol=TSLA, high=345.6, low=327.3308, price=333.91, change=-10.36, domain=tesla.com, changePercent=-3.0093, latestTradingDay=2025-06-05, id=5, open=345.095}
2025-06-05 01:06:37 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:06:37 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:06:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:37 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:06:37 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=7156.405, trans (truncated)...]
2025-06-05 01:06:37 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:37 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:06:41 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(815375702<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@434726835 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@434061e2]
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(815375702<open>)]
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@434726835 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(815375702<open>)] after transaction
2025-06-05 01:06:41 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from F7E2D9058B6632A41FE862ECB9C2E3A1
2025-06-05 01:06:41 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(976802085<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@884498561 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e557485]
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(976802085<open>)]
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@884498561 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(976802085<open>)] after transaction
2025-06-05 01:06:41 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:06:41 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:06:41 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:41 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42297fe3]
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@317da7da] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38221071] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@50d779b1
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1452247620 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@452064996 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1960971309 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1070379912 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@356238239 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@15225098 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@c22f575
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=7156.405, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1086203231 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38c647a8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3596c7db] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@dfdd2a9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@dfdd2a9] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3596c7db
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6b4cd231
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24134f64] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24134f64] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@38c647a8
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6d7d090
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6953.21, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1091327641 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@565574518 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@2106401180 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:41 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:06:41 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@18428126
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61091ba9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d4efd1f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f22b685
2025-06-05 01:06:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=15, trancationAmount=3046.7900000000004, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=Thu Jun 05 01:06:41 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6953.21, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1702365825 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@622801155 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@987995557 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1624167348 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1170731310 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@428623804 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(28))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(28)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(28).symbol]

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(28)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=15, trancationAmount=3046.7900000000004, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=Thu Jun 05 01:06:41 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6953.21, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(28) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(28))@1826841332 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:06:41 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1681370125<open>)] for JPA transaction
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1681370125<open>)]
2025-06-05 01:06:41 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 26 objects
2025-06-05 01:06:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=15, trancationAmount=3046.7900000000004, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=Thu Jun 05 01:06:41 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=10784df9-e0a4-48a6-aee0-0347e0246f24, currentPrice=203.195, noOfStocks=1, id=5, transactionTime=2025-06-05 01:01:39.444, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=666.85, symbol=META, high=688.0, low=668.57, price=685.4775, change=18.6275, domain=meta.com, changePercent=2.7934, latestTradingDay=2025-06-05, id=6, open=669.32}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=6c0d0d7d-aec0-4192-9503-560b6ba8468d, currentPrice=203.195, noOfStocks=1, id=4, transactionTime=2025-06-05 01:01:00.965, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:41 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:06:41 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:06:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:41 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:06:41 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=6953.21, transa (truncated)...]
2025-06-05 01:06:41 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:41 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:06:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:06:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:06:42 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(668389647<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1442829749 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@407cd906]
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(668389647<open>)]
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1442829749 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(668389647<open>)] after transaction
2025-06-05 01:06:42 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from EB0DA38CBA8AA0FF5F21EF52DB11D97F
2025-06-05 01:06:42 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1206508423<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@881235316 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5681de94]
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1206508423<open>)]
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@881235316 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1206508423<open>)] after transaction
2025-06-05 01:06:42 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:06:42 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:06:42 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:42 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@36659fdd]
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2e025b9f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3483a2f5] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bdbee0
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@16622323 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1622907983 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1739268434 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1334459674 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@579724322 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@518540760 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f78d9bf
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6953.21, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@722696269 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:42 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58fc9929] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@aab5eed] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21b25d34] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21b25d34] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@aab5eed
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c4dc902
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@842688b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@842688b] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@58fc9929
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35b3c02c
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6750.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@407880605 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@808703759 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1858071935 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:42 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:42 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:42 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:06:42 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@373c7562
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ca5090b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@38e6e698] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ecedd1f
2025-06-05 01:06:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=16, trancationAmount=3249.9850000000006, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=Thu Jun 05 01:06:42 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6750.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1985976576 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@292931687 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1920396265 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@411726139 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@311913651 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@756983926 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(29))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(29)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(29).symbol]

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(29)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=16, trancationAmount=3249.9850000000006, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=Thu Jun 05 01:06:42 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6750.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(29) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(29))@1516772182 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:06:42 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(732640544<open>)] for JPA transaction
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:06:42 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:06:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(732640544<open>)]
2025-06-05 01:06:42 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:06:42 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 27 objects
2025-06-05 01:06:42 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=16, trancationAmount=3249.9850000000006, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=Thu Jun 05 01:06:42 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=10784df9-e0a4-48a6-aee0-0347e0246f24, currentPrice=203.195, noOfStocks=1, id=5, transactionTime=2025-06-05 01:01:39.444, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=666.85, symbol=META, high=688.0, low=668.57, price=685.4775, change=18.6275, domain=meta.com, changePercent=2.7934, latestTradingDay=2025-06-05, id=6, open=669.32}
2025-06-05 01:06:42 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:06:42 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:06:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:42 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:06:42 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=6750.015, trans (truncated)...]
2025-06-05 01:06:42 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:42 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:06:44 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(111582226<open>)] for JPA transaction
2025-06-05 01:06:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1952760718 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@46fa65a1]
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:44 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(111582226<open>)]
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1952760718 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(111582226<open>)] after transaction
2025-06-05 01:06:44 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from C1A4FEEF8F07F820F40C2467B68D3727
2025-06-05 01:06:44 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(117805829<open>)] for JPA transaction
2025-06-05 01:06:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@33875894 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@188cc822]
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:44 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(117805829<open>)]
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@33875894 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(117805829<open>)] after transaction
2025-06-05 01:06:44 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:06:44 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:06:44 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5a0bd095] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7226677d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:06:44 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68666df7
2025-06-05 01:06:44 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:06:44 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@746300661 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@539721756 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@788736763 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2066572827 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@176171399 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1993827243 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:06:44 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:06:44 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(618839041<open>)] for JPA transaction
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:06:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1659824499 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f403a80]
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(618839041<open>)]
2025-06-05 01:06:44 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:06:44 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1659824499 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:06:44 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:06:44 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:06:44 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=6750.015, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:06:44 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:06:44 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:06:44 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:06:44 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:06:44 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:07:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:07:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:07:31 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1062919942<open>)] for JPA transaction
2025-06-05 01:07:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@532487387 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5995c9c2]
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:31 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1062919942<open>)]
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@532487387 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1062919942<open>)] after transaction
2025-06-05 01:07:31 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A4730290096406B1F74D674AEE05F6FF
2025-06-05 01:07:31 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(717246816<open>)] for JPA transaction
2025-06-05 01:07:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@666336781 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6eeb8dc9]
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:31 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(717246816<open>)]
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@666336781 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(717246816<open>)] after transaction
2025-06-05 01:07:31 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:07:31 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:07:31 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@481e20e8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@132beccd] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ce6bae4
2025-06-05 01:07:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:31 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1682503229 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1693790855 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1070188736 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1588762374 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@2112383987 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@809766851 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:31 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(756138560<open>)] for JPA transaction
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@346288740 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@52c84a54]
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(756138560<open>)]
2025-06-05 01:07:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@346288740 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:07:31 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:07:31 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=6750.015, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:07:31 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:07:31 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:07:31 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:07:31 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:31 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:07:33 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1392872609<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1169166699 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@731f1087]
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1392872609<open>)]
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1169166699 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1392872609<open>)] after transaction
2025-06-05 01:07:33 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 01B10DED24161D309809EFB5746309DC
2025-06-05 01:07:33 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1073120135<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@863414930 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a5cbae5]
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1073120135<open>)]
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@863414930 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1073120135<open>)] after transaction
2025-06-05 01:07:33 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:07:33 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:07:33 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:33 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4b822233]
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5359037] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5ffcb918] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79f0e248
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1893016449 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1443055372 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@36647447 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@332987350 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1254628103 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@113188469 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@35b587d7
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6750.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1089340341 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2986c8ee] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16892fc3] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4031d2b2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4031d2b2] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@16892fc3
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a62ba5f
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23b49304] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23b49304] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2986c8ee
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a2399b1
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6546.82, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1588739429 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1082941762 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1200291504 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:33 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:07:33 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@3348b1af
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74d6a95] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@717e761a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d480910
2025-06-05 01:07:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=17, trancationAmount=3453.1800000000007, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=Thu Jun 05 01:07:33 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6546.82, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1711299716 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@899522425 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1928645953 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2004417054 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@326659081 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1254575944 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(30))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(30)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(30).symbol]

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(30)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=17, trancationAmount=3453.1800000000007, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=Thu Jun 05 01:07:33 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6546.82, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(30) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(30))@1762763657 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:07:33 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2047843992<open>)] for JPA transaction
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2047843992<open>)]
2025-06-05 01:07:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 28 objects
2025-06-05 01:07:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=17, trancationAmount=3453.1800000000007, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=Thu Jun 05 01:07:33 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=10784df9-e0a4-48a6-aee0-0347e0246f24, currentPrice=203.195, noOfStocks=1, id=5, transactionTime=2025-06-05 01:01:39.444, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:33 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:07:33 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:07:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:07:33 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:07:33 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=6546.82, transa (truncated)...]
2025-06-05 01:07:33 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:33 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:07:39 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(345238192<open>)] for JPA transaction
2025-06-05 01:07:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@289142992 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@f70c925]
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:39 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(345238192<open>)]
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@289142992 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(345238192<open>)] after transaction
2025-06-05 01:07:39 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 8DF16090C555EE023507306B0DCBFD74
2025-06-05 01:07:39 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1985774531<open>)] for JPA transaction
2025-06-05 01:07:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1673915621 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70632aca]
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:39 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1985774531<open>)]
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1673915621 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1985774531<open>)] after transaction
2025-06-05 01:07:39 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:07:39 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:07:39 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25d02d36] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@644cdb8c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:39 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d53c85b
2025-06-05 01:07:39 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:39 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@809271266 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1631712013 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1826154324 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@748847645 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@2142382852 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@285570660 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:39 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1311496728<open>)] for JPA transaction
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1819434302 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@308c7c13]
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1311496728<open>)]
2025-06-05 01:07:39 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1819434302 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:07:39 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:07:39 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=6546.82, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:07:39 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:07:39 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:07:39 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:07:39 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:39 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:07:41 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(602241855<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1029022322 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4b57be21]
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(602241855<open>)]
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1029022322 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(602241855<open>)] after transaction
2025-06-05 01:07:41 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 44EA10D91816867375E7671208C61903
2025-06-05 01:07:41 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1140155733<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@33833103 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f6f9eb8]
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1140155733<open>)]
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:41 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@33833103 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1140155733<open>)] after transaction
2025-06-05 01:07:41 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:07:41 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:07:41 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:41 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2b025d87]
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67c82464] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9fb37f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23faf0b4
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1211426999 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1184143406 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@2031395802 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@254200379 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1622735416 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@34556905 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ed07ce4
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6546.82, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1837729367 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301e4fd3] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4955fd4] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4bdb8bd8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4bdb8bd8] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4955fd4
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b6d13d
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33444ab2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33444ab2] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@301e4fd3
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37ef0dcb
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6343.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1571758036 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1316623040 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1549120328 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:41 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:07:41 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@41b05812
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d7e3819] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2ecd9d6c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2b5d9785
2025-06-05 01:07:41 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=Thu Jun 05 01:07:41 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=18, trancationAmount=3656.375000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6343.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1659974523 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1436143124 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1417925165 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1543407225 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@822025366 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@722308595 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(31))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(31)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(31).symbol]

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(31)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=Thu Jun 05 01:07:41 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=18, trancationAmount=3656.375000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6343.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(31) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(31))@1546503998 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:07:41 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(241346649<open>)] for JPA transaction
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:07:41 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:07:41 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(241346649<open>)]
2025-06-05 01:07:41 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:07:41 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 29 objects
2025-06-05 01:07:41 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=Thu Jun 05 01:07:41 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=18, trancationAmount=3656.375000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:07:41 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:07:41 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:07:41 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:07:41 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:07:41 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=6343.625, trans (truncated)...]
2025-06-05 01:07:41 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:41 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:07:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:07:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:07:51 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1876264027<open>)] for JPA transaction
2025-06-05 01:07:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@298860037 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@45962d4f]
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:51 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1876264027<open>)]
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@298860037 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1876264027<open>)] after transaction
2025-06-05 01:07:51 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 2C551AFF97237E1A255A7D715407906A
2025-06-05 01:07:51 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(600230814<open>)] for JPA transaction
2025-06-05 01:07:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@94150078 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7ebec9b3]
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:51 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(600230814<open>)]
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@94150078 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(600230814<open>)] after transaction
2025-06-05 01:07:51 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:07:51 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:07:51 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@388ec5f0] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69579c77] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:07:51 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b9ff14
2025-06-05 01:07:51 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:07:51 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1115800756 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@861032909 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@397788521 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@49318170 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1310218644 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1868932515 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:07:51 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:07:51 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(819727874<open>)] for JPA transaction
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:07:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@903920010 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@44ebb983]
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(819727874<open>)]
2025-06-05 01:07:51 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:07:51 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@903920010 wrapping conn0: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:07:51 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:07:51 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:07:51 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=6343.625, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:07:51 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:07:51 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:07:51 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:07:51 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:07:51 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:08:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:08:12 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:14 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:14 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:15 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:15 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:16 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:16 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:18 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:18 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:19 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:19 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:21 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:21 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:21 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:26 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:26 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:30 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:30 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:30 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:36 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1142737681<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1134311906 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@541451f1]
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1142737681<open>)]
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1134311906 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1142737681<open>)] after transaction
2025-06-05 01:08:36 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from E2325B86B30BCAB708647B5610BF6F71
2025-06-05 01:08:36 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1446160946<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1629612377 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6897e5c0]
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1446160946<open>)]
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:08:36 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1629612377 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1446160946<open>)] after transaction
2025-06-05 01:08:36 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:08:36 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:08:36 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:08:36 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@13bf301d]
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@261be545] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cce0643] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e15c2cf
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1671851615 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@847230042 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1735984721 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@214639655 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1548707703 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@333305280 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7973aac3
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6343.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1122831527 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:08:36 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35d22cd9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@195ab649] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26647448] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26647448] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@195ab649
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29e0b882
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b80d10] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b80d10] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@35d22cd9
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@b8690ea
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6140.43, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1842241443 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1134791281 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@2001360722 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:08:36 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:08:36 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:08:36 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:08:36 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@7d2d576
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58995606] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49f15106] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d5e8d9
2025-06-05 01:08:36 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=19, trancationAmount=3859.570000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6140.43, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91fc2a78-3d9b-489b-936d-7182dab49a5c, currentPrice=203.195, noOfStocks=1, id=15, transactionTime=Thu Jun 05 01:08:36 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1260944062 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1712461801 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@890733066 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@780149704 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@645222700 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1353623380 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(32))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(32)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(32).symbol]

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(32)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=19, trancationAmount=3859.570000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6140.43, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91fc2a78-3d9b-489b-936d-7182dab49a5c, currentPrice=203.195, noOfStocks=1, id=15, transactionTime=Thu Jun 05 01:08:36 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(32) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(32))@260719778 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:08:36 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(125067040<open>)] for JPA transaction
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:08:36 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:08:36 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(125067040<open>)]
2025-06-05 01:08:36 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:08:36 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 30 objects
2025-06-05 01:08:36 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=19, trancationAmount=3859.570000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:08:36 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:08:36 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:08:36 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:08:36 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:08:36 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=6140.43, transa (truncated)...]
2025-06-05 01:08:36 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:08:36 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:08:39 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1166448656<open>)] for JPA transaction
2025-06-05 01:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1959791877 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5a1710ed]
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:39 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1166448656<open>)]
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1959791877 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1166448656<open>)] after transaction
2025-06-05 01:08:39 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 7603DE44352ABDE91474DC61F754FD57
2025-06-05 01:08:39 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2098408577<open>)] for JPA transaction
2025-06-05 01:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@993877963 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@467f8cc0]
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:39 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2098408577<open>)]
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@993877963 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2098408577<open>)] after transaction
2025-06-05 01:08:39 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:08:39 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:08:39 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37fecf91] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@94e2820] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:08:39 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@20c863d6
2025-06-05 01:08:39 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:08:39 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1688012042 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1471532745 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1173458268 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@148515364 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@82041696 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@2103025331 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:08:39 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:08:39 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(596656080<open>)] for JPA transaction
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@155568970 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@91cac7a]
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(596656080<open>)]
2025-06-05 01:08:39 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:08:39 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@155568970 wrapping conn9: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:08:39 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:08:39 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:08:39 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=6140.43, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:08:39 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:08:39 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:08:39 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:08:39 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:08:39 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:08:39 [DEBUG] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=ROOT: (connection has passed maxLifetime)
2025-06-05 01:08:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=ROOT
2025-06-05 01:08:39 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:08:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:09:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:09:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:09:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:09:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:10:08 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(980448844<open>)] for JPA transaction
2025-06-05 01:10:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@25206084 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b253bc1]
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:08 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(980448844<open>)]
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@25206084 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(980448844<open>)] after transaction
2025-06-05 01:10:08 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 08C475981829919FDED8CAB9120DFB55
2025-06-05 01:10:08 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(241629885<open>)] for JPA transaction
2025-06-05 01:10:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1207291677 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@530f56d9]
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:08 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(241629885<open>)]
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1207291677 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(241629885<open>)] after transaction
2025-06-05 01:10:08 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:10:08 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:10:08 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4416f788] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8dd7836] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:10:08 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f9d857c
2025-06-05 01:10:08 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:08 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@2016884443 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1187015395 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@557682979 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2107856473 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1013135064 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@2041697477 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:10:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:08 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1798293830<open>)] for JPA transaction
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@854616675 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2910ff9d]
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1798293830<open>)]
2025-06-05 01:10:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@854616675 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:10:08 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:10:08 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=6140.43, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:10:08 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:10:08 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:10:08 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:10:08 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:10:08 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:10:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1876799471<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@458057885 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b88faae]
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1876799471<open>)]
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@458057885 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1876799471<open>)] after transaction
2025-06-05 01:10:10 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 9AA9A152BA985D9AE1808B4EBFC0B5B5
2025-06-05 01:10:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2104229046<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1401162490 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@72555148]
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2104229046<open>)]
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1401162490 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2104229046<open>)] after transaction
2025-06-05 01:10:10 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:10:10 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:10:10 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:10:10 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.195)]
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2cd4d194]
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@66f295a5] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ca0b09e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4757bd0b
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1185785235 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@2144215141 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1264560033 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1655940903 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1234769887 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1205521281 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4b77b725
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=6140.43, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1323822553 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:10:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2df5a9f8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47cf7601] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d0a232f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d0a232f] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@47cf7601
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d42f25d
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@731d3aef] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@731d3aef] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2df5a9f8
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43993ac5
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5937.235, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@89316838 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@991789330 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1664610313 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:10:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:10:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:10:10 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:10:10 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@654dbc7e
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6cd4be4] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@eebb90f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c8ecb36
2025-06-05 01:10:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=20, trancationAmount=4062.7650000000012, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=1a2819ef-4cc6-46b2-a018-3df77b903e37, currentPrice=203.195, noOfStocks=1, id=16, transactionTime=Thu Jun 05 01:10:10 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5937.235, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1242687992 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1580678857 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1415253094 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1164705583 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@15761491 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1742088178 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(33))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(33)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(33).symbol]

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(33)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=20, trancationAmount=4062.7650000000012, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=1a2819ef-4cc6-46b2-a018-3df77b903e37, currentPrice=203.195, noOfStocks=1, id=16, transactionTime=Thu Jun 05 01:10:10 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5937.235, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(33) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(33))@1780954547 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:10:10 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2073426304<open>)] for JPA transaction
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:10:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:10:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2073426304<open>)]
2025-06-05 01:10:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:10:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 31 objects
2025-06-05 01:10:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=20, trancationAmount=4062.7650000000012, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.195, change=-0.075, domain=apple.com, changePercent=-0.0369, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:10:10 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:10:10 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:10:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:10:10 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:10:10 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=5937.235, trans (truncated)...]
2025-06-05 01:10:10 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:10:10 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:10:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:10:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(155574492<open>)] for JPA transaction
2025-06-05 01:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@66249725 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7f715cb0]
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(155574492<open>)]
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@66249725 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(155574492<open>)] after transaction
2025-06-05 01:10:23 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 19E923D67E4CD82B0806483A6D40DC5E
2025-06-05 01:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1626562523<open>)] for JPA transaction
2025-06-05 01:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@22047666 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1fa6f0d6]
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:23 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1626562523<open>)]
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@22047666 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1626562523<open>)] after transaction
2025-06-05 01:10:23 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:10:23 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:10:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7595b5c3] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@41767933] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:10:23 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@531affd6
2025-06-05 01:10:23 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:10:23 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1489970941 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@729679242 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1455969957 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1863884822 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1321307078 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@357078465 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:10:23 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:10:23 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1530870528<open>)] for JPA transaction
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1544007206 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@30122a35]
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1530870528<open>)]
2025-06-05 01:10:23 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:10:23 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1544007206 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:10:23 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:10:23 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:10:23 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.195, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.075, changePercent=-0.0369, latestTradingDay=2025-06-05, domain=apple.com), balance=5937.235, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:10:23 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:10:23 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:10:23 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:10:23 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:10:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:10:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:11:03 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1223851320<open>)] for JPA transaction
2025-06-05 01:11:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1562807071 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@208e95e2]
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:03 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1223851320<open>)]
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1562807071 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1223851320<open>)] after transaction
2025-06-05 01:11:03 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 42847FD253C79076876B915E975E22CE
2025-06-05 01:11:03 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(528533202<open>)] for JPA transaction
2025-06-05 01:11:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@499668438 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@32ee2843]
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:03 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(528533202<open>)]
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@499668438 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(528533202<open>)] after transaction
2025-06-05 01:11:03 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:11:03 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:11:03 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:03 [DEBUG] o.s.web.client.RestTemplate - HTTP GET https://finnhub.io/api/v1/quote?symbol=AAPL&token=d0ljethr01qsju099lrgd0ljethr01qsju099ls0
2025-06-05 01:11:03 [DEBUG] o.s.web.client.RestTemplate - Accept=[text/plain, application/json, application/yaml, application/*+json, */*]
2025-06-05 01:11:03 [DEBUG] o.s.web.client.RestTemplate - Response 200 OK
2025-06-05 01:11:03 [DEBUG] o.s.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=utf-8"
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:03 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@210543d0
2025-06-05 01:11:03 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:03 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@366812688 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1023573522<open>)] for JPA transaction
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@66fbaa5]
2025-06-05 01:11:03 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1023573522<open>)]
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:03 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:03 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:03 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2025-06-05 01:11:03 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-06-05 01:11:03 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:03 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:03 [DEBUG] org.hibernate.SQL - update stock set change=?,change_percent=?,domain=?,high=?,last_updated=?,latest_trading_day=?,low=?,open=?,previous_close=?,price=?,symbol=? where id=?
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@615a43c0] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55ae4caf] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:03 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c4b4f08
2025-06-05 01:11:03 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:03 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1686651019 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1280026005 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@566369975 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1199243956 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1632734920 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1881663610 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:03 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:03 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1023573522<open>)] for JPA transaction
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1112434485 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2f674d16]
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1023573522<open>)]
2025-06-05 01:11:03 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:03 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1112434485 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:03 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:03 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:11:03 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=5937.235, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:11:03 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:11:03 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:11:03 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:11:04 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:04 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:11:05 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(95807589<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1365997707 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@39114f27]
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(95807589<open>)]
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1365997707 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(95807589<open>)] after transaction
2025-06-05 01:11:05 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 1F5EF78AD373F95B262FFBB1DDE8ED9D
2025-06-05 01:11:05 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(515434861<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1981148375 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@121f0cdf]
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(515434861<open>)]
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:05 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1981148375 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(515434861<open>)] after transaction
2025-06-05 01:11:05 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:11:05 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:11:05 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:05 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1975b344]
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11ae4ada] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@25f53438] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c3ecb68
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@932912646 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@772499318 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@818591062 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@383915204 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@2045137712 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@203668397 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d82eb84
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5937.235, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@124788591 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:05 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f1a1061] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@58599b16] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@226bcf99] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@226bcf99] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@58599b16
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61e4dc08
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77d93371] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77d93371] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1f1a1061
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5ab41f83
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5734.005, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1681498322 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1674572509 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1074890863 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:05 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:05 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:05 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:11:05 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@3cea82ab
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c20a672] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64378287] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73e4ee7a
2025-06-05 01:11:05 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=21, trancationAmount=4265.995000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=7fe005cd-7297-4cd3-827e-cb3eb2137efb, currentPrice=203.23, noOfStocks=1, id=17, transactionTime=Thu Jun 05 01:11:05 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5734.005, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1634714172 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1882230603 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@856042340 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@677907571 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@931747168 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1136123405 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(34))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(34)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(34).symbol]

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(34)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=21, trancationAmount=4265.995000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=7fe005cd-7297-4cd3-827e-cb3eb2137efb, currentPrice=203.23, noOfStocks=1, id=17, transactionTime=Thu Jun 05 01:11:05 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5734.005, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(34) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(34))@709509260 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:11:05 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1405715300<open>)] for JPA transaction
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:05 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:05 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1405715300<open>)]
2025-06-05 01:11:05 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:05 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 32 objects
2025-06-05 01:11:05 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=21, trancationAmount=4265.995000000001, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:11:05 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:11:05 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:11:05 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:05 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:11:05 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=5734.005, trans (truncated)...]
2025-06-05 01:11:05 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:05 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:11:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:11:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:11:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1417932153<open>)] for JPA transaction
2025-06-05 01:11:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1883870604 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6545faae]
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1417932153<open>)]
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1883870604 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1417932153<open>)] after transaction
2025-06-05 01:11:25 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 89964AA1CC0F74406B7392D3A4B151CF
2025-06-05 01:11:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2114404843<open>)] for JPA transaction
2025-06-05 01:11:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@592301822 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27c6c709]
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2114404843<open>)]
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@592301822 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2114404843<open>)] after transaction
2025-06-05 01:11:25 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:11:25 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:11:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5a4804d7] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7eaad6cf] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@660400d1
2025-06-05 01:11:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:25 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@580417211 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1755762144 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@948034150 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1416491076 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@899770844 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1807117125 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:25 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1433674349<open>)] for JPA transaction
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@803611688 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2e1f6196]
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1433674349<open>)]
2025-06-05 01:11:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@803611688 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:25 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:11:25 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=5734.005, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:11:25 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:11:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:11:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:11:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:25 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:11:27 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(417220359<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@102221017 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5ea22c32]
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(417220359<open>)]
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@102221017 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(417220359<open>)] after transaction
2025-06-05 01:11:27 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 85E392B927DBEEC3A01FBB3F64160A9D
2025-06-05 01:11:27 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2059813761<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@643974701 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@38f9c97]
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2059813761<open>)]
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:27 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@643974701 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2059813761<open>)] after transaction
2025-06-05 01:11:27 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:11:27 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:11:27 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:27 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@39c4933f]
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21318b6c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c71b91e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76f62e4f
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@232406661 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1709493651 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1587356144 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1957669874 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@677223924 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1796625721 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a1b604e
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5734.005, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1870392397 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@71e8b108] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6743f0f6] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fd9ca56] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fd9ca56] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6743f0f6
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71ecea21
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f974b1f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f974b1f] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@71e8b108
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b00644c
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5530.775, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1457617848 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1603344957 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@274959740 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:27 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:11:27 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@603d33e8
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7263d90] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e8decef] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c197f53
2025-06-05 01:11:27 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=22, trancationAmount=4469.225, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=4fcb5ac9-79a3-4d50-845d-57cd8208d7de, currentPrice=203.23, noOfStocks=1, id=18, transactionTime=Thu Jun 05 01:11:27 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5530.775, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@619378200 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1653206710 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@2118439431 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@929710840 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1145251899 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1762820699 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(35))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(35)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(35).symbol]

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(35)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=22, trancationAmount=4469.225, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=4fcb5ac9-79a3-4d50-845d-57cd8208d7de, currentPrice=203.23, noOfStocks=1, id=18, transactionTime=Thu Jun 05 01:11:27 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5530.775, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(35) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(35))@315447058 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:11:27 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(267536025<open>)] for JPA transaction
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:27 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:27 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(267536025<open>)]
2025-06-05 01:11:27 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:27 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 33 objects
2025-06-05 01:11:27 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=22, trancationAmount=4469.225, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:11:27 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:11:27 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:11:27 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:27 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:11:27 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=5530.775, trans (truncated)...]
2025-06-05 01:11:27 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:27 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:11:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:11:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:11:47 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(483784111<open>)] for JPA transaction
2025-06-05 01:11:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1297954320 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@371305d4]
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:47 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(483784111<open>)]
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1297954320 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(483784111<open>)] after transaction
2025-06-05 01:11:47 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 2F01FB63E24ECACB51612D86458CEF2B
2025-06-05 01:11:47 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1206695201<open>)] for JPA transaction
2025-06-05 01:11:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@385094451 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f75ea48]
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:47 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1206695201<open>)]
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@385094451 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1206695201<open>)] after transaction
2025-06-05 01:11:47 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:11:47 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:11:47 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ddc0b54] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47b158f2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:47 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5fb0958d
2025-06-05 01:11:47 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:47 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1605542624 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1986446707 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1481570587 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@48843103 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1216761408 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@134956926 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:47 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:47 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(254271806<open>)] for JPA transaction
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@714609714 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4ac9aebc]
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(254271806<open>)]
2025-06-05 01:11:47 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:47 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@714609714 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:47 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:47 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:11:47 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=5530.775, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:11:47 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:11:47 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:11:47 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:11:47 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:47 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:11:48 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(946022688<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1872126331 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@53ca1af]
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:48 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(946022688<open>)]
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1872126331 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(946022688<open>)] after transaction
2025-06-05 01:11:48 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A9C6A8F63D788C5FFE2742D0DCA851FA
2025-06-05 01:11:48 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(831654713<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1632181504 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5c543339]
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:48 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(831654713<open>)]
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:48 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1632181504 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(831654713<open>)] after transaction
2025-06-05 01:11:48 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:11:48 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:11:48 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:48 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:11:48 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@464152a9]
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7b4264ba] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37dab561] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@140a3665
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:48 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@2129363815 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1009291607 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1956269527 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@719140380 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@143616155 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1884676852 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:48 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@eb9db29
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:48 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:48 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:48 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5530.775, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:48 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1148085653 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:48 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@be63f41] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40272740] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48c90f21] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48c90f21] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@40272740
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4011636e
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61a37698] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61a37698] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@be63f41
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3617ce33
2025-06-05 01:11:48 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:11:48 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:48 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:48 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:11:48 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5327.545, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:48 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:48 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:11:48 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@333110491 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@825857907 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@382635389 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:48 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:48 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:48 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:49 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:11:49 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@494fb11a
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a5cb03e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e2f0f0e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:11:49 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@252e05c2
2025-06-05 01:11:49 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=23, trancationAmount=4672.455, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5327.545, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=03a655b9-0e97-4c05-bc79-a0de861448c2, currentPrice=203.23, noOfStocks=1, id=19, transactionTime=Thu Jun 05 01:11:48 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1789549827 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@293824447 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@493452800 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@719507776 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@303612762 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@413982777 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(36))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(36)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(36).symbol]

2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(36)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=23, trancationAmount=4672.455, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5327.545, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=03a655b9-0e97-4c05-bc79-a0de861448c2, currentPrice=203.23, noOfStocks=1, id=19, transactionTime=Thu Jun 05 01:11:48 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(36) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(36))@1802384558 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:11:49 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1183997487<open>)] for JPA transaction
2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:11:49 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:11:49 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1183997487<open>)]
2025-06-05 01:11:49 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:11:49 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 34 objects
2025-06-05 01:11:49 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=23, trancationAmount=4672.455, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:11:49 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:11:49 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:11:49 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:11:49 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:11:49 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=5327.545, trans (truncated)...]
2025-06-05 01:11:49 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:11:49 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:12:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:12:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:12:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1613992949<open>)] for JPA transaction
2025-06-05 01:12:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@716860156 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6fb64765]
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1613992949<open>)]
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@716860156 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1613992949<open>)] after transaction
2025-06-05 01:12:25 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from DA140808DE211D193A599F4B86FCEC6A
2025-06-05 01:12:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(415343296<open>)] for JPA transaction
2025-06-05 01:12:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@87307046 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@50205aee]
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(415343296<open>)]
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@87307046 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(415343296<open>)] after transaction
2025-06-05 01:12:25 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:12:25 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:12:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e959e5c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@200a0cc9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:12:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ed38ef3
2025-06-05 01:12:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:25 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1001704756 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@2089743789 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1251182399 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1188125869 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1536291886 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1345929580 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:12:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:25 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(38104482<open>)] for JPA transaction
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@877675117 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@43ee2e53]
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(38104482<open>)]
2025-06-05 01:12:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@877675117 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:12:25 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:12:25 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=5327.545, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:12:25 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:12:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:12:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:12:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:12:25 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(488158424<open>)] for JPA transaction
2025-06-05 01:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2100700268 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@ddcfa9b]
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:31 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(488158424<open>)]
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2100700268 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(488158424<open>)] after transaction
2025-06-05 01:12:31 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 4B72E7C5401C2D72F3326BECA8160215
2025-06-05 01:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1623758346<open>)] for JPA transaction
2025-06-05 01:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1956577523 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7d1f8e81]
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:31 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1623758346<open>)]
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1956577523 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1623758346<open>)] after transaction
2025-06-05 01:12:31 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:12:31 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:12:31 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f4807e2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64497080] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:12:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@298ee45e
2025-06-05 01:12:31 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:31 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1152501888 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@550274457 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1812509662 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@485201277 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1448389544 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@317721782 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:12:31 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:31 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(904493218<open>)] for JPA transaction
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1786667857 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@32858b3d]
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(904493218<open>)]
2025-06-05 01:12:31 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:31 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1786667857 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:31 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:12:31 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:12:31 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=5327.545, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:12:31 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:12:31 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:12:31 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:12:31 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:12:33 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(617627633<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@138136891 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@567a0ca]
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(617627633<open>)]
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@138136891 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(617627633<open>)] after transaction
2025-06-05 01:12:33 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 1E5CE6B228BBD5081BFE06B64E6EEA4D
2025-06-05 01:12:33 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1490227452<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@289602738 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@41cfd912]
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1490227452<open>)]
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@289602738 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1490227452<open>)] after transaction
2025-06-05 01:12:33 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:12:33 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:12:33 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:12:33 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f0efcd5]
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61fb2a72] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@798b8acc] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c0a6ee6
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@945964793 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1125307454 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@902736405 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2064197570 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1375138772 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@68189936 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@747bab96
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5327.545, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1308814910 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:12:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b7995f5] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10e6c139] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61987d27] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@61987d27] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@10e6c139
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@198c4d1e
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3dbe258e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3dbe258e] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@6b7995f5
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@604229b3
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5124.315, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@297380460 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@877388750 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@711525017 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:12:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:12:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:12:33 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:12:33 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@1ed2d2d0
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e661277] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@56aa1f39] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@604c482a
2025-06-05 01:12:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=24, trancationAmount=4875.6849999999995, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5124.315, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=97ada754-fd45-4823-ab96-d02839539c01, currentPrice=203.23, noOfStocks=1, id=20, transactionTime=Thu Jun 05 01:12:33 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1617818571 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@481443048 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@220813480 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@678118804 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@655825145 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@718218639 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(37))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(37)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(37).symbol]

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(37)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=24, trancationAmount=4875.6849999999995, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5124.315, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=97ada754-fd45-4823-ab96-d02839539c01, currentPrice=203.23, noOfStocks=1, id=20, transactionTime=Thu Jun 05 01:12:33 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(37) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(37))@2132031237 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:12:33 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1713499679<open>)] for JPA transaction
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:12:33 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:12:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1713499679<open>)]
2025-06-05 01:12:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:12:33 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 35 objects
2025-06-05 01:12:33 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=24, trancationAmount=4875.6849999999995, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:12:33 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:12:33 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:12:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:12:33 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:12:33 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=5124.315, trans (truncated)...]
2025-06-05 01:12:33 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:12:33 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:12:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:12:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:13:00 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1708954255<open>)] for JPA transaction
2025-06-05 01:13:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@499876459 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7c382e33]
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:00 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1708954255<open>)]
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@499876459 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1708954255<open>)] after transaction
2025-06-05 01:13:00 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 3D8ADA06CA5CDE47BE4A3C0001D1F6BA
2025-06-05 01:13:00 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1916336683<open>)] for JPA transaction
2025-06-05 01:13:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@582428109 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@45a5c4fe]
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:00 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1916336683<open>)]
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@582428109 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1916336683<open>)] after transaction
2025-06-05 01:13:00 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:13:00 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:13:00 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@448bea9c] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a1d9989] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:00 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2db0e0f2
2025-06-05 01:13:00 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:00 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1575105105 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1606052030 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1352870386 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1651491864 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@785580734 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@572551234 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:00 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:00 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(961230056<open>)] for JPA transaction
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1161585050 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@21a8156a]
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(961230056<open>)]
2025-06-05 01:13:00 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:00 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1161585050 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:00 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:00 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:13:00 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=5124.315, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:13:00 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:13:00 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:00 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:00 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:00 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:02 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1627216147<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2028274058 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16ac7011]
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1627216147<open>)]
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2028274058 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1627216147<open>)] after transaction
2025-06-05 01:13:02 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from E884E0ACD9295E1CEC225E05194A700E
2025-06-05 01:13:02 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1097979456<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1743627158 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7bf998f]
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1097979456<open>)]
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:02 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1743627158 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1097979456<open>)] after transaction
2025-06-05 01:13:02 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:13:02 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:13:02 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:02 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=2, price=203.23)]
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@8d5b598]
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aa35687] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6fff533e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@305c2187
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1870866772 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@554245908 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@928062146 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1254140788 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1023406833 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1441250245 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d554d56
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=5124.315, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@241625727 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:02 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49393b7] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72c274b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69f42c26] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69f42c26] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@72c274b
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7a7f3866
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4743701d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4743701d] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@49393b7
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@161f1535
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4717.855, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1076033807 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@2032551379 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1681110622 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:02 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:02 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:02 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:13:02 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@63e32ed7
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ce8a572] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1687bbae] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@41ad5f9a
2025-06-05 01:13:02 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=26, trancationAmount=5282.1449999999995, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4717.855, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=406.46, StockName=AAPL, orderId=8b2afb9c-c2f7-4813-81c1-00efd42a3e97, currentPrice=203.23, noOfStocks=2, id=21, transactionTime=Thu Jun 05 01:13:02 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1743805258 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@836779744 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@226330776 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1336127139 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@720143894 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@441166485 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(38))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(38)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(38).symbol]

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(38)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=26, trancationAmount=5282.1449999999995, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4717.855, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=406.46, StockName=AAPL, orderId=8b2afb9c-c2f7-4813-81c1-00efd42a3e97, currentPrice=203.23, noOfStocks=2, id=21, transactionTime=Thu Jun 05 01:13:02 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(38) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(38))@475574619 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:13:02 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1700653003<open>)] for JPA transaction
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:02 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:02 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1700653003<open>)]
2025-06-05 01:13:02 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:02 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 36 objects
2025-06-05 01:13:02 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=26, trancationAmount=5282.1449999999995, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:13:02 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:13:02 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:13:02 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:02 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:13:02 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=4717.855, trans (truncated)...]
2025-06-05 01:13:02 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:02 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:07 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(514308389<open>)] for JPA transaction
2025-06-05 01:13:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@469050102 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@74c1c8f7]
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:07 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(514308389<open>)]
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@469050102 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(514308389<open>)] after transaction
2025-06-05 01:13:07 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 3981AD62827D10E80D7BAE95B26796C7
2025-06-05 01:13:07 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(920659728<open>)] for JPA transaction
2025-06-05 01:13:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1657204490 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1d371f43]
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:07 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(920659728<open>)]
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1657204490 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(920659728<open>)] after transaction
2025-06-05 01:13:07 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:13:07 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:13:07 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7071c729] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5c0e2e79] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:07 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61d8bece
2025-06-05 01:13:07 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:07 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@678488571 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1980060184 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@940412998 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1044239221 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@296606328 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1306841031 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:07 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(103213507<open>)] for JPA transaction
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2086904456 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2fb5d6b7]
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(103213507<open>)]
2025-06-05 01:13:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2086904456 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:07 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:13:07 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4717.855, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:13:07 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:13:07 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:07 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:07 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:07 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:13:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:13:20 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1799839725<open>)] for JPA transaction
2025-06-05 01:13:20 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2108738581 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7444f74f]
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:20 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1799839725<open>)]
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:20 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2108738581 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1799839725<open>)] after transaction
2025-06-05 01:13:20 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 57BE416A443135FF4F771D6385934F21
2025-06-05 01:13:20 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1397519435<open>)] for JPA transaction
2025-06-05 01:13:20 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1896624879 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@877c469]
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:20 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1397519435<open>)]
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:20 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1896624879 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1397519435<open>)] after transaction
2025-06-05 01:13:20 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:13:20 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:13:20 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3d453092] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@12757fec] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:20 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@15f4ede3
2025-06-05 01:13:20 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:20 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1402146587 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@320005998 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1123824437 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@747590049 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1731160316 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1669520096 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:20 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:20 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1724725655<open>)] for JPA transaction
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:20 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@897437124 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@43d30fb8]
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1724725655<open>)]
2025-06-05 01:13:20 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:20 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@897437124 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:20 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:20 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:13:20 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4717.855, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:13:20 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:13:20 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:20 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:20 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:20 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:21 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(982766753<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2043749316 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27a3bfe9]
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(982766753<open>)]
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2043749316 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(982766753<open>)] after transaction
2025-06-05 01:13:21 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 31E0E18E8B9839AE192FCF69338E851B
2025-06-05 01:13:21 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1833879986<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1019815135 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6bb33c0d]
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1833879986<open>)]
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:21 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1019815135 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1833879986<open>)] after transaction
2025-06-05 01:13:21 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:13:21 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:13:21 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:21 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@696fccbe]
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c9ac594] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7b07ee85] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@62882fbf
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@842269036 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1680830732 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1393815070 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@950825537 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@713108313 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@892966932 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31eda62d
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4717.855, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@92711481 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:21 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2be0c760] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@205e012] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cc47712] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4cc47712] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@205e012
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@523f6e60
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2297bce2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2297bce2] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2be0c760
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@24cd4848
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4514.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@2100108931 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@202182057 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@245221807 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:21 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:21 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:21 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:13:21 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@e7e352e
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e8580c5] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11ad1f7e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@59b0998f
2025-06-05 01:13:21 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=27, trancationAmount=5485.374999999999, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4514.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=3653b2ba-0455-4d52-93c0-f91b659e5c72, currentPrice=203.23, noOfStocks=1, id=22, transactionTime=Thu Jun 05 01:13:21 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1704833644 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1295518530 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@181063493 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@104329127 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@246490079 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@64904016 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(39))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(39)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(39).symbol]

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(39)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=27, trancationAmount=5485.374999999999, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4514.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=3653b2ba-0455-4d52-93c0-f91b659e5c72, currentPrice=203.23, noOfStocks=1, id=22, transactionTime=Thu Jun 05 01:13:21 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(39) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(39))@456084144 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:13:21 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(920679119<open>)] for JPA transaction
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:21 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:21 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(920679119<open>)]
2025-06-05 01:13:21 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:21 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 37 objects
2025-06-05 01:13:21 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=27, trancationAmount=5485.374999999999, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:13:21 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:13:21 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:13:21 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:21 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:13:21 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=4514.625, trans (truncated)...]
2025-06-05 01:13:21 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:21 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:24 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1807990151<open>)] for JPA transaction
2025-06-05 01:13:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1522442973 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1ae6ee69]
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:24 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1807990151<open>)]
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1522442973 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1807990151<open>)] after transaction
2025-06-05 01:13:24 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from CF493C851DC1C20036B6A55D07B67AA8
2025-06-05 01:13:24 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(250067124<open>)] for JPA transaction
2025-06-05 01:13:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1635356150 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@65d727c5]
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:24 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(250067124<open>)]
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1635356150 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(250067124<open>)] after transaction
2025-06-05 01:13:24 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:13:24 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:13:24 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@297cc3ac] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@65493908] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:24 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4652958a
2025-06-05 01:13:24 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:24 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@2107274165 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1645707414 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@920331338 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1527651314 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1965542653 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@728424959 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:24 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:24 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2043506272<open>)] for JPA transaction
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1499651978 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@31d1a664]
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2043506272<open>)]
2025-06-05 01:13:24 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:24 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1499651978 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:24 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:24 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:13:24 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4514.625, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:13:24 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:13:24 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:24 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:24 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:24 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:33 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1987501094<open>)] for JPA transaction
2025-06-05 01:13:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@525732913 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@31ac3b93]
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:33 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1987501094<open>)]
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@525732913 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1987501094<open>)] after transaction
2025-06-05 01:13:33 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 764C8BFCD10D54F7C88FEA45668F7715
2025-06-05 01:13:33 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(80707866<open>)] for JPA transaction
2025-06-05 01:13:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1579533909 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20594080]
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:33 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(80707866<open>)]
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1579533909 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(80707866<open>)] after transaction
2025-06-05 01:13:33 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:13:33 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:13:33 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2dff33b7] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@41efd289] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@53f03132
2025-06-05 01:13:33 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:33 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@14494809 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@859554639 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@569488374 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1347189219 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@966408279 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1423357328 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:33 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:33 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1172777557<open>)] for JPA transaction
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@196304803 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@76264393]
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1172777557<open>)]
2025-06-05 01:13:33 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:33 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@196304803 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:33 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:33 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:13:33 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4514.625, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:13:33 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:13:33 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:33 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:34 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:34 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:35 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1782139761<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1876506090 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@37fabe8c]
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1782139761<open>)]
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1876506090 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1782139761<open>)] after transaction
2025-06-05 01:13:35 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 8F0080EAAB8294A18AB14CFD9EE99F90
2025-06-05 01:13:35 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(816870040<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@858987947 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@419de4a3]
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(816870040<open>)]
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@858987947 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(816870040<open>)] after transaction
2025-06-05 01:13:35 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:13:35 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:13:35 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:35 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@210f8451]
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8990dea] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55693da4] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d8e7266
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1009686035 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1956506299 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@295198935 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@31683251 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1228268178 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1390809405 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5d23af43
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4514.625, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1898527607 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:35 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e7d24dc] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3475680e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7147e839] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7147e839] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3475680e
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d4ef18c
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48bf2599] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48bf2599] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7e7d24dc
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@28fdb148
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4311.395, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1791322742 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@363048823 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1701129861 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:35 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:35 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:35 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:13:35 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@3306178f
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@63e0442b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@60598db7] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43b73483
2025-06-05 01:13:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=d0e9d04c-7147-40bb-8d10-05a84cdbb66f, currentPrice=203.23, noOfStocks=1, id=23, transactionTime=Thu Jun 05 01:13:35 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=28, trancationAmount=5688.604999999999, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4311.395, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1687761259 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@2076625885 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1565449086 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@474050527 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@838735701 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@2091629204 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(40))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(40)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(40).symbol]

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(40)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=d0e9d04c-7147-40bb-8d10-05a84cdbb66f, currentPrice=203.23, noOfStocks=1, id=23, transactionTime=Thu Jun 05 01:13:35 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=28, trancationAmount=5688.604999999999, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4311.395, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(40) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(40))@824363908 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:13:35 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(70863664<open>)] for JPA transaction
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:13:35 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:13:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(70863664<open>)]
2025-06-05 01:13:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:13:35 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 38 objects
2025-06-05 01:13:35 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=28, trancationAmount=5688.604999999999, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:13:35 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:13:35 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:13:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:35 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:13:35 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=4311.395, trans (truncated)...]
2025-06-05 01:13:35 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:35 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:13:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:13:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:13:42 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1425435195<open>)] for JPA transaction
2025-06-05 01:13:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@33635509 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e67a306]
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:42 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1425435195<open>)]
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@33635509 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1425435195<open>)] after transaction
2025-06-05 01:13:42 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 4ED5B445832DC896AABC1AA5EEFC9ED7
2025-06-05 01:13:42 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(879773875<open>)] for JPA transaction
2025-06-05 01:13:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1473147031 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@64a29514]
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:42 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(879773875<open>)]
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1473147031 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(879773875<open>)] after transaction
2025-06-05 01:13:42 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:13:42 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:13:42 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7cc54f91] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b8552a0] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:13:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2cce84c0
2025-06-05 01:13:42 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:13:42 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@835812536 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1541582491 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@2005384932 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1988406366 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1275738762 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@47371238 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:13:42 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:13:42 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1845610304<open>)] for JPA transaction
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:13:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@559523209 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@64d526a]
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1845610304<open>)]
2025-06-05 01:13:42 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:13:42 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@559523209 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:13:42 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:13:42 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:13:42 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4311.395, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:13:42 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:13:42 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:42 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:13:42 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:13:42 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:08 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(751158601<open>)] for JPA transaction
2025-06-05 01:14:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@589322554 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3cc792ac]
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:08 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(751158601<open>)]
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@589322554 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(751158601<open>)] after transaction
2025-06-05 01:14:08 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A0D18A48FA3B59151197CAED13A0A611
2025-06-05 01:14:08 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(275273496<open>)] for JPA transaction
2025-06-05 01:14:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1892206669 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f760729]
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:08 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(275273496<open>)]
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1892206669 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(275273496<open>)] after transaction
2025-06-05 01:14:08 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:14:08 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:14:08 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34748de2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3980104a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:08 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e328fd5
2025-06-05 01:14:08 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:08 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@2085307464 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1013519733 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@889883174 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1892214021 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1451726416 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@573698888 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:08 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:08 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(98737926<open>)] for JPA transaction
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@875109550 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@156ff924]
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(98737926<open>)]
2025-06-05 01:14:08 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:08 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@875109550 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:08 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:08 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:14:08 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4311.395, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:14:08 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:14:08 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:08 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:09 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:09 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:11 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1009030982<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@602177973 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6235e4fb]
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1009030982<open>)]
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:11 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@602177973 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1009030982<open>)] after transaction
2025-06-05 01:14:11 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from B244407D52F0BD038F0049F554AF7969
2025-06-05 01:14:11 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(419609869<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1519675815 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20980b90]
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(419609869<open>)]
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:11 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1519675815 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(419609869<open>)] after transaction
2025-06-05 01:14:11 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:14:11 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:14:11 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:11 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@44b7a38a]
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1791764a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e433cc1] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d1b625b
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1514691338 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@648001913 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@969250002 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1113513113 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1515610067 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@31027601 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6ab402b7
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4311.395, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1400416025 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:11 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35afa047] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11375bb2] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@784ba7f8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@784ba7f8] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@11375bb2
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@274d911
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7efbf815] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7efbf815] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@35afa047
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@23094397
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4108.165, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@301431252 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@318454279 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1010968644 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:11 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:11 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:11 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:14:11 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@1125deae
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72353260] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d5a5226] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bdbe00a
2025-06-05 01:14:11 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=709f01dc-c233-4030-9166-3cbd9aa0a592, currentPrice=203.23, noOfStocks=1, id=24, transactionTime=Thu Jun 05 01:14:11 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=29, trancationAmount=5891.834999999998, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4108.165, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1266839553 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@996566478 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1856732364 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@201429757 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1415313668 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1545322068 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(41))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(41)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(41).symbol]

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(41)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=709f01dc-c233-4030-9166-3cbd9aa0a592, currentPrice=203.23, noOfStocks=1, id=24, transactionTime=Thu Jun 05 01:14:11 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=29, trancationAmount=5891.834999999998, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4108.165, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(41) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(41))@1549687404 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:14:11 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(411830176<open>)] for JPA transaction
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:11 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:11 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(411830176<open>)]
2025-06-05 01:14:11 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:11 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 39 objects
2025-06-05 01:14:11 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=29, trancationAmount=5891.834999999998, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:14:11 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:14:11 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:14:11 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:11 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:14:11 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=4108.165, trans (truncated)...]
2025-06-05 01:14:11 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:11 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:14:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:14:18 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(757576344<open>)] for JPA transaction
2025-06-05 01:14:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1805258619 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@33381828]
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:18 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(757576344<open>)]
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1805258619 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(757576344<open>)] after transaction
2025-06-05 01:14:18 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 1E65B687CE04223977951D19EF83259E
2025-06-05 01:14:18 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1118048723<open>)] for JPA transaction
2025-06-05 01:14:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1826117298 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42f4ef0d]
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:18 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1118048723<open>)]
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1826117298 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1118048723<open>)] after transaction
2025-06-05 01:14:18 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:14:18 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:14:18 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f317442] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@790245a9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:18 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c9c8d6a
2025-06-05 01:14:18 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:18 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1637691499 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1006305510 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1648851839 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@541065616 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@685138843 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1263118935 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:18 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:18 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1440166688<open>)] for JPA transaction
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1591437628 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f87bfb3]
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1440166688<open>)]
2025-06-05 01:14:18 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:18 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1591437628 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:18 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:18 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:14:18 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4108.165, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:14:18 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:14:18 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:18 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:18 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:18 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:35 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1749847354<open>)] for JPA transaction
2025-06-05 01:14:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@568177088 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@498c9d74]
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:35 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1749847354<open>)]
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@568177088 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1749847354<open>)] after transaction
2025-06-05 01:14:35 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from BB7EC36CF9D6BF19A7650B148FBDAC50
2025-06-05 01:14:35 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1339655069<open>)] for JPA transaction
2025-06-05 01:14:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1878383753 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4e2e95b1]
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:35 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1339655069<open>)]
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1878383753 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1339655069<open>)] after transaction
2025-06-05 01:14:35 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:14:35 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:14:35 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6a3db74e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22ecd54] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3db36daf
2025-06-05 01:14:35 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:35 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@391733869 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@53370211 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@800231112 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@105600024 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1516049590 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@728342491 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:35 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:35 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1090903871<open>)] for JPA transaction
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@113941174 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@c0d7bab]
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1090903871<open>)]
2025-06-05 01:14:35 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:35 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@113941174 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:35 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:35 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:14:35 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=4108.165, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:14:35 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:14:35 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:35 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:35 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:35 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:37 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(542392367<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1969827492 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@280c269a]
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(542392367<open>)]
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1969827492 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(542392367<open>)] after transaction
2025-06-05 01:14:37 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 3460E1A2689840313748B1769B4DAF32
2025-06-05 01:14:37 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(800282456<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1667101378 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@8f41db2]
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(800282456<open>)]
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:37 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1667101378 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(800282456<open>)] after transaction
2025-06-05 01:14:37 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:14:37 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:14:37 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:37 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@27d6f551]
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@35138428] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@257f93a6] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63813abe
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@662916160 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1624154940 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@684836353 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@373517723 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@723501663 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1046299459 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@588e4c09
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=4108.165, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1178795360 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1fe91bae] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d030d58] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6843cb8b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6843cb8b] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@7d030d58
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43e42d96
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@392d4ff3] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@392d4ff3] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1fe91bae
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@272e4ef
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3904.935, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1735797030 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@879104623 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1570345391 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:37 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:14:37 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@69ad5170
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1924183d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a01ecb8] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4730c8ff
2025-06-05 01:14:37 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=c3c11893-27ce-40da-821f-f5062b7484cb, currentPrice=203.23, noOfStocks=1, id=25, transactionTime=Thu Jun 05 01:14:37 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=30, trancationAmount=6095.064999999998, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3904.935, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1491092160 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1047576571 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@576989343 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1731133718 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1023654257 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@112674381 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(42))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(42)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(42).symbol]

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(42)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=c3c11893-27ce-40da-821f-f5062b7484cb, currentPrice=203.23, noOfStocks=1, id=25, transactionTime=Thu Jun 05 01:14:37 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=30, trancationAmount=6095.064999999998, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3904.935, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(42) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(42))@1926404805 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:14:37 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(917319655<open>)] for JPA transaction
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:37 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:37 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(917319655<open>)]
2025-06-05 01:14:37 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:37 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 40 objects
2025-06-05 01:14:37 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=30, trancationAmount=6095.064999999998, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:14:37 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:14:37 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:14:37 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:37 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:14:37 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=3904.935, trans (truncated)...]
2025-06-05 01:14:37 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:37 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:14:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:14:52 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1052778601<open>)] for JPA transaction
2025-06-05 01:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1153446174 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40af3442]
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:52 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1052778601<open>)]
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1153446174 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1052778601<open>)] after transaction
2025-06-05 01:14:52 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from EB38B1A54100D321CCBD4F8BBABB1B19
2025-06-05 01:14:52 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1653755352<open>)] for JPA transaction
2025-06-05 01:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2073442988 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f4de442]
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:52 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1653755352<open>)]
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2073442988 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1653755352<open>)] after transaction
2025-06-05 01:14:52 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:14:52 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:14:52 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ed9e735] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@680b1e6] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:52 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d5a8129
2025-06-05 01:14:52 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:52 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1043568256 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@820629003 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1499705512 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@476312011 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1053221713 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1084353300 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:52 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:52 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1969793690<open>)] for JPA transaction
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1887619073 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1054b8f9]
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1969793690<open>)]
2025-06-05 01:14:52 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:52 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1887619073 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:52 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:52 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:14:52 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3904.935, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:14:52 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:14:52 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:52 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:52 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:52 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:53 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1325767978<open>)] for JPA transaction
2025-06-05 01:14:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@771852500 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20202953]
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:53 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1325767978<open>)]
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@771852500 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1325767978<open>)] after transaction
2025-06-05 01:14:53 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 231BE3D6799259F7C6659B6902F53585
2025-06-05 01:14:53 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1603124584<open>)] for JPA transaction
2025-06-05 01:14:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2134501446 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f0e94f0]
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:53 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1603124584<open>)]
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2134501446 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1603124584<open>)] after transaction
2025-06-05 01:14:53 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:14:53 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:14:53 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69ad946a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@79fc906e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:53 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@796b9cc1
2025-06-05 01:14:53 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:53 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1662734193 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@461832608 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1883844026 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1081703628 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@2032190325 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1510561776 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:53 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:53 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1052888861<open>)] for JPA transaction
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@809065568 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5086533f]
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1052888861<open>)]
2025-06-05 01:14:53 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:53 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@809065568 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:53 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:53 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:14:53 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3904.935, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:14:53 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:14:53 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:53 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:53 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:53 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:55 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1935468550<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@69589635 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f7d8eb0]
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1935468550<open>)]
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@69589635 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1935468550<open>)] after transaction
2025-06-05 01:14:55 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from B2B3F82E44179DD6810B82994705C905
2025-06-05 01:14:55 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(796673106<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1610291778 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9d7630e]
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(796673106<open>)]
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:55 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1610291778 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(796673106<open>)] after transaction
2025-06-05 01:14:55 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:14:55 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:14:55 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:55 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@742d80f]
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ccfa86b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6ddc855d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c78863d
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@821028063 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1485301088 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@139481630 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@842798553 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@2101007965 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@443650175 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@859e654
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3904.935, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1687201749 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:55 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f07a85e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d6bba30] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50c6f891] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50c6f891] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4d6bba30
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@73823187
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43a66943] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43a66943] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@2f07a85e
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47ab5367
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3701.705, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@506276745 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@706524280 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1379988599 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:55 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:55 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:55 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:14:55 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@2f66fccd
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68c07759] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@70d87e18] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61e31773
2025-06-05 01:14:55 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=48a9f060-bc25-4f66-bf51-57cea378dd83, currentPrice=203.23, noOfStocks=1, id=26, transactionTime=Thu Jun 05 01:14:55 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=31, trancationAmount=6298.294999999997, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3701.705, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1478989626 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@472192414 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1915644555 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2038365041 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@486812963 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@700011256 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(43))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(43)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(43).symbol]

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(43)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=48a9f060-bc25-4f66-bf51-57cea378dd83, currentPrice=203.23, noOfStocks=1, id=26, transactionTime=Thu Jun 05 01:14:55 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=31, trancationAmount=6298.294999999997, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3701.705, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(43) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(43))@2004195374 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:14:55 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(295311519<open>)] for JPA transaction
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:14:55 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:14:55 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(295311519<open>)]
2025-06-05 01:14:55 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:14:55 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 41 objects
2025-06-05 01:14:55 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=31, trancationAmount=6298.294999999997, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:14:55 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:14:55 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:14:55 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:55 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:14:55 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=3701.705, trans (truncated)...]
2025-06-05 01:14:55 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:55 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:14:57 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(180472335<open>)] for JPA transaction
2025-06-05 01:14:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@820400988 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@80632fa]
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:57 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(180472335<open>)]
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@820400988 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(180472335<open>)] after transaction
2025-06-05 01:14:57 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 54EC8B749C8221C230D01934F5873859
2025-06-05 01:14:57 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(917586321<open>)] for JPA transaction
2025-06-05 01:14:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@844500363 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2f9d8929]
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:57 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(917586321<open>)]
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@844500363 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(917586321<open>)] after transaction
2025-06-05 01:14:57 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:14:57 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:14:57 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b922c75] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76afb702] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:14:57 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4db34a68
2025-06-05 01:14:57 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:14:57 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1786484428 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@152925645 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1967171 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1483977495 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1854440227 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@207167522 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:14:57 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:14:57 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1360380662<open>)] for JPA transaction
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:14:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1528195055 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f1159c5]
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1360380662<open>)]
2025-06-05 01:14:57 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:14:57 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1528195055 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:14:57 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:14:57 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:14:57 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3701.705, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:14:57 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:14:57 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:57 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:14:57 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:14:57 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:15:07 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1494658490<open>)] for JPA transaction
2025-06-05 01:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1834758915 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4bc51c30]
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:07 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1494658490<open>)]
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1834758915 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1494658490<open>)] after transaction
2025-06-05 01:15:07 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 1D15CF0F980CB55FC4AB2EB13F5B588C
2025-06-05 01:15:07 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(116780019<open>)] for JPA transaction
2025-06-05 01:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2093102444 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5545b793]
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:07 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(116780019<open>)]
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2093102444 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(116780019<open>)] after transaction
2025-06-05 01:15:07 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:15:07 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:15:07 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3eb30a6f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ade1174] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:15:07 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@13a3e04a
2025-06-05 01:15:07 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:07 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1994654368 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@403154462 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@701377998 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@177812844 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1556006813 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@2041363778 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:15:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:07 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(2099940807<open>)] for JPA transaction
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1453093485 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@52d87618]
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2099940807<open>)]
2025-06-05 01:15:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1453093485 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:15:07 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:15:07 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3701.705, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:15:07 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:15:07 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:15:07 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:15:08 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:08 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1908419336<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@887390095 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@d92f4e1]
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1908419336<open>)]
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@887390095 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1908419336<open>)] after transaction
2025-06-05 01:15:10 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from CA3A0E64EEDB50D38ACD372C3F46C711
2025-06-05 01:15:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(643127135<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@646608681 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2cb3fe84]
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(643127135<open>)]
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@646608681 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(643127135<open>)] after transaction
2025-06-05 01:15:10 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:15:10 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:15:10 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:10 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@214f0355]
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@60cd4516] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3941a7f1] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@376a5297
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1292739354 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1157321099 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1887193565 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@915595955 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@371692040 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@147779150 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e319e1c
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3701.705, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@764117919 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b9dc03e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@218ebeef] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d08264b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d08264b] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@218ebeef
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@698a6476
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@122e7ddf] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@122e7ddf] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@1b9dc03e
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@eb85e53
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3498.475, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@1380149534 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@169688493 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1286371220 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:10 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:15:10 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@1120af80
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11ed6a74] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5258b66] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@306345a0
2025-06-05 01:15:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=32, trancationAmount=6501.524999999997, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=43d5010b-dd16-4926-9812-705b8687ebf1, currentPrice=203.23, noOfStocks=1, id=27, transactionTime=Thu Jun 05 01:15:10 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3498.475, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1327483753 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1820113429 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@329643181 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@903366478 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@70092319 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@227027101 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(44))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(44)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(44).symbol]

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(44)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=32, trancationAmount=6501.524999999997, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=43d5010b-dd16-4926-9812-705b8687ebf1, currentPrice=203.23, noOfStocks=1, id=27, transactionTime=Thu Jun 05 01:15:10 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3498.475, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(44) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(44))@892840871 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:15:10 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(507092662<open>)] for JPA transaction
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(507092662<open>)]
2025-06-05 01:15:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 42 objects
2025-06-05 01:15:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=32, trancationAmount=6501.524999999997, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:15:10 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:15:10 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:15:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:15:10 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:15:10 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=3498.475, trans (truncated)...]
2025-06-05 01:15:10 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:10 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:15:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:15:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:15:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2143726653<open>)] for JPA transaction
2025-06-05 01:15:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1125949271 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@63ff41b0]
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2143726653<open>)]
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1125949271 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2143726653<open>)] after transaction
2025-06-05 01:15:25 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 4FA2EF252FA0F6A672CF0C77AD5B2FE8
2025-06-05 01:15:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1639112381<open>)] for JPA transaction
2025-06-05 01:15:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1118259781 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4c6ab559]
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:25 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1639112381<open>)]
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1118259781 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1639112381<open>)] after transaction
2025-06-05 01:15:25 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:15:25 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:15:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28100cfa] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@63d6f79d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:15:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1591ee97
2025-06-05 01:15:25 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:25 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@893101638 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@106967231 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@474947759 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1400547005 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1000026882 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1022953734 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:15:25 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:25 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1147225490<open>)] for JPA transaction
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@273283841 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@44bc6a62]
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1147225490<open>)]
2025-06-05 01:15:25 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:25 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@273283841 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:25 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:15:25 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:15:25 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3498.475, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:15:25 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:15:25 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:15:25 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:15:25 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:25 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:15:28 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(598783154<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@157800506 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@207b7a31]
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(598783154<open>)]
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:28 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@157800506 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(598783154<open>)] after transaction
2025-06-05 01:15:28 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A78050075A69AF71681FF5DF7E2BBC71
2025-06-05 01:15:28 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1312496348<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1671680211 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3017539]
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1312496348<open>)]
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:28 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1671680211 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1312496348<open>)] after transaction
2025-06-05 01:15:28 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:15:28 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:15:28 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:28 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6413950f]
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d0c281e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5cf615d] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5eccaca4
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1491654159 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@206013162 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@772426176 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@345237910 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@173350309 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@976588503 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34f95cb9
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3498.475, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1201839007 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:28 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27622e9] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea776ca] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@723e647b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@723e647b] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@3ea776ca
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@a79954
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36439d82] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36439d82] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@27622e9
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f1078b5
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3295.245, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@300122764 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@526368394 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@1973845433 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:28 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:28 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:28 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:15:28 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@707e5188
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c0fb470] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@eff5668] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@21588d3a
2025-06-05 01:15:28 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=33, trancationAmount=6704.7549999999965, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=89c8a88b-daa3-4f4c-a135-aca49b86d70f, currentPrice=203.23, noOfStocks=1, id=28, transactionTime=Thu Jun 05 01:15:28 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3295.245, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1470382160 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1709376719 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1000259366 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2025042046 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@224451064 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1884840423 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(45))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(45)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(45).symbol]

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(45)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=33, trancationAmount=6704.7549999999965, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=89c8a88b-daa3-4f4c-a135-aca49b86d70f, currentPrice=203.23, noOfStocks=1, id=28, transactionTime=Thu Jun 05 01:15:28 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3295.245, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(45) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(45))@2147214227 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:15:28 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1215823949<open>)] for JPA transaction
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:15:28 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:15:28 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1215823949<open>)]
2025-06-05 01:15:28 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:15:28 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 43 objects
2025-06-05 01:15:28 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=33, trancationAmount=6704.7549999999965, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:15:28 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:15:28 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:15:28 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:15:28 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:15:28 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=3295.245, trans (truncated)...]
2025-06-05 01:15:28 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:15:28 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:15:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:15:42 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:16:07 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(679622410<open>)] for JPA transaction
2025-06-05 01:16:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@288335925 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40874125]
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:07 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(679622410<open>)]
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@288335925 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(679622410<open>)] after transaction
2025-06-05 01:16:07 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 35F9037112824A1915535C41458FF821
2025-06-05 01:16:07 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(875387536<open>)] for JPA transaction
2025-06-05 01:16:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1903461543 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59119e4a]
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:07 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(875387536<open>)]
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1903461543 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(875387536<open>)] after transaction
2025-06-05 01:16:07 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:16:07 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:16:07 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@21f05219] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7680d395] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:16:07 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@263c1d8c
2025-06-05 01:16:07 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:07 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1286213192 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1337644201 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@2083917164 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@1930345418 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1875522477 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1984736609 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:16:07 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:07 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1404711691<open>)] for JPA transaction
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1388606241 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42c0cfd9]
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1404711691<open>)]
2025-06-05 01:16:07 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:07 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1388606241 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:07 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:16:07 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:16:07 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3295.245, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:16:07 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:16:07 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:16:07 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:16:07 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:07 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:16:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1352000491<open>)] for JPA transaction
2025-06-05 01:16:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@242935117 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f031084]
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1352000491<open>)]
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@242935117 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1352000491<open>)] after transaction
2025-06-05 01:16:09 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A3EE2543F86BD48918B5FDF7485995CD
2025-06-05 01:16:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(152444096<open>)] for JPA transaction
2025-06-05 01:16:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@169744495 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4f94e4ab]
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:09 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(152444096<open>)]
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@169744495 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(152444096<open>)] after transaction
2025-06-05 01:16:09 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:16:09 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:16:09 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2002e25f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@785e418f] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:16:09 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7afec98b
2025-06-05 01:16:09 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:09 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1384433006 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@629100077 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@388356241 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@711628043 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1588697757 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@31500608 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:16:09 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:09 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(1444359125<open>)] for JPA transaction
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@401605753 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@740889e5]
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1444359125<open>)]
2025-06-05 01:16:09 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:09 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@401605753 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:09 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:16:09 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:16:09 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3295.245, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:16:09 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:16:09 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:16:09 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:16:09 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:09 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:16:10 [DEBUG] o.s.security.web.FilterChainProxy - Securing POST /api/buy
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(1560705508<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@533737140 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@213f6867]
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(1560705508<open>)]
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@533737140 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(1560705508<open>)] after transaction
2025-06-05 01:16:10 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from E0094E840B737FEBFE7C47E428FE2F07
2025-06-05 01:16:10 [DEBUG] o.s.security.web.FilterChainProxy - Secured POST /api/buy
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(473273432<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1600894550 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@779f422c]
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(473273432<open>)]
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:10 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1600894550 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(473273432<open>)] after transaction
2025-06-05 01:16:10 [DEBUG] o.s.web.servlet.DispatcherServlet - POST "/api/buy", parameters={}
2025-06-05 01:16:10 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.BuyRequestController#buyRequest(BuyRequestDTO, HttpSession)
2025-06-05 01:16:10 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:10 [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [BuyRequestDTO(symbol=AAPL, quantity=1, price=203.23)]
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [com.tradingapplication.TradingApplication.Service.BuyService.buyStock]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e7b7ac6]
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f584769] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6a70ad0e] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@342eb83e
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@240941430 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1432365100 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@936180207 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@190804022 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1722105826 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@852511314 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(6))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6dc623cb
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Stock(6).symbol) 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(6)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(6).symbol]

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(6)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3295.245, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0 where s1_0.symbol=?
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(6) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(6))@1793165429 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:16:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Portfolio(10))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4410ea77] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@cb3abf5] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b281b23] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b281b23] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@cb3abf5
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@4ca2d7ba
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@19fa3222
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d93799a] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d93799a] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks] overrode previous registration : org.hibernate.sql.ast.tree.from.LazyTableGroup@4410ea77
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.JpaCriteriaParameter@5481411d
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@349275dd
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmEntityValuedSimplePath(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).price]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).quantity]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).symbol]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).trancationAmount]
 |  +-EntityDelayedFetchImpl [com.tradingapplication.TradingApplication.Entity.Portfolio(10).user]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Portfolio(10).username]

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10)) {
          primaryTableReference : portfolio as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
            left  join LazyTableGroup (u1 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (u2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).user) {
            }
             join LazyTableGroup (s2 : com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks) {
            }
          }
        }
      }
    }

2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3092.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select p1_0.id,p1_0.price,p1_0.quantity,p1_0.stock_id,p1_0.symbol,p1_0.trancation_amount,p1_0.user_id,p1_0.username from portfolio p1_0 where p1_0.user_id=? and p1_0.stock_id=?
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10))@879762189 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Portfolio))
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).user -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).user)@1556625962 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.user])@1924239162)
	  com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks -> EntityDelayedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Portfolio(10).stocks)@140187710 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.Portfolio.stocks])@979163488)

2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:16:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:16:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:16:10 [DEBUG] o.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - insert into transaction_buy_sell (stock_name,current_price,no_of_stocks,order_id,total_amount,transaction_time,transaction_type,user_id,id) values (?,?,?,?,?,?,?,?,default)
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results - Initializer list is empty
2025-06-05 01:16:10 [DEBUG] o.h.id.IdentifierGeneratorHelper - Extracted generated values [com.tradingapplication.TradingApplication.Entity.TransactionBuySell]: [Ljava.lang.Object;@5b9bea63
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ba5d2be] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7fe9e75b] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5e4a1b
2025-06-05 01:16:10 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=34, trancationAmount=6907.984999999996, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=fe91016a-7a88-4151-a97b-ac4774e1852b, currentPrice=203.23, noOfStocks=1, id=29, transactionTime=Thu Jun 05 01:16:10 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3092.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1361078163 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@2008171908 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@2005551134 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@176870495 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1489249890 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@1027589787 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : s1_0
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.Stock(46))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.Stock] for NavigablePath [com.tradingapplication.TradingApplication.Entity.Stock] 
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.Stock(46)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).change]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).changePercent]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).domain]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).high]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).lastUpdated]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).latestTradingDay]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).low]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).open]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).previousClose]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).price]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.Stock(46).symbol]

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : com.tradingapplication.TradingApplication.Entity.Stock(46)) {
          primaryTableReference : stock as s1_0
        }
      }
    }

2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 6 objects
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=34, trancationAmount=6907.984999999996, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.23, StockName=AAPL, orderId=fe91016a-7a88-4151-a97b-ac4774e1852b, currentPrice=203.23, noOfStocks=1, id=29, transactionTime=Thu Jun 05 01:16:10 IST 2025, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserTable{userLog=com.tradingapplication.TradingApplication.Entity.UserLog#test, portfolio=<uninitialized>, userAccountDetails=com.tradingapplication.TradingApplication.Entity.UserAccountDetails#1, name=test, profileImage=null, userId=1, email=test@gmail.com, stocks=<uninitialized>, transaction=<uninitialized>, username=test}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserAccountDetails{walletId=1, balance=3092.015, userdetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select s1_0.id,s1_0.change,s1_0.change_percent,s1_0.domain,s1_0.high,s1_0.last_updated,s1_0.latest_trading_day,s1_0.low,s1_0.open,s1_0.previous_close,s1_0.price,s1_0.symbol from stock s1_0
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.Stock(46) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.Stock(46))@1820121731 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.Stock))

2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select t1_0.user_id,t1_0.id,t1_0.stock_name,t1_0.current_price,t1_0.no_of_stocks,t1_0.order_id,t1_0.total_amount,t1_0.transaction_time,t1_0.transaction_type from transaction_buy_sell t1_0 where t1_0.user_id=?
2025-06-05 01:16:10 [DEBUG] o.h.s.results.internal.ResultsHelper - Collection fully initialized: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1]
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(380021518<open>)] for JPA transaction
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Participating in existing transaction
2025-06-05 01:16:10 [DEBUG] o.h.j.i.PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-06-05 01:16:10 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - select gre1_0.stock_symbol,gre1_0.average_buy_value,gre1_0.average_sell_value,gre1_0.current_holdings,gre1_0.current_profit_percentage,gre1_0.current_profit_value,gre1_0.profit_value,gre1_0.total_buy_price,gre1_0.total_buy_quantity,gre1_0.total_profit_percentage,gre1_0.total_sell_price,gre1_0.total_sell_quantity from growth_report_entity gre1_0 where gre1_0.stock_symbol=?
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(380021518<open>)]
2025-06-05 01:16:10 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Processing flush-time cascades
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Dirty checking collections
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.portfolio#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.stocks#1] (uninitialized)
2025-06-05 01:16:10 [DEBUG] o.h.engine.internal.Collections - Collection found: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1], was: [com.tradingapplication.TradingApplication.Entity.UserTable.transaction#1] (initialized)
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 44 objects
2025-06-05 01:16:10 [DEBUG] o.h.e.i.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - Listing entities:
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=141.22, symbol=NVDA, high=142.39, low=139.545, price=141.7001, change=0.4801, domain=nvidia.com, changePercent=0.34, latestTradingDay=2025-06-05, id=8, open=142.19}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=91f0a4c2-1a8c-4dff-9794-ffb5d826bcf1, currentPrice=203.195, noOfStocks=1, id=10, transactionTime=2025-06-05 01:06:37.221, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=1217.94, symbol=NFLX, high=1242.56, low=1219.88, price=1239.94, change=22.0, domain=netflix.com, changePercent=1.8063, latestTradingDay=2025-06-05, id=7, open=1220.735}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=11e992bd-df0f-4c36-be46-67f54b4d6e52, currentPrice=203.195, noOfStocks=1, id=9, transactionTime=2025-06-05 01:06:25.894, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=20.29, symbol=INTC, high=20.5, low=20.01, price=20.35, change=0.06, domain=intel.com, changePercent=0.2957, latestTradingDay=2025-06-05, id=10, open=20.34}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=37852b76-1851-4f37-b1ae-b353aa6913a7, currentPrice=203.195, noOfStocks=1, id=8, transactionTime=2025-06-05 01:03:58.465, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=412.49, symbol=ADBE, high=415.94, low=410.08, price=413.69, change=1.2, domain=adobe.com, changePercent=0.2909, latestTradingDay=2025-06-05, id=9, open=411.54}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=aafa2bbb-d51d-43e6-ac78-f1df40c7ed72, currentPrice=203.195, noOfStocks=1, id=7, transactionTime=2025-06-05 01:02:57.146, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=b242541b-c3ed-41d4-919a-dc5dd2a9d7e8, currentPrice=203.195, noOfStocks=1, id=14, transactionTime=2025-06-05 01:07:41.454, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Portfolio{symbol=AAPL, quantity=34, trancationAmount=6907.984999999996, price=203.08, id=1, user=com.tradingapplication.TradingApplication.Entity.UserTable#1, stocks=com.tradingapplication.TradingApplication.Entity.Stock#1, username=null}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=abfac529-040f-4223-9c3c-baa12897a4b6, currentPrice=203.195, noOfStocks=1, id=13, transactionTime=2025-06-05 01:07:33.874, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=8d956531-7dde-4e5e-bcc1-f8265d1b4a7b, currentPrice=203.195, noOfStocks=1, id=12, transactionTime=2025-06-05 01:06:42.597, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=46eed51e-471a-4c62-88af-59d8483c95cc, currentPrice=203.195, noOfStocks=1, id=11, transactionTime=2025-06-05 01:06:41.408, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=812.32, StockName=AAPL, orderId=0203f4bf-b969-4440-bd96-84b693979476, currentPrice=203.08, noOfStocks=4, id=2, transactionTime=2025-06-05 00:49:04.804, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.08, StockName=AAPL, orderId=4d9c8c47-7c4c-4e1b-8ac6-92a4cf98aa98, currentPrice=203.08, noOfStocks=1, id=1, transactionTime=2025-06-05 00:48:51.118, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=166.18, symbol=GOOGL, high=168.1806, low=166.36, price=167.66, change=1.48, domain=abc.xyz, changePercent=0.8906, latestTradingDay=2025-06-05, id=2, open=166.735}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=203.27, symbol=AAPL, high=206.24, low=202.1, price=203.23, change=-0.04, domain=apple.com, changePercent=-0.0197, latestTradingDay=2025-06-05, id=1, open=202.91}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.UserLog{password=$2a$10$09gGOYt9WpsidAAWVwLfOOMIC4djRDPeNuXw5Rp8IENsQCeaSyBk., role=ROLE_USER, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1, username=test}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=205.71, symbol=AMZN, high=208.18, low=205.18, price=207.72, change=2.01, domain=amazon.com, changePercent=0.9771, latestTradingDay=2025-06-05, id=4, open=206.55}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.TransactionBuySell{transactionType=Buy, totalAmount=203.195, StockName=AAPL, orderId=44a3728c-1bbe-4827-9bf5-3f6ab42bbc57, currentPrice=203.195, noOfStocks=1, id=6, transactionTime=2025-06-05 01:02:22.924, userDetails=com.tradingapplication.TradingApplication.Entity.UserTable#1}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - com.tradingapplication.TradingApplication.Entity.Stock{lastUpdated=null, previousClose=462.97, symbol=MSFT, high=465.69, low=463.0201, price=464.3761, change=1.4061, domain=microsoft.com, changePercent=0.3037, latestTradingDay=2025-06-05, id=3, open=464.0}
2025-06-05 01:16:10 [DEBUG] o.h.internal.util.EntityPrinter - More......
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - update user_account_details set balance=? where wallet_id=?
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - update portfolio set price=?,quantity=?,stock_id=?,symbol=?,trancation_amount=?,user_id=?,username=? where id=?
2025-06-05 01:16:10 [DEBUG] org.hibernate.SQL - update growth_report_entity set average_buy_value=?,average_sell_value=?,current_holdings=?,current_profit_percentage=?,current_profit_value=?,profit_value=?,total_buy_price=?,total_buy_quantity=?,total_profit_percentage=?,total_sell_price=?,total_sell_quantity=? where stock_symbol=?
2025-06-05 01:16:10 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:16:10 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
2025-06-05 01:16:10 [DEBUG] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [BuyResponseDTO(status=success, message=Buy transaction successful., remainingBalance=3092.015, trans (truncated)...]
2025-06-05 01:16:10 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:10 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-05 01:16:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-05 01:16:12 [DEBUG] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-05 01:16:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /stock/AAPL
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(2035854456<open>)] for JPA transaction
2025-06-05 01:16:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1589814413 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a23af66]
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:22 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(2035854456<open>)]
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1589814413 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(2035854456<open>)] after transaction
2025-06-05 01:16:22 [DEBUG] o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from E6763D074D995E27469391D09D994324
2025-06-05 01:16:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /stock/AAPL
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(472362502<open>)] for JPA transaction
2025-06-05 01:16:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2045419575 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57eb6f10]
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:22 [DEBUG] org.hibernate.SQL - select ul1_0.username,ul1_0.password,ul1_0.role,ud1_0.user_id,ud1_0.email,ud1_0.name,ud1_0.profile_image,uad1_0.wallet_id,uad1_0.balance,ud1_0.username from user_log ul1_0 left join users ud1_0 on ul1_0.username=ud1_0.user_log_username left join user_account_details uad1_0 on uad1_0.wallet_id=ud1_0.user_account_details_wallet_id where ul1_0.username=?
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(472362502<open>)]
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2045419575 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(472362502<open>)] after transaction
2025-06-05 01:16:22 [DEBUG] o.s.web.servlet.DispatcherServlet - GET "/stock/AAPL", parameters={}
2025-06-05 01:16:22 [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.tradingapplication.TradingApplication.Controller.StockWebController#getStockDetails(String, Model, HttpSession)
2025-06-05 01:16:22 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.ast.create - Created new SQL alias : ut1_0
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(com.tradingapplication.TradingApplication.Entity.UserTable(2))] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable] 
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37db7ba1] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails] 
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59cbd044] with identifierForTableGroup [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] for NavigablePath [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog] 
2025-06-05 01:16:22 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@9a34819
2025-06-05 01:16:22 [DEBUG] o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.tradingapplication.TradingApplication.Entity.UserTable(2).username) 
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2)]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).email]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).name]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio]
 |  +-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).profileImage]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks]
 |  +-DelayedCollectionFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails]
 |  +-CircularFetchImpl [com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog]
 |  \-BasicFetch [com.tradingapplication.TradingApplication.Entity.UserTable(2).username]

2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ut1 : com.tradingapplication.TradingApplication.Entity.UserTable(2)) {
          primaryTableReference : users as ut1_0
          TableGroupJoins {
            left  join LazyTableGroup (uad1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails) {
            }
            left  join LazyTableGroup (ul1 : com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog) {
            }
          }
        }
      }
    }

2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-06-05 01:16:22 [DEBUG] org.hibernate.SQL - select ut1_0.user_id,ut1_0.email,ut1_0.name,ut1_0.profile_image,ut1_0.user_account_details_wallet_id,ut1_0.user_log_username,ut1_0.username from users ut1_0 where ut1_0.username=?
2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.results - Initializer list:
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).transaction)@1376965466 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.transaction))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).stocks)@1165573492 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.stocks))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2) -> EntityJoinedFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2))@1280511088 (SingleTableEntityPersister(com.tradingapplication.TradingApplication.Entity.UserTable))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userAccountDetails)@2050687847 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userAccountDetails])@579301282)
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio -> DelayedCollectionInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).portfolio)@1056409465 (PluralAttribute(com.tradingapplication.TradingApplication.Entity.UserTable.portfolio))
	  com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog -> EntitySelectFetchInitializer(com.tradingapplication.TradingApplication.Entity.UserTable(2).userLog)@845778766 (ToOneAttributeMapping(NavigableRole[com.tradingapplication.TradingApplication.Entity.UserTable.userLog])@1780571365)

2025-06-05 01:16:22 [DEBUG] org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2025-06-05 01:16:22 [DEBUG] org.hibernate.SQL - select uad1_0.wallet_id,uad1_0.balance,u1_0.user_id,u1_0.email,u1_0.name,u1_0.profile_image,ul1_0.username,ul1_0.password,ul1_0.role,u1_0.username from user_account_details uad1_0 left join users u1_0 on uad1_0.wallet_id=u1_0.user_account_details_wallet_id left join user_log ul1_0 on ul1_0.username=u1_0.user_log_username where uad1_0.wallet_id=?
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(636265759<open>)] for JPA transaction
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-06-05 01:16:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@732642780 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT] read-only
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - begin
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4abf87c8]
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Initiating transaction commit
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [SessionImpl(636265759<open>)]
2025-06-05 01:16:22 [DEBUG] o.h.e.t.internal.TransactionImpl - committing
2025-06-05 01:16:22 [DEBUG] o.s.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@732642780 wrapping conn10: url=jdbc:h2:mem:testdb user=ROOT]
2025-06-05 01:16:22 [DEBUG] o.s.orm.jpa.JpaTransactionManager - Not closing pre-bound JPA EntityManager after transaction
2025-06-05 01:16:22 [DEBUG] o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-05 01:16:22 [DEBUG] o.s.web.servlet.view.JstlView - View name [stockDetails], model {stock=StockRequestDTO(symbol=AAPL, price=203.23, open=202.91, high=206.24, low=202.1, previousClose=203.27, change=-0.04, changePercent=-0.0197, latestTradingDay=2025-06-05, domain=apple.com), balance=3092.015, org.springframework.validation.BindingResult.stock=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-05 01:16:22 [DEBUG] o.s.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/stockDetails.jsp]
2025-06-05 01:16:22 [DEBUG] o.s.security.web.FilterChainProxy - Securing GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:16:22 [DEBUG] o.s.security.web.FilterChainProxy - Secured GET /WEB-INF/views/stockDetails.jsp
2025-06-05 01:16:22 [DEBUG] o.s.o.j.s.OpenEntityManagerInViewInterceptor - Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2025-06-05 01:16:22 [DEBUG] o.s.web.servlet.DispatcherServlet - Completed 200 OK
